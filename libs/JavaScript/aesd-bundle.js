(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.RecordsAPI.BookmarkIntervalContent', null, global);
goog.exportSymbol('proto.RecordsAPI.BookmarkMeta', null, global);
goog.exportSymbol('proto.RecordsAPI.BookmarkMetaList', null, global);
goog.exportSymbol('proto.RecordsAPI.BookmarkSetContent', null, global);
goog.exportSymbol('proto.RecordsAPI.DomainMeta', null, global);
goog.exportSymbol('proto.RecordsAPI.DoubleList', null, global);
goog.exportSymbol('proto.RecordsAPI.FilterExpression', null, global);
goog.exportSymbol('proto.RecordsAPI.FilterIntersection', null, global);
goog.exportSymbol('proto.RecordsAPI.FilterNot', null, global);
goog.exportSymbol('proto.RecordsAPI.FilterUnion', null, global);
goog.exportSymbol('proto.RecordsAPI.IntegerList', null, global);
goog.exportSymbol('proto.RecordsAPI.ModelMeta', null, global);
goog.exportSymbol('proto.RecordsAPI.ModelMetaList', null, global);
goog.exportSymbol('proto.RecordsAPI.OptionalInt32', null, global);
goog.exportSymbol('proto.RecordsAPI.OptionalString', null, global);
goog.exportSymbol('proto.RecordsAPI.OptionalUInt32', null, global);
goog.exportSymbol('proto.RecordsAPI.Record', null, global);
goog.exportSymbol('proto.RecordsAPI.RecordData', null, global);
goog.exportSymbol('proto.RecordsAPI.RecordList', null, global);
goog.exportSymbol('proto.RecordsAPI.RecordTable', null, global);
goog.exportSymbol('proto.RecordsAPI.Request', null, global);
goog.exportSymbol('proto.RecordsAPI.RequestBookmarkMeta', null, global);
goog.exportSymbol('proto.RecordsAPI.RequestCancel', null, global);
goog.exportSymbol('proto.RecordsAPI.RequestModelsMeta', null, global);
goog.exportSymbol('proto.RecordsAPI.RequestRecordsData', null, global);
goog.exportSymbol('proto.RecordsAPI.RequestSaveBookmark', null, global);
goog.exportSymbol('proto.RecordsAPI.RequestWork', null, global);
goog.exportSymbol('proto.RecordsAPI.Response', null, global);
goog.exportSymbol('proto.RecordsAPI.StringList', null, global);
goog.exportSymbol('proto.RecordsAPI.Value', null, global);
goog.exportSymbol('proto.RecordsAPI.VarInterval', null, global);
goog.exportSymbol('proto.RecordsAPI.VarMeta', null, global);
goog.exportSymbol('proto.RecordsAPI.VarMeta.VariableType', null, global);
goog.exportSymbol('proto.RecordsAPI.VarSet', null, global);
goog.exportSymbol('proto.RecordsAPI.VarValue', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.OptionalInt32 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RecordsAPI.OptionalInt32, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.OptionalInt32.displayName = 'proto.RecordsAPI.OptionalInt32';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.OptionalInt32.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.OptionalInt32.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.OptionalInt32} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.OptionalInt32.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: msg.getValue()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.OptionalInt32}
 */
proto.RecordsAPI.OptionalInt32.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.OptionalInt32;
  return proto.RecordsAPI.OptionalInt32.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.OptionalInt32} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.OptionalInt32}
 */
proto.RecordsAPI.OptionalInt32.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.OptionalInt32} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.OptionalInt32.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.OptionalInt32.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.OptionalInt32.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getValue();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.OptionalInt32} The clone.
 */
proto.RecordsAPI.OptionalInt32.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.OptionalInt32} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 value = 1;
 * @return {number}
 */
proto.RecordsAPI.OptionalInt32.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.RecordsAPI.OptionalInt32.prototype.setValue = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.OptionalUInt32 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RecordsAPI.OptionalUInt32, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.OptionalUInt32.displayName = 'proto.RecordsAPI.OptionalUInt32';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.OptionalUInt32.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.OptionalUInt32.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.OptionalUInt32} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.OptionalUInt32.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: msg.getValue()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.OptionalUInt32}
 */
proto.RecordsAPI.OptionalUInt32.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.OptionalUInt32;
  return proto.RecordsAPI.OptionalUInt32.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.OptionalUInt32} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.OptionalUInt32}
 */
proto.RecordsAPI.OptionalUInt32.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.OptionalUInt32} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.OptionalUInt32.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.OptionalUInt32.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.OptionalUInt32.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getValue();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.OptionalUInt32} The clone.
 */
proto.RecordsAPI.OptionalUInt32.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.OptionalUInt32} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional uint32 value = 1;
 * @return {number}
 */
proto.RecordsAPI.OptionalUInt32.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.RecordsAPI.OptionalUInt32.prototype.setValue = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.OptionalString = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RecordsAPI.OptionalString, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.OptionalString.displayName = 'proto.RecordsAPI.OptionalString';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.OptionalString.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.OptionalString.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.OptionalString} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.OptionalString.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: msg.getValue()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.OptionalString}
 */
proto.RecordsAPI.OptionalString.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.OptionalString;
  return proto.RecordsAPI.OptionalString.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.OptionalString} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.OptionalString}
 */
proto.RecordsAPI.OptionalString.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.OptionalString} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.OptionalString.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.OptionalString.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.OptionalString.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.OptionalString} The clone.
 */
proto.RecordsAPI.OptionalString.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.OptionalString} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.RecordsAPI.OptionalString.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.RecordsAPI.OptionalString.prototype.setValue = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.Value = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.RecordsAPI.Value.oneofGroups_);
};
goog.inherits(proto.RecordsAPI.Value, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.Value.displayName = 'proto.RecordsAPI.Value';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.RecordsAPI.Value.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.RecordsAPI.Value.ValueCase = {
  VALUE_NOT_SET: 0,
  REAL_VALUE: 1,
  INTEGER_VALUE: 2,
  STRING_VALUE: 3
};

/**
 * @return {proto.RecordsAPI.Value.ValueCase}
 */
proto.RecordsAPI.Value.prototype.getValueCase = function() {
  return /** @type {proto.RecordsAPI.Value.ValueCase} */(jspb.Message.computeOneofCase(this, proto.RecordsAPI.Value.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.Value.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.Value.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.Value} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.Value.toObject = function(includeInstance, msg) {
  var f, obj = {
    realValue: jspb.Message.getOptionalFloatingPointField(msg, 1),
    integerValue: jspb.Message.getField(msg, 2),
    stringValue: jspb.Message.getField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.Value}
 */
proto.RecordsAPI.Value.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.Value;
  return proto.RecordsAPI.Value.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.Value} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.Value}
 */
proto.RecordsAPI.Value.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRealValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIntegerValue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.Value} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.Value.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.Value.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.Value.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = jspb.Message.getField(this, 1);
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = jspb.Message.getField(this, 2);
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = jspb.Message.getField(this, 3);
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.Value} The clone.
 */
proto.RecordsAPI.Value.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.Value} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional double real_value = 1;
 * @return {number}
 */
proto.RecordsAPI.Value.prototype.getRealValue = function() {
  return /** @type {number} */ (!this.hasRealValue() ? 0.0 : +jspb.Message.getField(this, 1));
};


/** @param {number?|undefined} value  */
proto.RecordsAPI.Value.prototype.setRealValue = function(value) {
  jspb.Message.setOneofField(this, 1, proto.RecordsAPI.Value.oneofGroups_[0], value);
};


proto.RecordsAPI.Value.prototype.clearRealValue = function() {
  jspb.Message.setOneofField(this, 1, proto.RecordsAPI.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Value.prototype.hasRealValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 integer_value = 2;
 * @return {number}
 */
proto.RecordsAPI.Value.prototype.getIntegerValue = function() {
  return /** @type {number} */ (!this.hasIntegerValue() ? 0 : jspb.Message.getField(this, 2));
};


/** @param {number?|undefined} value  */
proto.RecordsAPI.Value.prototype.setIntegerValue = function(value) {
  jspb.Message.setOneofField(this, 2, proto.RecordsAPI.Value.oneofGroups_[0], value);
};


proto.RecordsAPI.Value.prototype.clearIntegerValue = function() {
  jspb.Message.setOneofField(this, 2, proto.RecordsAPI.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Value.prototype.hasIntegerValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string string_value = 3;
 * @return {string}
 */
proto.RecordsAPI.Value.prototype.getStringValue = function() {
  return /** @type {string} */ (!this.hasStringValue() ? "" : jspb.Message.getField(this, 3));
};


/** @param {string?|undefined} value  */
proto.RecordsAPI.Value.prototype.setStringValue = function(value) {
  jspb.Message.setOneofField(this, 3, proto.RecordsAPI.Value.oneofGroups_[0], value);
};


proto.RecordsAPI.Value.prototype.clearStringValue = function() {
  jspb.Message.setOneofField(this, 3, proto.RecordsAPI.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Value.prototype.hasStringValue = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.DoubleList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.DoubleList.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.DoubleList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.DoubleList.displayName = 'proto.RecordsAPI.DoubleList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.DoubleList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.DoubleList.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.DoubleList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.DoubleList} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.DoubleList.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.getRepeatedFloatingPointField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.DoubleList}
 */
proto.RecordsAPI.DoubleList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.DoubleList;
  return proto.RecordsAPI.DoubleList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.DoubleList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.DoubleList}
 */
proto.RecordsAPI.DoubleList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array.<number>} */ (reader.readPackedDouble());
      msg.setValuesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.DoubleList} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.DoubleList.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.DoubleList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.DoubleList.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getValuesList();
  if (f.length > 0) {
    writer.writePackedDouble(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.DoubleList} The clone.
 */
proto.RecordsAPI.DoubleList.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.DoubleList} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated double values = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.RecordsAPI.DoubleList.prototype.getValuesList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/** @param {Array.<number>} value  */
proto.RecordsAPI.DoubleList.prototype.setValuesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


proto.RecordsAPI.DoubleList.prototype.clearValuesList = function() {
  jspb.Message.setField(this, 1, []);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.IntegerList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.IntegerList.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.IntegerList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.IntegerList.displayName = 'proto.RecordsAPI.IntegerList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.IntegerList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.IntegerList.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.IntegerList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.IntegerList} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.IntegerList.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.getField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.IntegerList}
 */
proto.RecordsAPI.IntegerList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.IntegerList;
  return proto.RecordsAPI.IntegerList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.IntegerList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.IntegerList}
 */
proto.RecordsAPI.IntegerList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array.<number>} */ (reader.readPackedSint64());
      msg.setValuesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.IntegerList} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.IntegerList.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.IntegerList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.IntegerList.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getValuesList();
  if (f.length > 0) {
    writer.writePackedSint64(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.IntegerList} The clone.
 */
proto.RecordsAPI.IntegerList.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.IntegerList} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated sint64 values = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.RecordsAPI.IntegerList.prototype.getValuesList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 1));
};


/** @param {Array.<number>} value  */
proto.RecordsAPI.IntegerList.prototype.setValuesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


proto.RecordsAPI.IntegerList.prototype.clearValuesList = function() {
  jspb.Message.setField(this, 1, []);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.StringList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.StringList.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.StringList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.StringList.displayName = 'proto.RecordsAPI.StringList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.StringList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.StringList.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.StringList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.StringList} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.StringList.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.getField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.StringList}
 */
proto.RecordsAPI.StringList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.StringList;
  return proto.RecordsAPI.StringList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.StringList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.StringList}
 */
proto.RecordsAPI.StringList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.getValuesList().push(value);
      msg.setValuesList(msg.getValuesList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.StringList} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.StringList.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.StringList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.StringList.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.StringList} The clone.
 */
proto.RecordsAPI.StringList.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.StringList} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated string values = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.RecordsAPI.StringList.prototype.getValuesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 1));
};


/** @param {Array.<string>} value  */
proto.RecordsAPI.StringList.prototype.setValuesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


proto.RecordsAPI.StringList.prototype.clearValuesList = function() {
  jspb.Message.setField(this, 1, []);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.BookmarkIntervalContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RecordsAPI.BookmarkIntervalContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.BookmarkIntervalContent.displayName = 'proto.RecordsAPI.BookmarkIntervalContent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.BookmarkIntervalContent.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.BookmarkIntervalContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.BookmarkIntervalContent} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.BookmarkIntervalContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    firstRecord: msg.getFirstRecord(),
    lastRecord: msg.getLastRecord()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.BookmarkIntervalContent}
 */
proto.RecordsAPI.BookmarkIntervalContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.BookmarkIntervalContent;
  return proto.RecordsAPI.BookmarkIntervalContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.BookmarkIntervalContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.BookmarkIntervalContent}
 */
proto.RecordsAPI.BookmarkIntervalContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFirstRecord(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastRecord(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.BookmarkIntervalContent} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.BookmarkIntervalContent.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.BookmarkIntervalContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.BookmarkIntervalContent.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getFirstRecord();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getLastRecord();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.BookmarkIntervalContent} The clone.
 */
proto.RecordsAPI.BookmarkIntervalContent.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.BookmarkIntervalContent} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 first_record = 1;
 * @return {number}
 */
proto.RecordsAPI.BookmarkIntervalContent.prototype.getFirstRecord = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.RecordsAPI.BookmarkIntervalContent.prototype.setFirstRecord = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 last_record = 2;
 * @return {number}
 */
proto.RecordsAPI.BookmarkIntervalContent.prototype.getLastRecord = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.RecordsAPI.BookmarkIntervalContent.prototype.setLastRecord = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.BookmarkSetContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.BookmarkSetContent.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.BookmarkSetContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.BookmarkSetContent.displayName = 'proto.RecordsAPI.BookmarkSetContent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.BookmarkSetContent.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.BookmarkSetContent.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.BookmarkSetContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.BookmarkSetContent} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.BookmarkSetContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordIdsList: jspb.Message.getField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.BookmarkSetContent}
 */
proto.RecordsAPI.BookmarkSetContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.BookmarkSetContent;
  return proto.RecordsAPI.BookmarkSetContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.BookmarkSetContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.BookmarkSetContent}
 */
proto.RecordsAPI.BookmarkSetContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt64());
      msg.setRecordIdsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.BookmarkSetContent} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.BookmarkSetContent.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.BookmarkSetContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.BookmarkSetContent.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRecordIdsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.BookmarkSetContent} The clone.
 */
proto.RecordsAPI.BookmarkSetContent.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.BookmarkSetContent} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated int64 record_ids = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.RecordsAPI.BookmarkSetContent.prototype.getRecordIdsList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 1));
};


/** @param {Array.<number>} value  */
proto.RecordsAPI.BookmarkSetContent.prototype.setRecordIdsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


proto.RecordsAPI.BookmarkSetContent.prototype.clearRecordIdsList = function() {
  jspb.Message.setField(this, 1, []);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.BookmarkMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.RecordsAPI.BookmarkMeta.oneofGroups_);
};
goog.inherits(proto.RecordsAPI.BookmarkMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.BookmarkMeta.displayName = 'proto.RecordsAPI.BookmarkMeta';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.RecordsAPI.BookmarkMeta.oneofGroups_ = [[3,4,5]];

/**
 * @enum {number}
 */
proto.RecordsAPI.BookmarkMeta.ContentCase = {
  CONTENT_NOT_SET: 0,
  INTERVAL: 3,
  SET: 4,
  FILTER: 5
};

/**
 * @return {proto.RecordsAPI.BookmarkMeta.ContentCase}
 */
proto.RecordsAPI.BookmarkMeta.prototype.getContentCase = function() {
  return /** @type {proto.RecordsAPI.BookmarkMeta.ContentCase} */(jspb.Message.computeOneofCase(this, proto.RecordsAPI.BookmarkMeta.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.BookmarkMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.BookmarkMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.BookmarkMeta} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.BookmarkMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookmarkId: msg.getBookmarkId(),
    bookmarkName: msg.getBookmarkName(),
    interval: (f = msg.getInterval()) && proto.RecordsAPI.BookmarkIntervalContent.toObject(includeInstance, f),
    set: (f = msg.getSet()) && proto.RecordsAPI.BookmarkSetContent.toObject(includeInstance, f),
    filter: (f = msg.getFilter()) && proto.RecordsAPI.FilterExpression.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.BookmarkMeta}
 */
proto.RecordsAPI.BookmarkMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.BookmarkMeta;
  return proto.RecordsAPI.BookmarkMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.BookmarkMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.BookmarkMeta}
 */
proto.RecordsAPI.BookmarkMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookmarkId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookmarkName(value);
      break;
    case 3:
      var value = new proto.RecordsAPI.BookmarkIntervalContent;
      reader.readMessage(value,proto.RecordsAPI.BookmarkIntervalContent.deserializeBinaryFromReader);
      msg.setInterval(value);
      break;
    case 4:
      var value = new proto.RecordsAPI.BookmarkSetContent;
      reader.readMessage(value,proto.RecordsAPI.BookmarkSetContent.deserializeBinaryFromReader);
      msg.setSet(value);
      break;
    case 5:
      var value = new proto.RecordsAPI.FilterExpression;
      reader.readMessage(value,proto.RecordsAPI.FilterExpression.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.BookmarkMeta} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.BookmarkMeta.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.BookmarkMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.BookmarkMeta.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getBookmarkId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getBookmarkName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getInterval();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.RecordsAPI.BookmarkIntervalContent.serializeBinaryToWriter
    );
  }
  f = this.getSet();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.RecordsAPI.BookmarkSetContent.serializeBinaryToWriter
    );
  }
  f = this.getFilter();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.RecordsAPI.FilterExpression.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.BookmarkMeta} The clone.
 */
proto.RecordsAPI.BookmarkMeta.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.BookmarkMeta} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string bookmark_id = 1;
 * @return {string}
 */
proto.RecordsAPI.BookmarkMeta.prototype.getBookmarkId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.RecordsAPI.BookmarkMeta.prototype.setBookmarkId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string bookmark_name = 2;
 * @return {string}
 */
proto.RecordsAPI.BookmarkMeta.prototype.getBookmarkName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.RecordsAPI.BookmarkMeta.prototype.setBookmarkName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional BookmarkIntervalContent interval = 3;
 * @return {proto.RecordsAPI.BookmarkIntervalContent}
 */
proto.RecordsAPI.BookmarkMeta.prototype.getInterval = function() {
  return /** @type{proto.RecordsAPI.BookmarkIntervalContent} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.BookmarkIntervalContent, 3));
};


/** @param {proto.RecordsAPI.BookmarkIntervalContent|undefined} value  */
proto.RecordsAPI.BookmarkMeta.prototype.setInterval = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.RecordsAPI.BookmarkMeta.oneofGroups_[0], value);
};


proto.RecordsAPI.BookmarkMeta.prototype.clearInterval = function() {
  this.setInterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.BookmarkMeta.prototype.hasInterval = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional BookmarkSetContent set = 4;
 * @return {proto.RecordsAPI.BookmarkSetContent}
 */
proto.RecordsAPI.BookmarkMeta.prototype.getSet = function() {
  return /** @type{proto.RecordsAPI.BookmarkSetContent} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.BookmarkSetContent, 4));
};


/** @param {proto.RecordsAPI.BookmarkSetContent|undefined} value  */
proto.RecordsAPI.BookmarkMeta.prototype.setSet = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.RecordsAPI.BookmarkMeta.oneofGroups_[0], value);
};


proto.RecordsAPI.BookmarkMeta.prototype.clearSet = function() {
  this.setSet(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.BookmarkMeta.prototype.hasSet = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional FilterExpression filter = 5;
 * @return {proto.RecordsAPI.FilterExpression}
 */
proto.RecordsAPI.BookmarkMeta.prototype.getFilter = function() {
  return /** @type{proto.RecordsAPI.FilterExpression} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.FilterExpression, 5));
};


/** @param {proto.RecordsAPI.FilterExpression|undefined} value  */
proto.RecordsAPI.BookmarkMeta.prototype.setFilter = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.RecordsAPI.BookmarkMeta.oneofGroups_[0], value);
};


proto.RecordsAPI.BookmarkMeta.prototype.clearFilter = function() {
  this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.BookmarkMeta.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.BookmarkMetaList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.BookmarkMetaList.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.BookmarkMetaList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.BookmarkMetaList.displayName = 'proto.RecordsAPI.BookmarkMetaList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.BookmarkMetaList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.BookmarkMetaList.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.BookmarkMetaList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.BookmarkMetaList} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.BookmarkMetaList.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookmarkMetasList: jspb.Message.toObjectList(msg.getBookmarkMetasList(),
    proto.RecordsAPI.BookmarkMeta.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.BookmarkMetaList}
 */
proto.RecordsAPI.BookmarkMetaList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.BookmarkMetaList;
  return proto.RecordsAPI.BookmarkMetaList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.BookmarkMetaList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.BookmarkMetaList}
 */
proto.RecordsAPI.BookmarkMetaList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.BookmarkMeta;
      reader.readMessage(value,proto.RecordsAPI.BookmarkMeta.deserializeBinaryFromReader);
      msg.getBookmarkMetasList().push(value);
      msg.setBookmarkMetasList(msg.getBookmarkMetasList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.BookmarkMetaList} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.BookmarkMetaList.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.BookmarkMetaList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.BookmarkMetaList.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getBookmarkMetasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.RecordsAPI.BookmarkMeta.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.BookmarkMetaList} The clone.
 */
proto.RecordsAPI.BookmarkMetaList.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.BookmarkMetaList} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated BookmarkMeta bookmark_metas = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.RecordsAPI.BookmarkMeta>}
 */
proto.RecordsAPI.BookmarkMetaList.prototype.getBookmarkMetasList = function() {
  return /** @type{!Array.<!proto.RecordsAPI.BookmarkMeta>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RecordsAPI.BookmarkMeta, 1));
};


/** @param {Array.<!proto.RecordsAPI.BookmarkMeta>} value  */
proto.RecordsAPI.BookmarkMetaList.prototype.setBookmarkMetasList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.RecordsAPI.BookmarkMetaList.prototype.clearBookmarkMetasList = function() {
  this.setBookmarkMetasList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.RequestBookmarkMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RecordsAPI.RequestBookmarkMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.RequestBookmarkMeta.displayName = 'proto.RecordsAPI.RequestBookmarkMeta';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.RequestBookmarkMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.RequestBookmarkMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.RequestBookmarkMeta} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.RequestBookmarkMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelId: msg.getModelId(),
    bookmarkId: (f = msg.getBookmarkId()) && proto.RecordsAPI.OptionalString.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.RequestBookmarkMeta}
 */
proto.RecordsAPI.RequestBookmarkMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.RequestBookmarkMeta;
  return proto.RecordsAPI.RequestBookmarkMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.RequestBookmarkMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.RequestBookmarkMeta}
 */
proto.RecordsAPI.RequestBookmarkMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelId(value);
      break;
    case 2:
      var value = new proto.RecordsAPI.OptionalString;
      reader.readMessage(value,proto.RecordsAPI.OptionalString.deserializeBinaryFromReader);
      msg.setBookmarkId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.RequestBookmarkMeta} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RequestBookmarkMeta.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.RequestBookmarkMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RequestBookmarkMeta.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getModelId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getBookmarkId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.RecordsAPI.OptionalString.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.RequestBookmarkMeta} The clone.
 */
proto.RecordsAPI.RequestBookmarkMeta.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.RequestBookmarkMeta} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string model_id = 1;
 * @return {string}
 */
proto.RecordsAPI.RequestBookmarkMeta.prototype.getModelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.RecordsAPI.RequestBookmarkMeta.prototype.setModelId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional OptionalString bookmark_id = 2;
 * @return {proto.RecordsAPI.OptionalString}
 */
proto.RecordsAPI.RequestBookmarkMeta.prototype.getBookmarkId = function() {
  return /** @type{proto.RecordsAPI.OptionalString} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.OptionalString, 2));
};


/** @param {proto.RecordsAPI.OptionalString|undefined} value  */
proto.RecordsAPI.RequestBookmarkMeta.prototype.setBookmarkId = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.RecordsAPI.RequestBookmarkMeta.prototype.clearBookmarkId = function() {
  this.setBookmarkId(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.RequestBookmarkMeta.prototype.hasBookmarkId = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.RequestSaveBookmark = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RecordsAPI.RequestSaveBookmark, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.RequestSaveBookmark.displayName = 'proto.RecordsAPI.RequestSaveBookmark';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.RequestSaveBookmark.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.RequestSaveBookmark.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.RequestSaveBookmark} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.RequestSaveBookmark.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelId: msg.getModelId(),
    newBookmark: (f = msg.getNewBookmark()) && proto.RecordsAPI.BookmarkMeta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.RequestSaveBookmark}
 */
proto.RecordsAPI.RequestSaveBookmark.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.RequestSaveBookmark;
  return proto.RecordsAPI.RequestSaveBookmark.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.RequestSaveBookmark} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.RequestSaveBookmark}
 */
proto.RecordsAPI.RequestSaveBookmark.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelId(value);
      break;
    case 2:
      var value = new proto.RecordsAPI.BookmarkMeta;
      reader.readMessage(value,proto.RecordsAPI.BookmarkMeta.deserializeBinaryFromReader);
      msg.setNewBookmark(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.RequestSaveBookmark} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RequestSaveBookmark.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.RequestSaveBookmark.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RequestSaveBookmark.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getModelId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getNewBookmark();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.RecordsAPI.BookmarkMeta.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.RequestSaveBookmark} The clone.
 */
proto.RecordsAPI.RequestSaveBookmark.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.RequestSaveBookmark} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string model_id = 1;
 * @return {string}
 */
proto.RecordsAPI.RequestSaveBookmark.prototype.getModelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.RecordsAPI.RequestSaveBookmark.prototype.setModelId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional BookmarkMeta new_bookmark = 2;
 * @return {proto.RecordsAPI.BookmarkMeta}
 */
proto.RecordsAPI.RequestSaveBookmark.prototype.getNewBookmark = function() {
  return /** @type{proto.RecordsAPI.BookmarkMeta} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.BookmarkMeta, 2));
};


/** @param {proto.RecordsAPI.BookmarkMeta|undefined} value  */
proto.RecordsAPI.RequestSaveBookmark.prototype.setNewBookmark = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.RecordsAPI.RequestSaveBookmark.prototype.clearNewBookmark = function() {
  this.setNewBookmark(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.RequestSaveBookmark.prototype.hasNewBookmark = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.FilterExpression = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.RecordsAPI.FilterExpression.oneofGroups_);
};
goog.inherits(proto.RecordsAPI.FilterExpression, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.FilterExpression.displayName = 'proto.RecordsAPI.FilterExpression';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.RecordsAPI.FilterExpression.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.RecordsAPI.FilterExpression.ExpressionCase = {
  EXPRESSION_NOT_SET: 0,
  FILTER_NOT: 1,
  FILTER_UNION: 2,
  FILTER_INTERSECTION: 3,
  FILTER_DOMAIN: 4
};

/**
 * @return {proto.RecordsAPI.FilterExpression.ExpressionCase}
 */
proto.RecordsAPI.FilterExpression.prototype.getExpressionCase = function() {
  return /** @type {proto.RecordsAPI.FilterExpression.ExpressionCase} */(jspb.Message.computeOneofCase(this, proto.RecordsAPI.FilterExpression.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.FilterExpression.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.FilterExpression.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.FilterExpression} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.FilterExpression.toObject = function(includeInstance, msg) {
  var f, obj = {
    filterNot: (f = msg.getFilterNot()) && proto.RecordsAPI.FilterNot.toObject(includeInstance, f),
    filterUnion: (f = msg.getFilterUnion()) && proto.RecordsAPI.FilterUnion.toObject(includeInstance, f),
    filterIntersection: (f = msg.getFilterIntersection()) && proto.RecordsAPI.FilterIntersection.toObject(includeInstance, f),
    filterDomain: (f = msg.getFilterDomain()) && proto.RecordsAPI.DomainMeta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.FilterExpression}
 */
proto.RecordsAPI.FilterExpression.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.FilterExpression;
  return proto.RecordsAPI.FilterExpression.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.FilterExpression} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.FilterExpression}
 */
proto.RecordsAPI.FilterExpression.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.FilterNot;
      reader.readMessage(value,proto.RecordsAPI.FilterNot.deserializeBinaryFromReader);
      msg.setFilterNot(value);
      break;
    case 2:
      var value = new proto.RecordsAPI.FilterUnion;
      reader.readMessage(value,proto.RecordsAPI.FilterUnion.deserializeBinaryFromReader);
      msg.setFilterUnion(value);
      break;
    case 3:
      var value = new proto.RecordsAPI.FilterIntersection;
      reader.readMessage(value,proto.RecordsAPI.FilterIntersection.deserializeBinaryFromReader);
      msg.setFilterIntersection(value);
      break;
    case 4:
      var value = new proto.RecordsAPI.DomainMeta;
      reader.readMessage(value,proto.RecordsAPI.DomainMeta.deserializeBinaryFromReader);
      msg.setFilterDomain(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.FilterExpression} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.FilterExpression.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.FilterExpression.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.FilterExpression.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getFilterNot();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.RecordsAPI.FilterNot.serializeBinaryToWriter
    );
  }
  f = this.getFilterUnion();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.RecordsAPI.FilterUnion.serializeBinaryToWriter
    );
  }
  f = this.getFilterIntersection();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.RecordsAPI.FilterIntersection.serializeBinaryToWriter
    );
  }
  f = this.getFilterDomain();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.RecordsAPI.DomainMeta.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.FilterExpression} The clone.
 */
proto.RecordsAPI.FilterExpression.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.FilterExpression} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional FilterNot filter_not = 1;
 * @return {proto.RecordsAPI.FilterNot}
 */
proto.RecordsAPI.FilterExpression.prototype.getFilterNot = function() {
  return /** @type{proto.RecordsAPI.FilterNot} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.FilterNot, 1));
};


/** @param {proto.RecordsAPI.FilterNot|undefined} value  */
proto.RecordsAPI.FilterExpression.prototype.setFilterNot = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.RecordsAPI.FilterExpression.oneofGroups_[0], value);
};


proto.RecordsAPI.FilterExpression.prototype.clearFilterNot = function() {
  this.setFilterNot(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.FilterExpression.prototype.hasFilterNot = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FilterUnion filter_union = 2;
 * @return {proto.RecordsAPI.FilterUnion}
 */
proto.RecordsAPI.FilterExpression.prototype.getFilterUnion = function() {
  return /** @type{proto.RecordsAPI.FilterUnion} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.FilterUnion, 2));
};


/** @param {proto.RecordsAPI.FilterUnion|undefined} value  */
proto.RecordsAPI.FilterExpression.prototype.setFilterUnion = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.RecordsAPI.FilterExpression.oneofGroups_[0], value);
};


proto.RecordsAPI.FilterExpression.prototype.clearFilterUnion = function() {
  this.setFilterUnion(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.FilterExpression.prototype.hasFilterUnion = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional FilterIntersection filter_intersection = 3;
 * @return {proto.RecordsAPI.FilterIntersection}
 */
proto.RecordsAPI.FilterExpression.prototype.getFilterIntersection = function() {
  return /** @type{proto.RecordsAPI.FilterIntersection} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.FilterIntersection, 3));
};


/** @param {proto.RecordsAPI.FilterIntersection|undefined} value  */
proto.RecordsAPI.FilterExpression.prototype.setFilterIntersection = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.RecordsAPI.FilterExpression.oneofGroups_[0], value);
};


proto.RecordsAPI.FilterExpression.prototype.clearFilterIntersection = function() {
  this.setFilterIntersection(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.FilterExpression.prototype.hasFilterIntersection = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DomainMeta filter_domain = 4;
 * @return {proto.RecordsAPI.DomainMeta}
 */
proto.RecordsAPI.FilterExpression.prototype.getFilterDomain = function() {
  return /** @type{proto.RecordsAPI.DomainMeta} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.DomainMeta, 4));
};


/** @param {proto.RecordsAPI.DomainMeta|undefined} value  */
proto.RecordsAPI.FilterExpression.prototype.setFilterDomain = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.RecordsAPI.FilterExpression.oneofGroups_[0], value);
};


proto.RecordsAPI.FilterExpression.prototype.clearFilterDomain = function() {
  this.setFilterDomain(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.FilterExpression.prototype.hasFilterDomain = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.FilterNot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RecordsAPI.FilterNot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.FilterNot.displayName = 'proto.RecordsAPI.FilterNot';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.FilterNot.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.FilterNot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.FilterNot} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.FilterNot.toObject = function(includeInstance, msg) {
  var f, obj = {
    filterExpression: (f = msg.getFilterExpression()) && proto.RecordsAPI.FilterExpression.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.FilterNot}
 */
proto.RecordsAPI.FilterNot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.FilterNot;
  return proto.RecordsAPI.FilterNot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.FilterNot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.FilterNot}
 */
proto.RecordsAPI.FilterNot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.FilterExpression;
      reader.readMessage(value,proto.RecordsAPI.FilterExpression.deserializeBinaryFromReader);
      msg.setFilterExpression(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.FilterNot} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.FilterNot.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.FilterNot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.FilterNot.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getFilterExpression();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.RecordsAPI.FilterExpression.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.FilterNot} The clone.
 */
proto.RecordsAPI.FilterNot.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.FilterNot} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional FilterExpression filter_expression = 1;
 * @return {proto.RecordsAPI.FilterExpression}
 */
proto.RecordsAPI.FilterNot.prototype.getFilterExpression = function() {
  return /** @type{proto.RecordsAPI.FilterExpression} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.FilterExpression, 1));
};


/** @param {proto.RecordsAPI.FilterExpression|undefined} value  */
proto.RecordsAPI.FilterNot.prototype.setFilterExpression = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.RecordsAPI.FilterNot.prototype.clearFilterExpression = function() {
  this.setFilterExpression(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.FilterNot.prototype.hasFilterExpression = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.FilterUnion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.FilterUnion.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.FilterUnion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.FilterUnion.displayName = 'proto.RecordsAPI.FilterUnion';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.FilterUnion.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.FilterUnion.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.FilterUnion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.FilterUnion} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.FilterUnion.toObject = function(includeInstance, msg) {
  var f, obj = {
    filterExpressionsList: jspb.Message.toObjectList(msg.getFilterExpressionsList(),
    proto.RecordsAPI.FilterExpression.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.FilterUnion}
 */
proto.RecordsAPI.FilterUnion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.FilterUnion;
  return proto.RecordsAPI.FilterUnion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.FilterUnion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.FilterUnion}
 */
proto.RecordsAPI.FilterUnion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.FilterExpression;
      reader.readMessage(value,proto.RecordsAPI.FilterExpression.deserializeBinaryFromReader);
      msg.getFilterExpressionsList().push(value);
      msg.setFilterExpressionsList(msg.getFilterExpressionsList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.FilterUnion} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.FilterUnion.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.FilterUnion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.FilterUnion.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getFilterExpressionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.RecordsAPI.FilterExpression.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.FilterUnion} The clone.
 */
proto.RecordsAPI.FilterUnion.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.FilterUnion} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated FilterExpression filter_expressions = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.RecordsAPI.FilterExpression>}
 */
proto.RecordsAPI.FilterUnion.prototype.getFilterExpressionsList = function() {
  return /** @type{!Array.<!proto.RecordsAPI.FilterExpression>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RecordsAPI.FilterExpression, 1));
};


/** @param {Array.<!proto.RecordsAPI.FilterExpression>} value  */
proto.RecordsAPI.FilterUnion.prototype.setFilterExpressionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.RecordsAPI.FilterUnion.prototype.clearFilterExpressionsList = function() {
  this.setFilterExpressionsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.FilterIntersection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.FilterIntersection.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.FilterIntersection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.FilterIntersection.displayName = 'proto.RecordsAPI.FilterIntersection';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.FilterIntersection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.FilterIntersection.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.FilterIntersection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.FilterIntersection} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.FilterIntersection.toObject = function(includeInstance, msg) {
  var f, obj = {
    filterExpressionsList: jspb.Message.toObjectList(msg.getFilterExpressionsList(),
    proto.RecordsAPI.FilterExpression.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.FilterIntersection}
 */
proto.RecordsAPI.FilterIntersection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.FilterIntersection;
  return proto.RecordsAPI.FilterIntersection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.FilterIntersection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.FilterIntersection}
 */
proto.RecordsAPI.FilterIntersection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.FilterExpression;
      reader.readMessage(value,proto.RecordsAPI.FilterExpression.deserializeBinaryFromReader);
      msg.getFilterExpressionsList().push(value);
      msg.setFilterExpressionsList(msg.getFilterExpressionsList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.FilterIntersection} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.FilterIntersection.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.FilterIntersection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.FilterIntersection.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getFilterExpressionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.RecordsAPI.FilterExpression.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.FilterIntersection} The clone.
 */
proto.RecordsAPI.FilterIntersection.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.FilterIntersection} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated FilterExpression filter_expressions = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.RecordsAPI.FilterExpression>}
 */
proto.RecordsAPI.FilterIntersection.prototype.getFilterExpressionsList = function() {
  return /** @type{!Array.<!proto.RecordsAPI.FilterExpression>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RecordsAPI.FilterExpression, 1));
};


/** @param {Array.<!proto.RecordsAPI.FilterExpression>} value  */
proto.RecordsAPI.FilterIntersection.prototype.setFilterExpressionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.RecordsAPI.FilterIntersection.prototype.clearFilterExpressionsList = function() {
  this.setFilterExpressionsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.VarMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.VarMeta.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.VarMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.VarMeta.displayName = 'proto.RecordsAPI.VarMeta';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.VarMeta.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.VarMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.VarMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.VarMeta} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.VarMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    varId: msg.getVarId(),
    varName: msg.getVarName(),
    units: msg.getUnits(),
    siList: jspb.Message.getField(msg, 4),
    scale: msg.getScale(),
    type: msg.getType()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.VarMeta}
 */
proto.RecordsAPI.VarMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.VarMeta;
  return proto.RecordsAPI.VarMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.VarMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.VarMeta}
 */
proto.RecordsAPI.VarMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVarId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVarName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnits(value);
      break;
    case 4:
      var value = /** @type {!Array.<number>} */ (reader.readPackedSint32());
      msg.setSiList(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setScale(value);
      break;
    case 6:
      var value = /** @type {!proto.RecordsAPI.VarMeta.VariableType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.VarMeta} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.VarMeta.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.VarMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.VarMeta.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getVarId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = this.getVarName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getUnits();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getSiList();
  if (f.length > 0) {
    writer.writePackedSint32(
      4,
      f
    );
  }
  f = this.getScale();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = this.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.VarMeta} The clone.
 */
proto.RecordsAPI.VarMeta.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.VarMeta} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 var_id = 1;
 * @return {number}
 */
proto.RecordsAPI.VarMeta.prototype.getVarId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.RecordsAPI.VarMeta.prototype.setVarId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string var_name = 2;
 * @return {string}
 */
proto.RecordsAPI.VarMeta.prototype.getVarName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.RecordsAPI.VarMeta.prototype.setVarName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string units = 3;
 * @return {string}
 */
proto.RecordsAPI.VarMeta.prototype.getUnits = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.RecordsAPI.VarMeta.prototype.setUnits = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * repeated sint32 si = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.RecordsAPI.VarMeta.prototype.getSiList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 4));
};


/** @param {Array.<number>} value  */
proto.RecordsAPI.VarMeta.prototype.setSiList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


proto.RecordsAPI.VarMeta.prototype.clearSiList = function() {
  jspb.Message.setField(this, 4, []);
};


/**
 * optional double scale = 5;
 * @return {number}
 */
proto.RecordsAPI.VarMeta.prototype.getScale = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.RecordsAPI.VarMeta.prototype.setScale = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional VariableType type = 6;
 * @return {!proto.RecordsAPI.VarMeta.VariableType}
 */
proto.RecordsAPI.VarMeta.prototype.getType = function() {
  return /** @type {!proto.RecordsAPI.VarMeta.VariableType} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {!proto.RecordsAPI.VarMeta.VariableType} value  */
proto.RecordsAPI.VarMeta.prototype.setType = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * @enum {number}
 */
proto.RecordsAPI.VarMeta.VariableType = {
  REAL: 0,
  INTEGER: 1,
  STRING: 2
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.ModelMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.ModelMeta.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.ModelMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.ModelMeta.displayName = 'proto.RecordsAPI.ModelMeta';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.ModelMeta.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.ModelMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.ModelMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.ModelMeta} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.ModelMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelId: msg.getModelId(),
    modelName: msg.getModelName(),
    modelUri: msg.getModelUri(),
    variablesList: jspb.Message.toObjectList(msg.getVariablesList(),
    proto.RecordsAPI.VarMeta.toObject, includeInstance),
    inputsList: jspb.Message.toObjectList(msg.getInputsList(),
    proto.RecordsAPI.DomainMeta.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.ModelMeta}
 */
proto.RecordsAPI.ModelMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.ModelMeta;
  return proto.RecordsAPI.ModelMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.ModelMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.ModelMeta}
 */
proto.RecordsAPI.ModelMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelUri(value);
      break;
    case 4:
      var value = new proto.RecordsAPI.VarMeta;
      reader.readMessage(value,proto.RecordsAPI.VarMeta.deserializeBinaryFromReader);
      msg.getVariablesList().push(value);
      msg.setVariablesList(msg.getVariablesList());
      break;
    case 5:
      var value = new proto.RecordsAPI.DomainMeta;
      reader.readMessage(value,proto.RecordsAPI.DomainMeta.deserializeBinaryFromReader);
      msg.getInputsList().push(value);
      msg.setInputsList(msg.getInputsList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.ModelMeta} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.ModelMeta.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.ModelMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.ModelMeta.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getModelId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getModelName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getModelUri();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getVariablesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.RecordsAPI.VarMeta.serializeBinaryToWriter
    );
  }
  f = this.getInputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.RecordsAPI.DomainMeta.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.ModelMeta} The clone.
 */
proto.RecordsAPI.ModelMeta.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.ModelMeta} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string model_id = 1;
 * @return {string}
 */
proto.RecordsAPI.ModelMeta.prototype.getModelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.RecordsAPI.ModelMeta.prototype.setModelId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string model_name = 2;
 * @return {string}
 */
proto.RecordsAPI.ModelMeta.prototype.getModelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.RecordsAPI.ModelMeta.prototype.setModelName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string model_uri = 3;
 * @return {string}
 */
proto.RecordsAPI.ModelMeta.prototype.getModelUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.RecordsAPI.ModelMeta.prototype.setModelUri = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * repeated VarMeta variables = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.RecordsAPI.VarMeta>}
 */
proto.RecordsAPI.ModelMeta.prototype.getVariablesList = function() {
  return /** @type{!Array.<!proto.RecordsAPI.VarMeta>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RecordsAPI.VarMeta, 4));
};


/** @param {Array.<!proto.RecordsAPI.VarMeta>} value  */
proto.RecordsAPI.ModelMeta.prototype.setVariablesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


proto.RecordsAPI.ModelMeta.prototype.clearVariablesList = function() {
  this.setVariablesList([]);
};


/**
 * repeated DomainMeta inputs = 5;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.RecordsAPI.DomainMeta>}
 */
proto.RecordsAPI.ModelMeta.prototype.getInputsList = function() {
  return /** @type{!Array.<!proto.RecordsAPI.DomainMeta>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RecordsAPI.DomainMeta, 5));
};


/** @param {Array.<!proto.RecordsAPI.DomainMeta>} value  */
proto.RecordsAPI.ModelMeta.prototype.setInputsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


proto.RecordsAPI.ModelMeta.prototype.clearInputsList = function() {
  this.setInputsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.ModelMetaList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.ModelMetaList.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.ModelMetaList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.ModelMetaList.displayName = 'proto.RecordsAPI.ModelMetaList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.ModelMetaList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.ModelMetaList.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.ModelMetaList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.ModelMetaList} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.ModelMetaList.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelsList: jspb.Message.toObjectList(msg.getModelsList(),
    proto.RecordsAPI.ModelMeta.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.ModelMetaList}
 */
proto.RecordsAPI.ModelMetaList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.ModelMetaList;
  return proto.RecordsAPI.ModelMetaList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.ModelMetaList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.ModelMetaList}
 */
proto.RecordsAPI.ModelMetaList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.ModelMeta;
      reader.readMessage(value,proto.RecordsAPI.ModelMeta.deserializeBinaryFromReader);
      msg.getModelsList().push(value);
      msg.setModelsList(msg.getModelsList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.ModelMetaList} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.ModelMetaList.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.ModelMetaList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.ModelMetaList.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getModelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.RecordsAPI.ModelMeta.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.ModelMetaList} The clone.
 */
proto.RecordsAPI.ModelMetaList.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.ModelMetaList} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated ModelMeta models = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.RecordsAPI.ModelMeta>}
 */
proto.RecordsAPI.ModelMetaList.prototype.getModelsList = function() {
  return /** @type{!Array.<!proto.RecordsAPI.ModelMeta>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RecordsAPI.ModelMeta, 1));
};


/** @param {Array.<!proto.RecordsAPI.ModelMeta>} value  */
proto.RecordsAPI.ModelMetaList.prototype.setModelsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.RecordsAPI.ModelMetaList.prototype.clearModelsList = function() {
  this.setModelsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.VarInterval = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RecordsAPI.VarInterval, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.VarInterval.displayName = 'proto.RecordsAPI.VarInterval';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.VarInterval.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.VarInterval.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.VarInterval} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.VarInterval.toObject = function(includeInstance, msg) {
  var f, obj = {
    firstValue: (f = msg.getFirstValue()) && proto.RecordsAPI.Value.toObject(includeInstance, f),
    lastValue: (f = msg.getLastValue()) && proto.RecordsAPI.Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.VarInterval}
 */
proto.RecordsAPI.VarInterval.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.VarInterval;
  return proto.RecordsAPI.VarInterval.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.VarInterval} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.VarInterval}
 */
proto.RecordsAPI.VarInterval.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.Value;
      reader.readMessage(value,proto.RecordsAPI.Value.deserializeBinaryFromReader);
      msg.setFirstValue(value);
      break;
    case 2:
      var value = new proto.RecordsAPI.Value;
      reader.readMessage(value,proto.RecordsAPI.Value.deserializeBinaryFromReader);
      msg.setLastValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.VarInterval} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.VarInterval.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.VarInterval.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.VarInterval.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getFirstValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.RecordsAPI.Value.serializeBinaryToWriter
    );
  }
  f = this.getLastValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.RecordsAPI.Value.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.VarInterval} The clone.
 */
proto.RecordsAPI.VarInterval.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.VarInterval} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Value first_value = 1;
 * @return {proto.RecordsAPI.Value}
 */
proto.RecordsAPI.VarInterval.prototype.getFirstValue = function() {
  return /** @type{proto.RecordsAPI.Value} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.Value, 1));
};


/** @param {proto.RecordsAPI.Value|undefined} value  */
proto.RecordsAPI.VarInterval.prototype.setFirstValue = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.RecordsAPI.VarInterval.prototype.clearFirstValue = function() {
  this.setFirstValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.VarInterval.prototype.hasFirstValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Value last_value = 2;
 * @return {proto.RecordsAPI.Value}
 */
proto.RecordsAPI.VarInterval.prototype.getLastValue = function() {
  return /** @type{proto.RecordsAPI.Value} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.Value, 2));
};


/** @param {proto.RecordsAPI.Value|undefined} value  */
proto.RecordsAPI.VarInterval.prototype.setLastValue = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.RecordsAPI.VarInterval.prototype.clearLastValue = function() {
  this.setLastValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.VarInterval.prototype.hasLastValue = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.VarSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.VarSet.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.VarSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.VarSet.displayName = 'proto.RecordsAPI.VarSet';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.VarSet.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.VarSet.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.VarSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.VarSet} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.VarSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    elementsList: jspb.Message.toObjectList(msg.getElementsList(),
    proto.RecordsAPI.Value.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.VarSet}
 */
proto.RecordsAPI.VarSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.VarSet;
  return proto.RecordsAPI.VarSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.VarSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.VarSet}
 */
proto.RecordsAPI.VarSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.Value;
      reader.readMessage(value,proto.RecordsAPI.Value.deserializeBinaryFromReader);
      msg.getElementsList().push(value);
      msg.setElementsList(msg.getElementsList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.VarSet} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.VarSet.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.VarSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.VarSet.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getElementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.RecordsAPI.Value.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.VarSet} The clone.
 */
proto.RecordsAPI.VarSet.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.VarSet} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated Value elements = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.RecordsAPI.Value>}
 */
proto.RecordsAPI.VarSet.prototype.getElementsList = function() {
  return /** @type{!Array.<!proto.RecordsAPI.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RecordsAPI.Value, 1));
};


/** @param {Array.<!proto.RecordsAPI.Value>} value  */
proto.RecordsAPI.VarSet.prototype.setElementsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.RecordsAPI.VarSet.prototype.clearElementsList = function() {
  this.setElementsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.DomainMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.RecordsAPI.DomainMeta.oneofGroups_);
};
goog.inherits(proto.RecordsAPI.DomainMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.DomainMeta.displayName = 'proto.RecordsAPI.DomainMeta';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.RecordsAPI.DomainMeta.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.RecordsAPI.DomainMeta.DomainCase = {
  DOMAIN_NOT_SET: 0,
  INTERVAL: 2,
  SET: 3
};

/**
 * @return {proto.RecordsAPI.DomainMeta.DomainCase}
 */
proto.RecordsAPI.DomainMeta.prototype.getDomainCase = function() {
  return /** @type {proto.RecordsAPI.DomainMeta.DomainCase} */(jspb.Message.computeOneofCase(this, proto.RecordsAPI.DomainMeta.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.DomainMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.DomainMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.DomainMeta} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.DomainMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    varId: msg.getVarId(),
    interval: (f = msg.getInterval()) && proto.RecordsAPI.VarInterval.toObject(includeInstance, f),
    set: (f = msg.getSet()) && proto.RecordsAPI.VarSet.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.DomainMeta}
 */
proto.RecordsAPI.DomainMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.DomainMeta;
  return proto.RecordsAPI.DomainMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.DomainMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.DomainMeta}
 */
proto.RecordsAPI.DomainMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVarId(value);
      break;
    case 2:
      var value = new proto.RecordsAPI.VarInterval;
      reader.readMessage(value,proto.RecordsAPI.VarInterval.deserializeBinaryFromReader);
      msg.setInterval(value);
      break;
    case 3:
      var value = new proto.RecordsAPI.VarSet;
      reader.readMessage(value,proto.RecordsAPI.VarSet.deserializeBinaryFromReader);
      msg.setSet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.DomainMeta} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.DomainMeta.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.DomainMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.DomainMeta.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getVarId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = this.getInterval();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.RecordsAPI.VarInterval.serializeBinaryToWriter
    );
  }
  f = this.getSet();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.RecordsAPI.VarSet.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.DomainMeta} The clone.
 */
proto.RecordsAPI.DomainMeta.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.DomainMeta} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 var_id = 1;
 * @return {number}
 */
proto.RecordsAPI.DomainMeta.prototype.getVarId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.RecordsAPI.DomainMeta.prototype.setVarId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional VarInterval interval = 2;
 * @return {proto.RecordsAPI.VarInterval}
 */
proto.RecordsAPI.DomainMeta.prototype.getInterval = function() {
  return /** @type{proto.RecordsAPI.VarInterval} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.VarInterval, 2));
};


/** @param {proto.RecordsAPI.VarInterval|undefined} value  */
proto.RecordsAPI.DomainMeta.prototype.setInterval = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.RecordsAPI.DomainMeta.oneofGroups_[0], value);
};


proto.RecordsAPI.DomainMeta.prototype.clearInterval = function() {
  this.setInterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.DomainMeta.prototype.hasInterval = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional VarSet set = 3;
 * @return {proto.RecordsAPI.VarSet}
 */
proto.RecordsAPI.DomainMeta.prototype.getSet = function() {
  return /** @type{proto.RecordsAPI.VarSet} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.VarSet, 3));
};


/** @param {proto.RecordsAPI.VarSet|undefined} value  */
proto.RecordsAPI.DomainMeta.prototype.setSet = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.RecordsAPI.DomainMeta.oneofGroups_[0], value);
};


proto.RecordsAPI.DomainMeta.prototype.clearSet = function() {
  this.setSet(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.DomainMeta.prototype.hasSet = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.RequestWork = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.RequestWork.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.RequestWork, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.RequestWork.displayName = 'proto.RecordsAPI.RequestWork';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.RequestWork.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.RequestWork.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.RequestWork.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.RequestWork} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.RequestWork.toObject = function(includeInstance, msg) {
  var f, obj = {
    inputsList: jspb.Message.toObjectList(msg.getInputsList(),
    proto.RecordsAPI.VarValue.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.RequestWork}
 */
proto.RecordsAPI.RequestWork.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.RequestWork;
  return proto.RecordsAPI.RequestWork.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.RequestWork} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.RequestWork}
 */
proto.RecordsAPI.RequestWork.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.VarValue;
      reader.readMessage(value,proto.RecordsAPI.VarValue.deserializeBinaryFromReader);
      msg.getInputsList().push(value);
      msg.setInputsList(msg.getInputsList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.RequestWork} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RequestWork.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.RequestWork.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RequestWork.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.RecordsAPI.VarValue.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.RequestWork} The clone.
 */
proto.RecordsAPI.RequestWork.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.RequestWork} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated VarValue inputs = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.RecordsAPI.VarValue>}
 */
proto.RecordsAPI.RequestWork.prototype.getInputsList = function() {
  return /** @type{!Array.<!proto.RecordsAPI.VarValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RecordsAPI.VarValue, 1));
};


/** @param {Array.<!proto.RecordsAPI.VarValue>} value  */
proto.RecordsAPI.RequestWork.prototype.setInputsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.RecordsAPI.RequestWork.prototype.clearInputsList = function() {
  this.setInputsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.VarValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RecordsAPI.VarValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.VarValue.displayName = 'proto.RecordsAPI.VarValue';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.VarValue.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.VarValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.VarValue} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.VarValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    varId: msg.getVarId(),
    value: (f = msg.getValue()) && proto.RecordsAPI.Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.VarValue}
 */
proto.RecordsAPI.VarValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.VarValue;
  return proto.RecordsAPI.VarValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.VarValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.VarValue}
 */
proto.RecordsAPI.VarValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVarId(value);
      break;
    case 2:
      var value = new proto.RecordsAPI.Value;
      reader.readMessage(value,proto.RecordsAPI.Value.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.VarValue} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.VarValue.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.VarValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.VarValue.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getVarId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = this.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.RecordsAPI.Value.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.VarValue} The clone.
 */
proto.RecordsAPI.VarValue.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.VarValue} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 var_id = 1;
 * @return {number}
 */
proto.RecordsAPI.VarValue.prototype.getVarId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.RecordsAPI.VarValue.prototype.setVarId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional Value value = 2;
 * @return {proto.RecordsAPI.Value}
 */
proto.RecordsAPI.VarValue.prototype.getValue = function() {
  return /** @type{proto.RecordsAPI.Value} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.Value, 2));
};


/** @param {proto.RecordsAPI.Value|undefined} value  */
proto.RecordsAPI.VarValue.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.RecordsAPI.VarValue.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.VarValue.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.Record = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.Record.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.Record, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.Record.displayName = 'proto.RecordsAPI.Record';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.Record.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.Record.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.Record.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.Record} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.Record.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordId: msg.getRecordId(),
    variablesList: jspb.Message.toObjectList(msg.getVariablesList(),
    proto.RecordsAPI.VarValue.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.Record}
 */
proto.RecordsAPI.Record.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.Record;
  return proto.RecordsAPI.Record.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.Record} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.Record}
 */
proto.RecordsAPI.Record.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRecordId(value);
      break;
    case 2:
      var value = new proto.RecordsAPI.VarValue;
      reader.readMessage(value,proto.RecordsAPI.VarValue.deserializeBinaryFromReader);
      msg.getVariablesList().push(value);
      msg.setVariablesList(msg.getVariablesList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.Record} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.Record.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.Record.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.Record.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRecordId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getVariablesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.RecordsAPI.VarValue.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.Record} The clone.
 */
proto.RecordsAPI.Record.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.Record} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 record_id = 1;
 * @return {number}
 */
proto.RecordsAPI.Record.prototype.getRecordId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.RecordsAPI.Record.prototype.setRecordId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated VarValue variables = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.RecordsAPI.VarValue>}
 */
proto.RecordsAPI.Record.prototype.getVariablesList = function() {
  return /** @type{!Array.<!proto.RecordsAPI.VarValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RecordsAPI.VarValue, 2));
};


/** @param {Array.<!proto.RecordsAPI.VarValue>} value  */
proto.RecordsAPI.Record.prototype.setVariablesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


proto.RecordsAPI.Record.prototype.clearVariablesList = function() {
  this.setVariablesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.RecordList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.RecordList.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.RecordList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.RecordList.displayName = 'proto.RecordsAPI.RecordList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.RecordList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.RecordList.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.RecordList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.RecordList} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.RecordList.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordsList: jspb.Message.toObjectList(msg.getRecordsList(),
    proto.RecordsAPI.Record.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.RecordList}
 */
proto.RecordsAPI.RecordList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.RecordList;
  return proto.RecordsAPI.RecordList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.RecordList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.RecordList}
 */
proto.RecordsAPI.RecordList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.Record;
      reader.readMessage(value,proto.RecordsAPI.Record.deserializeBinaryFromReader);
      msg.getRecordsList().push(value);
      msg.setRecordsList(msg.getRecordsList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.RecordList} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RecordList.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.RecordList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RecordList.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.RecordsAPI.Record.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.RecordList} The clone.
 */
proto.RecordsAPI.RecordList.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.RecordList} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated Record records = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.RecordsAPI.Record>}
 */
proto.RecordsAPI.RecordList.prototype.getRecordsList = function() {
  return /** @type{!Array.<!proto.RecordsAPI.Record>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RecordsAPI.Record, 1));
};


/** @param {Array.<!proto.RecordsAPI.Record>} value  */
proto.RecordsAPI.RecordList.prototype.setRecordsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.RecordsAPI.RecordList.prototype.clearRecordsList = function() {
  this.setRecordsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.RecordTable = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.RecordTable.repeatedFields_, proto.RecordsAPI.RecordTable.oneofGroups_);
};
goog.inherits(proto.RecordsAPI.RecordTable, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.RecordTable.displayName = 'proto.RecordsAPI.RecordTable';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.RecordTable.repeatedFields_ = [1,2];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.RecordsAPI.RecordTable.oneofGroups_ = [[3,4,5]];

/**
 * @enum {number}
 */
proto.RecordsAPI.RecordTable.ListCase = {
  LIST_NOT_SET: 0,
  REALS: 3,
  INTEGERS: 4,
  STRINGS: 5
};

/**
 * @return {proto.RecordsAPI.RecordTable.ListCase}
 */
proto.RecordsAPI.RecordTable.prototype.getListCase = function() {
  return /** @type {proto.RecordsAPI.RecordTable.ListCase} */(jspb.Message.computeOneofCase(this, proto.RecordsAPI.RecordTable.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.RecordTable.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.RecordTable.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.RecordTable} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.RecordTable.toObject = function(includeInstance, msg) {
  var f, obj = {
    varIdsList: jspb.Message.getField(msg, 1),
    recIdsList: jspb.Message.getField(msg, 2),
    reals: (f = msg.getReals()) && proto.RecordsAPI.DoubleList.toObject(includeInstance, f),
    integers: (f = msg.getIntegers()) && proto.RecordsAPI.IntegerList.toObject(includeInstance, f),
    strings: (f = msg.getStrings()) && proto.RecordsAPI.StringList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.RecordTable}
 */
proto.RecordsAPI.RecordTable.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.RecordTable;
  return proto.RecordsAPI.RecordTable.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.RecordTable} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.RecordTable}
 */
proto.RecordsAPI.RecordTable.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
      msg.setVarIdsList(value);
      break;
    case 2:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt64());
      msg.setRecIdsList(value);
      break;
    case 3:
      var value = new proto.RecordsAPI.DoubleList;
      reader.readMessage(value,proto.RecordsAPI.DoubleList.deserializeBinaryFromReader);
      msg.setReals(value);
      break;
    case 4:
      var value = new proto.RecordsAPI.IntegerList;
      reader.readMessage(value,proto.RecordsAPI.IntegerList.deserializeBinaryFromReader);
      msg.setIntegers(value);
      break;
    case 5:
      var value = new proto.RecordsAPI.StringList;
      reader.readMessage(value,proto.RecordsAPI.StringList.deserializeBinaryFromReader);
      msg.setStrings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.RecordTable} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RecordTable.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.RecordTable.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RecordTable.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getVarIdsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      1,
      f
    );
  }
  f = this.getRecIdsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      2,
      f
    );
  }
  f = this.getReals();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.RecordsAPI.DoubleList.serializeBinaryToWriter
    );
  }
  f = this.getIntegers();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.RecordsAPI.IntegerList.serializeBinaryToWriter
    );
  }
  f = this.getStrings();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.RecordsAPI.StringList.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.RecordTable} The clone.
 */
proto.RecordsAPI.RecordTable.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.RecordTable} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated int32 var_ids = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.RecordsAPI.RecordTable.prototype.getVarIdsList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 1));
};


/** @param {Array.<number>} value  */
proto.RecordsAPI.RecordTable.prototype.setVarIdsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


proto.RecordsAPI.RecordTable.prototype.clearVarIdsList = function() {
  jspb.Message.setField(this, 1, []);
};


/**
 * repeated int64 rec_ids = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.RecordsAPI.RecordTable.prototype.getRecIdsList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 2));
};


/** @param {Array.<number>} value  */
proto.RecordsAPI.RecordTable.prototype.setRecIdsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


proto.RecordsAPI.RecordTable.prototype.clearRecIdsList = function() {
  jspb.Message.setField(this, 2, []);
};


/**
 * optional DoubleList reals = 3;
 * @return {proto.RecordsAPI.DoubleList}
 */
proto.RecordsAPI.RecordTable.prototype.getReals = function() {
  return /** @type{proto.RecordsAPI.DoubleList} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.DoubleList, 3));
};


/** @param {proto.RecordsAPI.DoubleList|undefined} value  */
proto.RecordsAPI.RecordTable.prototype.setReals = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.RecordsAPI.RecordTable.oneofGroups_[0], value);
};


proto.RecordsAPI.RecordTable.prototype.clearReals = function() {
  this.setReals(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.RecordTable.prototype.hasReals = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional IntegerList integers = 4;
 * @return {proto.RecordsAPI.IntegerList}
 */
proto.RecordsAPI.RecordTable.prototype.getIntegers = function() {
  return /** @type{proto.RecordsAPI.IntegerList} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.IntegerList, 4));
};


/** @param {proto.RecordsAPI.IntegerList|undefined} value  */
proto.RecordsAPI.RecordTable.prototype.setIntegers = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.RecordsAPI.RecordTable.oneofGroups_[0], value);
};


proto.RecordsAPI.RecordTable.prototype.clearIntegers = function() {
  this.setIntegers(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.RecordTable.prototype.hasIntegers = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional StringList strings = 5;
 * @return {proto.RecordsAPI.StringList}
 */
proto.RecordsAPI.RecordTable.prototype.getStrings = function() {
  return /** @type{proto.RecordsAPI.StringList} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.StringList, 5));
};


/** @param {proto.RecordsAPI.StringList|undefined} value  */
proto.RecordsAPI.RecordTable.prototype.setStrings = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.RecordsAPI.RecordTable.oneofGroups_[0], value);
};


proto.RecordsAPI.RecordTable.prototype.clearStrings = function() {
  this.setStrings(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.RecordTable.prototype.hasStrings = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.RecordData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.RecordsAPI.RecordData.oneofGroups_);
};
goog.inherits(proto.RecordsAPI.RecordData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.RecordData.displayName = 'proto.RecordsAPI.RecordData';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.RecordsAPI.RecordData.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.RecordsAPI.RecordData.StyleCase = {
  STYLE_NOT_SET: 0,
  LIST: 1,
  TABLE: 2
};

/**
 * @return {proto.RecordsAPI.RecordData.StyleCase}
 */
proto.RecordsAPI.RecordData.prototype.getStyleCase = function() {
  return /** @type {proto.RecordsAPI.RecordData.StyleCase} */(jspb.Message.computeOneofCase(this, proto.RecordsAPI.RecordData.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.RecordData.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.RecordData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.RecordData} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.RecordData.toObject = function(includeInstance, msg) {
  var f, obj = {
    list: (f = msg.getList()) && proto.RecordsAPI.RecordList.toObject(includeInstance, f),
    table: (f = msg.getTable()) && proto.RecordsAPI.RecordTable.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.RecordData}
 */
proto.RecordsAPI.RecordData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.RecordData;
  return proto.RecordsAPI.RecordData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.RecordData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.RecordData}
 */
proto.RecordsAPI.RecordData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.RecordList;
      reader.readMessage(value,proto.RecordsAPI.RecordList.deserializeBinaryFromReader);
      msg.setList(value);
      break;
    case 2:
      var value = new proto.RecordsAPI.RecordTable;
      reader.readMessage(value,proto.RecordsAPI.RecordTable.deserializeBinaryFromReader);
      msg.setTable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.RecordData} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RecordData.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.RecordData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RecordData.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getList();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.RecordsAPI.RecordList.serializeBinaryToWriter
    );
  }
  f = this.getTable();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.RecordsAPI.RecordTable.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.RecordData} The clone.
 */
proto.RecordsAPI.RecordData.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.RecordData} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional RecordList list = 1;
 * @return {proto.RecordsAPI.RecordList}
 */
proto.RecordsAPI.RecordData.prototype.getList = function() {
  return /** @type{proto.RecordsAPI.RecordList} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.RecordList, 1));
};


/** @param {proto.RecordsAPI.RecordList|undefined} value  */
proto.RecordsAPI.RecordData.prototype.setList = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.RecordsAPI.RecordData.oneofGroups_[0], value);
};


proto.RecordsAPI.RecordData.prototype.clearList = function() {
  this.setList(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.RecordData.prototype.hasList = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RecordTable table = 2;
 * @return {proto.RecordsAPI.RecordTable}
 */
proto.RecordsAPI.RecordData.prototype.getTable = function() {
  return /** @type{proto.RecordsAPI.RecordTable} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.RecordTable, 2));
};


/** @param {proto.RecordsAPI.RecordTable|undefined} value  */
proto.RecordsAPI.RecordData.prototype.setTable = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.RecordsAPI.RecordData.oneofGroups_[0], value);
};


proto.RecordsAPI.RecordData.prototype.clearTable = function() {
  this.setTable(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.RecordData.prototype.hasTable = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.RecordsAPI.Response.oneofGroups_);
};
goog.inherits(proto.RecordsAPI.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.Response.displayName = 'proto.RecordsAPI.Response';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.RecordsAPI.Response.oneofGroups_ = [[5,6,7,8]];

/**
 * @enum {number}
 */
proto.RecordsAPI.Response.TypeCase = {
  TYPE_NOT_SET: 0,
  ERROR: 5,
  MODELS: 6,
  DATA: 7,
  BOOKMARKS: 8
};

/**
 * @return {proto.RecordsAPI.Response.TypeCase}
 */
proto.RecordsAPI.Response.prototype.getTypeCase = function() {
  return /** @type {proto.RecordsAPI.Response.TypeCase} */(jspb.Message.computeOneofCase(this, proto.RecordsAPI.Response.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.Response} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: msg.getVersion(),
    id: (f = msg.getId()) && proto.RecordsAPI.OptionalUInt32.toObject(includeInstance, f),
    chunkId: msg.getChunkId(),
    nextChunkId: msg.getNextChunkId(),
    error: jspb.Message.getField(msg, 5),
    models: (f = msg.getModels()) && proto.RecordsAPI.ModelMetaList.toObject(includeInstance, f),
    data: (f = msg.getData()) && proto.RecordsAPI.RecordData.toObject(includeInstance, f),
    bookmarks: (f = msg.getBookmarks()) && proto.RecordsAPI.BookmarkMetaList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.Response}
 */
proto.RecordsAPI.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.Response;
  return proto.RecordsAPI.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.Response}
 */
proto.RecordsAPI.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVersion(value);
      break;
    case 2:
      var value = new proto.RecordsAPI.OptionalUInt32;
      reader.readMessage(value,proto.RecordsAPI.OptionalUInt32.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChunkId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNextChunkId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    case 6:
      var value = new proto.RecordsAPI.ModelMetaList;
      reader.readMessage(value,proto.RecordsAPI.ModelMetaList.deserializeBinaryFromReader);
      msg.setModels(value);
      break;
    case 7:
      var value = new proto.RecordsAPI.RecordData;
      reader.readMessage(value,proto.RecordsAPI.RecordData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 8:
      var value = new proto.RecordsAPI.BookmarkMetaList;
      reader.readMessage(value,proto.RecordsAPI.BookmarkMetaList.deserializeBinaryFromReader);
      msg.setBookmarks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.Response} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.Response.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.Response.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getVersion();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = this.getId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.RecordsAPI.OptionalUInt32.serializeBinaryToWriter
    );
  }
  f = this.getChunkId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = this.getNextChunkId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = jspb.Message.getField(this, 5);
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getModels();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.RecordsAPI.ModelMetaList.serializeBinaryToWriter
    );
  }
  f = this.getData();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.RecordsAPI.RecordData.serializeBinaryToWriter
    );
  }
  f = this.getBookmarks();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.RecordsAPI.BookmarkMetaList.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.Response} The clone.
 */
proto.RecordsAPI.Response.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.Response} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional uint32 version = 1;
 * @return {number}
 */
proto.RecordsAPI.Response.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.RecordsAPI.Response.prototype.setVersion = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional OptionalUInt32 id = 2;
 * @return {proto.RecordsAPI.OptionalUInt32}
 */
proto.RecordsAPI.Response.prototype.getId = function() {
  return /** @type{proto.RecordsAPI.OptionalUInt32} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.OptionalUInt32, 2));
};


/** @param {proto.RecordsAPI.OptionalUInt32|undefined} value  */
proto.RecordsAPI.Response.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.RecordsAPI.Response.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Response.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 chunk_id = 3;
 * @return {number}
 */
proto.RecordsAPI.Response.prototype.getChunkId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.RecordsAPI.Response.prototype.setChunkId = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 next_chunk_id = 4;
 * @return {number}
 */
proto.RecordsAPI.Response.prototype.getNextChunkId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.RecordsAPI.Response.prototype.setNextChunkId = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string error = 5;
 * @return {string}
 */
proto.RecordsAPI.Response.prototype.getError = function() {
  return /** @type {string} */ (!this.hasError() ? "" : jspb.Message.getField(this, 5));
};


/** @param {string?|undefined} value  */
proto.RecordsAPI.Response.prototype.setError = function(value) {
  jspb.Message.setOneofField(this, 5, proto.RecordsAPI.Response.oneofGroups_[0], value);
};


proto.RecordsAPI.Response.prototype.clearError = function() {
  jspb.Message.setOneofField(this, 5, proto.RecordsAPI.Response.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Response.prototype.hasError = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ModelMetaList models = 6;
 * @return {proto.RecordsAPI.ModelMetaList}
 */
proto.RecordsAPI.Response.prototype.getModels = function() {
  return /** @type{proto.RecordsAPI.ModelMetaList} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.ModelMetaList, 6));
};


/** @param {proto.RecordsAPI.ModelMetaList|undefined} value  */
proto.RecordsAPI.Response.prototype.setModels = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.RecordsAPI.Response.oneofGroups_[0], value);
};


proto.RecordsAPI.Response.prototype.clearModels = function() {
  this.setModels(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Response.prototype.hasModels = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional RecordData data = 7;
 * @return {proto.RecordsAPI.RecordData}
 */
proto.RecordsAPI.Response.prototype.getData = function() {
  return /** @type{proto.RecordsAPI.RecordData} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.RecordData, 7));
};


/** @param {proto.RecordsAPI.RecordData|undefined} value  */
proto.RecordsAPI.Response.prototype.setData = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.RecordsAPI.Response.oneofGroups_[0], value);
};


proto.RecordsAPI.Response.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Response.prototype.hasData = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional BookmarkMetaList bookmarks = 8;
 * @return {proto.RecordsAPI.BookmarkMetaList}
 */
proto.RecordsAPI.Response.prototype.getBookmarks = function() {
  return /** @type{proto.RecordsAPI.BookmarkMetaList} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.BookmarkMetaList, 8));
};


/** @param {proto.RecordsAPI.BookmarkMetaList|undefined} value  */
proto.RecordsAPI.Response.prototype.setBookmarks = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.RecordsAPI.Response.oneofGroups_[0], value);
};


proto.RecordsAPI.Response.prototype.clearBookmarks = function() {
  this.setBookmarks(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Response.prototype.hasBookmarks = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.RequestModelsMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RecordsAPI.RequestModelsMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.RequestModelsMeta.displayName = 'proto.RecordsAPI.RequestModelsMeta';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.RequestModelsMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.RequestModelsMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.RequestModelsMeta} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.RequestModelsMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelId: (f = msg.getModelId()) && proto.RecordsAPI.OptionalString.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.RequestModelsMeta}
 */
proto.RecordsAPI.RequestModelsMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.RequestModelsMeta;
  return proto.RecordsAPI.RequestModelsMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.RequestModelsMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.RequestModelsMeta}
 */
proto.RecordsAPI.RequestModelsMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.OptionalString;
      reader.readMessage(value,proto.RecordsAPI.OptionalString.deserializeBinaryFromReader);
      msg.setModelId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.RequestModelsMeta} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RequestModelsMeta.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.RequestModelsMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RequestModelsMeta.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getModelId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.RecordsAPI.OptionalString.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.RequestModelsMeta} The clone.
 */
proto.RecordsAPI.RequestModelsMeta.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.RequestModelsMeta} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional OptionalString model_id = 1;
 * @return {proto.RecordsAPI.OptionalString}
 */
proto.RecordsAPI.RequestModelsMeta.prototype.getModelId = function() {
  return /** @type{proto.RecordsAPI.OptionalString} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.OptionalString, 1));
};


/** @param {proto.RecordsAPI.OptionalString|undefined} value  */
proto.RecordsAPI.RequestModelsMeta.prototype.setModelId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.RecordsAPI.RequestModelsMeta.prototype.clearModelId = function() {
  this.setModelId(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.RequestModelsMeta.prototype.hasModelId = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.RequestRecordsData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.RequestRecordsData.repeatedFields_, proto.RecordsAPI.RequestRecordsData.oneofGroups_);
};
goog.inherits(proto.RecordsAPI.RequestRecordsData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.RequestRecordsData.displayName = 'proto.RecordsAPI.RequestRecordsData';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.RequestRecordsData.repeatedFields_ = [3];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.RecordsAPI.RequestRecordsData.oneofGroups_ = [[4,5]];

/**
 * @enum {number}
 */
proto.RecordsAPI.RequestRecordsData.FilterCase = {
  FILTER_NOT_SET: 0,
  BOOKMARK_ID: 4,
  EXPRESSION: 5
};

/**
 * @return {proto.RecordsAPI.RequestRecordsData.FilterCase}
 */
proto.RecordsAPI.RequestRecordsData.prototype.getFilterCase = function() {
  return /** @type {proto.RecordsAPI.RequestRecordsData.FilterCase} */(jspb.Message.computeOneofCase(this, proto.RecordsAPI.RequestRecordsData.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.RequestRecordsData.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.RequestRecordsData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.RequestRecordsData} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.RequestRecordsData.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelId: msg.getModelId(),
    maxRecords: msg.getMaxRecords(),
    varIdsList: jspb.Message.getField(msg, 3),
    bookmarkId: jspb.Message.getField(msg, 4),
    expression: (f = msg.getExpression()) && proto.RecordsAPI.FilterExpression.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.RequestRecordsData}
 */
proto.RecordsAPI.RequestRecordsData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.RequestRecordsData;
  return proto.RecordsAPI.RequestRecordsData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.RequestRecordsData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.RequestRecordsData}
 */
proto.RecordsAPI.RequestRecordsData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxRecords(value);
      break;
    case 3:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
      msg.setVarIdsList(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookmarkId(value);
      break;
    case 5:
      var value = new proto.RecordsAPI.FilterExpression;
      reader.readMessage(value,proto.RecordsAPI.FilterExpression.deserializeBinaryFromReader);
      msg.setExpression(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.RequestRecordsData} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RequestRecordsData.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.RequestRecordsData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RequestRecordsData.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getModelId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getMaxRecords();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = this.getVarIdsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
  f = jspb.Message.getField(this, 4);
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getExpression();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.RecordsAPI.FilterExpression.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.RequestRecordsData} The clone.
 */
proto.RecordsAPI.RequestRecordsData.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.RequestRecordsData} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string model_id = 1;
 * @return {string}
 */
proto.RecordsAPI.RequestRecordsData.prototype.getModelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.RecordsAPI.RequestRecordsData.prototype.setModelId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint64 max_records = 2;
 * @return {number}
 */
proto.RecordsAPI.RequestRecordsData.prototype.getMaxRecords = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.RecordsAPI.RequestRecordsData.prototype.setMaxRecords = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * repeated int32 var_ids = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.RecordsAPI.RequestRecordsData.prototype.getVarIdsList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 3));
};


/** @param {Array.<number>} value  */
proto.RecordsAPI.RequestRecordsData.prototype.setVarIdsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


proto.RecordsAPI.RequestRecordsData.prototype.clearVarIdsList = function() {
  jspb.Message.setField(this, 3, []);
};


/**
 * optional string bookmark_id = 4;
 * @return {string}
 */
proto.RecordsAPI.RequestRecordsData.prototype.getBookmarkId = function() {
  return /** @type {string} */ (!this.hasBookmarkId() ? "" : jspb.Message.getField(this, 4));
};


/** @param {string?|undefined} value  */
proto.RecordsAPI.RequestRecordsData.prototype.setBookmarkId = function(value) {
  jspb.Message.setOneofField(this, 4, proto.RecordsAPI.RequestRecordsData.oneofGroups_[0], value);
};


proto.RecordsAPI.RequestRecordsData.prototype.clearBookmarkId = function() {
  jspb.Message.setOneofField(this, 4, proto.RecordsAPI.RequestRecordsData.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.RequestRecordsData.prototype.hasBookmarkId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional FilterExpression expression = 5;
 * @return {proto.RecordsAPI.FilterExpression}
 */
proto.RecordsAPI.RequestRecordsData.prototype.getExpression = function() {
  return /** @type{proto.RecordsAPI.FilterExpression} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.FilterExpression, 5));
};


/** @param {proto.RecordsAPI.FilterExpression|undefined} value  */
proto.RecordsAPI.RequestRecordsData.prototype.setExpression = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.RecordsAPI.RequestRecordsData.oneofGroups_[0], value);
};


proto.RecordsAPI.RequestRecordsData.prototype.clearExpression = function() {
  this.setExpression(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.RequestRecordsData.prototype.hasExpression = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.RequestCancel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RecordsAPI.RequestCancel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.RequestCancel.displayName = 'proto.RecordsAPI.RequestCancel';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.RequestCancel.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.RequestCancel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.RequestCancel} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.RequestCancel.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto.RecordsAPI.OptionalUInt32.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.RequestCancel}
 */
proto.RecordsAPI.RequestCancel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.RequestCancel;
  return proto.RecordsAPI.RequestCancel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.RequestCancel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.RequestCancel}
 */
proto.RecordsAPI.RequestCancel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.OptionalUInt32;
      reader.readMessage(value,proto.RecordsAPI.OptionalUInt32.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.RequestCancel} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RequestCancel.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.RequestCancel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RequestCancel.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.RecordsAPI.OptionalUInt32.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.RequestCancel} The clone.
 */
proto.RecordsAPI.RequestCancel.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.RequestCancel} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional OptionalUInt32 id = 1;
 * @return {proto.RecordsAPI.OptionalUInt32}
 */
proto.RecordsAPI.RequestCancel.prototype.getId = function() {
  return /** @type{proto.RecordsAPI.OptionalUInt32} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.OptionalUInt32, 1));
};


/** @param {proto.RecordsAPI.OptionalUInt32|undefined} value  */
proto.RecordsAPI.RequestCancel.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.RecordsAPI.RequestCancel.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.RequestCancel.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.RecordsAPI.Request.oneofGroups_);
};
goog.inherits(proto.RecordsAPI.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.Request.displayName = 'proto.RecordsAPI.Request';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.RecordsAPI.Request.oneofGroups_ = [[4,5,6,7,8,9]];

/**
 * @enum {number}
 */
proto.RecordsAPI.Request.TypeCase = {
  TYPE_NOT_SET: 0,
  MODELS_METADATA: 4,
  RECORDS_DATA: 5,
  BOOKMARK_META: 6,
  SAVE_BOOKMARK: 7,
  CANCEL: 8,
  WORK: 9
};

/**
 * @return {proto.RecordsAPI.Request.TypeCase}
 */
proto.RecordsAPI.Request.prototype.getTypeCase = function() {
  return /** @type {proto.RecordsAPI.Request.TypeCase} */(jspb.Message.computeOneofCase(this, proto.RecordsAPI.Request.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.Request} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: msg.getVersion(),
    id: (f = msg.getId()) && proto.RecordsAPI.OptionalUInt32.toObject(includeInstance, f),
    subscribe: msg.getSubscribe(),
    modelsMetadata: (f = msg.getModelsMetadata()) && proto.RecordsAPI.RequestModelsMeta.toObject(includeInstance, f),
    recordsData: (f = msg.getRecordsData()) && proto.RecordsAPI.RequestRecordsData.toObject(includeInstance, f),
    bookmarkMeta: (f = msg.getBookmarkMeta()) && proto.RecordsAPI.RequestBookmarkMeta.toObject(includeInstance, f),
    saveBookmark: (f = msg.getSaveBookmark()) && proto.RecordsAPI.RequestSaveBookmark.toObject(includeInstance, f),
    cancel: (f = msg.getCancel()) && proto.RecordsAPI.RequestCancel.toObject(includeInstance, f),
    work: (f = msg.getWork()) && proto.RecordsAPI.RequestWork.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.Request}
 */
proto.RecordsAPI.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.Request;
  return proto.RecordsAPI.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.Request}
 */
proto.RecordsAPI.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVersion(value);
      break;
    case 2:
      var value = new proto.RecordsAPI.OptionalUInt32;
      reader.readMessage(value,proto.RecordsAPI.OptionalUInt32.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSubscribe(value);
      break;
    case 4:
      var value = new proto.RecordsAPI.RequestModelsMeta;
      reader.readMessage(value,proto.RecordsAPI.RequestModelsMeta.deserializeBinaryFromReader);
      msg.setModelsMetadata(value);
      break;
    case 5:
      var value = new proto.RecordsAPI.RequestRecordsData;
      reader.readMessage(value,proto.RecordsAPI.RequestRecordsData.deserializeBinaryFromReader);
      msg.setRecordsData(value);
      break;
    case 6:
      var value = new proto.RecordsAPI.RequestBookmarkMeta;
      reader.readMessage(value,proto.RecordsAPI.RequestBookmarkMeta.deserializeBinaryFromReader);
      msg.setBookmarkMeta(value);
      break;
    case 7:
      var value = new proto.RecordsAPI.RequestSaveBookmark;
      reader.readMessage(value,proto.RecordsAPI.RequestSaveBookmark.deserializeBinaryFromReader);
      msg.setSaveBookmark(value);
      break;
    case 8:
      var value = new proto.RecordsAPI.RequestCancel;
      reader.readMessage(value,proto.RecordsAPI.RequestCancel.deserializeBinaryFromReader);
      msg.setCancel(value);
      break;
    case 9:
      var value = new proto.RecordsAPI.RequestWork;
      reader.readMessage(value,proto.RecordsAPI.RequestWork.deserializeBinaryFromReader);
      msg.setWork(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.Request} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.Request.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.Request.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getVersion();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = this.getId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.RecordsAPI.OptionalUInt32.serializeBinaryToWriter
    );
  }
  f = this.getSubscribe();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = this.getModelsMetadata();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.RecordsAPI.RequestModelsMeta.serializeBinaryToWriter
    );
  }
  f = this.getRecordsData();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.RecordsAPI.RequestRecordsData.serializeBinaryToWriter
    );
  }
  f = this.getBookmarkMeta();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.RecordsAPI.RequestBookmarkMeta.serializeBinaryToWriter
    );
  }
  f = this.getSaveBookmark();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.RecordsAPI.RequestSaveBookmark.serializeBinaryToWriter
    );
  }
  f = this.getCancel();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.RecordsAPI.RequestCancel.serializeBinaryToWriter
    );
  }
  f = this.getWork();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.RecordsAPI.RequestWork.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.Request} The clone.
 */
proto.RecordsAPI.Request.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.Request} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional uint32 version = 1;
 * @return {number}
 */
proto.RecordsAPI.Request.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.RecordsAPI.Request.prototype.setVersion = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional OptionalUInt32 id = 2;
 * @return {proto.RecordsAPI.OptionalUInt32}
 */
proto.RecordsAPI.Request.prototype.getId = function() {
  return /** @type{proto.RecordsAPI.OptionalUInt32} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.OptionalUInt32, 2));
};


/** @param {proto.RecordsAPI.OptionalUInt32|undefined} value  */
proto.RecordsAPI.Request.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.RecordsAPI.Request.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Request.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool subscribe = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.RecordsAPI.Request.prototype.getSubscribe = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 3, false));
};


/** @param {boolean} value  */
proto.RecordsAPI.Request.prototype.setSubscribe = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional RequestModelsMeta models_metadata = 4;
 * @return {proto.RecordsAPI.RequestModelsMeta}
 */
proto.RecordsAPI.Request.prototype.getModelsMetadata = function() {
  return /** @type{proto.RecordsAPI.RequestModelsMeta} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.RequestModelsMeta, 4));
};


/** @param {proto.RecordsAPI.RequestModelsMeta|undefined} value  */
proto.RecordsAPI.Request.prototype.setModelsMetadata = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.RecordsAPI.Request.oneofGroups_[0], value);
};


proto.RecordsAPI.Request.prototype.clearModelsMetadata = function() {
  this.setModelsMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Request.prototype.hasModelsMetadata = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional RequestRecordsData records_data = 5;
 * @return {proto.RecordsAPI.RequestRecordsData}
 */
proto.RecordsAPI.Request.prototype.getRecordsData = function() {
  return /** @type{proto.RecordsAPI.RequestRecordsData} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.RequestRecordsData, 5));
};


/** @param {proto.RecordsAPI.RequestRecordsData|undefined} value  */
proto.RecordsAPI.Request.prototype.setRecordsData = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.RecordsAPI.Request.oneofGroups_[0], value);
};


proto.RecordsAPI.Request.prototype.clearRecordsData = function() {
  this.setRecordsData(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Request.prototype.hasRecordsData = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional RequestBookmarkMeta bookmark_meta = 6;
 * @return {proto.RecordsAPI.RequestBookmarkMeta}
 */
proto.RecordsAPI.Request.prototype.getBookmarkMeta = function() {
  return /** @type{proto.RecordsAPI.RequestBookmarkMeta} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.RequestBookmarkMeta, 6));
};


/** @param {proto.RecordsAPI.RequestBookmarkMeta|undefined} value  */
proto.RecordsAPI.Request.prototype.setBookmarkMeta = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.RecordsAPI.Request.oneofGroups_[0], value);
};


proto.RecordsAPI.Request.prototype.clearBookmarkMeta = function() {
  this.setBookmarkMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Request.prototype.hasBookmarkMeta = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional RequestSaveBookmark save_bookmark = 7;
 * @return {proto.RecordsAPI.RequestSaveBookmark}
 */
proto.RecordsAPI.Request.prototype.getSaveBookmark = function() {
  return /** @type{proto.RecordsAPI.RequestSaveBookmark} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.RequestSaveBookmark, 7));
};


/** @param {proto.RecordsAPI.RequestSaveBookmark|undefined} value  */
proto.RecordsAPI.Request.prototype.setSaveBookmark = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.RecordsAPI.Request.oneofGroups_[0], value);
};


proto.RecordsAPI.Request.prototype.clearSaveBookmark = function() {
  this.setSaveBookmark(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Request.prototype.hasSaveBookmark = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional RequestCancel cancel = 8;
 * @return {proto.RecordsAPI.RequestCancel}
 */
proto.RecordsAPI.Request.prototype.getCancel = function() {
  return /** @type{proto.RecordsAPI.RequestCancel} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.RequestCancel, 8));
};


/** @param {proto.RecordsAPI.RequestCancel|undefined} value  */
proto.RecordsAPI.Request.prototype.setCancel = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.RecordsAPI.Request.oneofGroups_[0], value);
};


proto.RecordsAPI.Request.prototype.clearCancel = function() {
  this.setCancel(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Request.prototype.hasCancel = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional RequestWork work = 9;
 * @return {proto.RecordsAPI.RequestWork}
 */
proto.RecordsAPI.Request.prototype.getWork = function() {
  return /** @type{proto.RecordsAPI.RequestWork} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.RequestWork, 9));
};


/** @param {proto.RecordsAPI.RequestWork|undefined} value  */
proto.RecordsAPI.Request.prototype.setWork = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.RecordsAPI.Request.oneofGroups_[0], value);
};


proto.RecordsAPI.Request.prototype.clearWork = function() {
  this.setWork(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Request.prototype.hasWork = function() {
  return jspb.Message.getField(this, 9) != null;
};


goog.object.extend(exports, proto.RecordsAPI);

},{"google-protobuf":3}],2:[function(require,module,exports){
var COMPILED=!0,goog=goog||{};goog.global=this;goog.isDef=function(a){return void 0!==a};goog.exportPath_=function(a,b,c){a=a.split(".");c=c||goog.global;a[0]in c||!c.execScript||c.execScript("var "+a[0]);for(var d;a.length&&(d=a.shift());)!a.length&&goog.isDef(b)?c[d]=b:c=c[d]?c[d]:c[d]={}};
goog.define=function(a,b){var c=b;COMPILED||(goog.global.CLOSURE_UNCOMPILED_DEFINES&&Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES,a)?c=goog.global.CLOSURE_UNCOMPILED_DEFINES[a]:goog.global.CLOSURE_DEFINES&&Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES,a)&&(c=goog.global.CLOSURE_DEFINES[a]));goog.exportPath_(a,c)};goog.DEBUG=!0;goog.LOCALE="en";goog.TRUSTED_SITE=!0;goog.STRICT_MODE_COMPATIBLE=!1;goog.DISALLOW_TEST_ONLY_CODE=COMPILED&&!goog.DEBUG;
goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=!1;goog.provide=function(a){if(!COMPILED&&goog.isProvided_(a))throw Error('Namespace "'+a+'" already declared.');goog.constructNamespace_(a)};goog.constructNamespace_=function(a,b){if(!COMPILED){delete goog.implicitNamespaces_[a];for(var c=a;(c=c.substring(0,c.lastIndexOf(".")))&&!goog.getObjectByName(c);)goog.implicitNamespaces_[c]=!0}goog.exportPath_(a,b)};goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module=function(a){if(!goog.isString(a)||!a||-1==a.search(goog.VALID_MODULE_RE_))throw Error("Invalid module identifier");if(!goog.isInModuleLoader_())throw Error("Module "+a+" has been loaded incorrectly.");if(goog.moduleLoaderState_.moduleName)throw Error("goog.module may only be called once per module.");goog.moduleLoaderState_.moduleName=a;if(!COMPILED){if(goog.isProvided_(a))throw Error('Namespace "'+a+'" already declared.');delete goog.implicitNamespaces_[a]}};goog.module.get=function(a){return goog.module.getInternal_(a)};
goog.module.getInternal_=function(a){if(!COMPILED)return goog.isProvided_(a)?a in goog.loadedModules_?goog.loadedModules_[a]:goog.getObjectByName(a):null};goog.moduleLoaderState_=null;goog.isInModuleLoader_=function(){return null!=goog.moduleLoaderState_};
goog.module.declareLegacyNamespace=function(){if(!COMPILED&&!goog.isInModuleLoader_())throw Error("goog.module.declareLegacyNamespace must be called from within a goog.module");if(!COMPILED&&!goog.moduleLoaderState_.moduleName)throw Error("goog.module must be called prior to goog.module.declareLegacyNamespace.");goog.moduleLoaderState_.declareLegacyNamespace=!0};
goog.setTestOnly=function(a){if(goog.DISALLOW_TEST_ONLY_CODE)throw a=a||"",Error("Importing test-only code into non-debug environment"+(a?": "+a:"."));};goog.forwardDeclare=function(a){};COMPILED||(goog.isProvided_=function(a){return a in goog.loadedModules_||!goog.implicitNamespaces_[a]&&goog.isDefAndNotNull(goog.getObjectByName(a))},goog.implicitNamespaces_={"goog.module":!0});
goog.getObjectByName=function(a,b){for(var c=a.split("."),d=b||goog.global,e;e=c.shift();)if(goog.isDefAndNotNull(d[e]))d=d[e];else return null;return d};goog.globalize=function(a,b){var c=b||goog.global,d;for(d in a)c[d]=a[d]};goog.addDependency=function(a,b,c,d){if(goog.DEPENDENCIES_ENABLED){var e;a=a.replace(/\\/g,"/");for(var f=goog.dependencies_,g=0;e=b[g];g++)f.nameToPath[e]=a,f.pathIsModule[a]=!!d;for(d=0;b=c[d];d++)a in f.requires||(f.requires[a]={}),f.requires[a][b]=!0}};
goog.ENABLE_DEBUG_LOADER=!0;goog.logToConsole_=function(a){goog.global.console&&goog.global.console.error(a)};goog.require=function(a){if(!COMPILED){goog.ENABLE_DEBUG_LOADER&&goog.IS_OLD_IE_&&goog.maybeProcessDeferredDep_(a);if(goog.isProvided_(a))return goog.isInModuleLoader_()?goog.module.getInternal_(a):null;if(goog.ENABLE_DEBUG_LOADER){var b=goog.getPathFromDeps_(a);if(b)return goog.writeScripts_(b),null}a="goog.require could not find: "+a;goog.logToConsole_(a);throw Error(a);}};
goog.basePath="";goog.nullFunction=function(){};goog.abstractMethod=function(){throw Error("unimplemented abstract method");};goog.addSingletonGetter=function(a){a.getInstance=function(){if(a.instance_)return a.instance_;goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=a);return a.instance_=new a}};goog.instantiatedSingletons_=[];goog.LOAD_MODULE_USING_EVAL=!0;goog.SEAL_MODULE_EXPORTS=goog.DEBUG;goog.loadedModules_={};goog.DEPENDENCIES_ENABLED=!COMPILED&&goog.ENABLE_DEBUG_LOADER;
goog.DEPENDENCIES_ENABLED&&(goog.dependencies_={pathIsModule:{},nameToPath:{},requires:{},visited:{},written:{},deferred:{}},goog.inHtmlDocument_=function(){var a=goog.global.document;return null!=a&&"write"in a},goog.findBasePath_=function(){if(goog.isDef(goog.global.CLOSURE_BASE_PATH))goog.basePath=goog.global.CLOSURE_BASE_PATH;else if(goog.inHtmlDocument_())for(var a=goog.global.document.getElementsByTagName("SCRIPT"),b=a.length-1;0<=b;--b){var c=a[b].src,d=c.lastIndexOf("?"),d=-1==d?c.length:
d;if("base.js"==c.substr(d-7,7)){goog.basePath=c.substr(0,d-7);break}}},goog.importScript_=function(a,b){(goog.global.CLOSURE_IMPORT_SCRIPT||goog.writeScriptTag_)(a,b)&&(goog.dependencies_.written[a]=!0)},goog.IS_OLD_IE_=!(goog.global.atob||!goog.global.document||!goog.global.document.all),goog.importModule_=function(a){goog.importScript_("",'goog.retrieveAndExecModule_("'+a+'");')&&(goog.dependencies_.written[a]=!0)},goog.queuedModules_=[],goog.wrapModule_=function(a,b){return goog.LOAD_MODULE_USING_EVAL&&
goog.isDef(goog.global.JSON)?"goog.loadModule("+goog.global.JSON.stringify(b+"\n//# sourceURL="+a+"\n")+");":'goog.loadModule(function(exports) {"use strict";'+b+"\n;return exports});\n//# sourceURL="+a+"\n"},goog.loadQueuedModules_=function(){var a=goog.queuedModules_.length;if(0<a){var b=goog.queuedModules_;goog.queuedModules_=[];for(var c=0;c<a;c++)goog.maybeProcessDeferredPath_(b[c])}},goog.maybeProcessDeferredDep_=function(a){goog.isDeferredModule_(a)&&goog.allDepsAreAvailable_(a)&&(a=goog.getPathFromDeps_(a),
goog.maybeProcessDeferredPath_(goog.basePath+a))},goog.isDeferredModule_=function(a){return(a=goog.getPathFromDeps_(a))&&goog.dependencies_.pathIsModule[a]?goog.basePath+a in goog.dependencies_.deferred:!1},goog.allDepsAreAvailable_=function(a){if((a=goog.getPathFromDeps_(a))&&a in goog.dependencies_.requires)for(var b in goog.dependencies_.requires[a])if(!goog.isProvided_(b)&&!goog.isDeferredModule_(b))return!1;return!0},goog.maybeProcessDeferredPath_=function(a){if(a in goog.dependencies_.deferred){var b=
goog.dependencies_.deferred[a];delete goog.dependencies_.deferred[a];goog.globalEval(b)}},goog.loadModuleFromUrl=function(a){goog.retrieveAndExecModule_(a)},goog.loadModule=function(a){var b=goog.moduleLoaderState_;try{goog.moduleLoaderState_={moduleName:void 0,declareLegacyNamespace:!1};var c;if(goog.isFunction(a))c=a.call(goog.global,{});else if(goog.isString(a))c=goog.loadModuleFromSource_.call(goog.global,a);else throw Error("Invalid module definition");var d=goog.moduleLoaderState_.moduleName;
if(!goog.isString(d)||!d)throw Error('Invalid module name "'+d+'"');goog.moduleLoaderState_.declareLegacyNamespace?goog.constructNamespace_(d,c):goog.SEAL_MODULE_EXPORTS&&Object.seal&&Object.seal(c);goog.loadedModules_[d]=c}finally{goog.moduleLoaderState_=b}},goog.loadModuleFromSource_=function(a){eval(a);return{}},goog.writeScriptSrcNode_=function(a){goog.global.document.write('<script type="text/javascript" src="'+a+'">\x3c/script>')},goog.appendScriptSrcNode_=function(a){var b=goog.global.document,
c=b.createElement("script");c.type="text/javascript";c.src=a;c.defer=!1;c.async=!1;b.head.appendChild(c)},goog.writeScriptTag_=function(a,b){if(goog.inHtmlDocument_()){var c=goog.global.document;if(!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING&&"complete"==c.readyState){if(/\bdeps.js$/.test(a))return!1;throw Error('Cannot write "'+a+'" after document load');}var d=goog.IS_OLD_IE_;void 0===b?d?(d=" onreadystatechange='goog.onScriptLoad_(this, "+ ++goog.lastNonModuleScriptIndex_+")' ",c.write('<script type="text/javascript" src="'+
a+'"'+d+">\x3c/script>")):goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING?goog.appendScriptSrcNode_(a):goog.writeScriptSrcNode_(a):c.write('<script type="text/javascript">'+b+"\x3c/script>");return!0}return!1},goog.lastNonModuleScriptIndex_=0,goog.onScriptLoad_=function(a,b){"complete"==a.readyState&&goog.lastNonModuleScriptIndex_==b&&goog.loadQueuedModules_();return!0},goog.writeScripts_=function(a){function b(a){if(!(a in e.written||a in e.visited)){e.visited[a]=!0;if(a in e.requires)for(var f in e.requires[a])if(!goog.isProvided_(f))if(f in
e.nameToPath)b(e.nameToPath[f]);else throw Error("Undefined nameToPath for "+f);a in d||(d[a]=!0,c.push(a))}}var c=[],d={},e=goog.dependencies_;b(a);for(a=0;a<c.length;a++){var f=c[a];goog.dependencies_.written[f]=!0}var g=goog.moduleLoaderState_;goog.moduleLoaderState_=null;for(a=0;a<c.length;a++)if(f=c[a])e.pathIsModule[f]?goog.importModule_(goog.basePath+f):goog.importScript_(goog.basePath+f);else throw goog.moduleLoaderState_=g,Error("Undefined script input");goog.moduleLoaderState_=g},goog.getPathFromDeps_=
function(a){return a in goog.dependencies_.nameToPath?goog.dependencies_.nameToPath[a]:null},goog.findBasePath_(),goog.global.CLOSURE_NO_DEPS||goog.importScript_(goog.basePath+"deps.js"));goog.normalizePath_=function(a){a=a.split("/");for(var b=0;b<a.length;)"."==a[b]?a.splice(b,1):b&&".."==a[b]&&a[b-1]&&".."!=a[b-1]?a.splice(--b,2):b++;return a.join("/")};
goog.loadFileSync_=function(a){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(a);var b=new goog.global.XMLHttpRequest;b.open("get",a,!1);b.send();return b.responseText};
goog.retrieveAndExecModule_=function(a){if(!COMPILED){var b=a;a=goog.normalizePath_(a);var c=goog.global.CLOSURE_IMPORT_SCRIPT||goog.writeScriptTag_,d=goog.loadFileSync_(a);if(null!=d)d=goog.wrapModule_(a,d),goog.IS_OLD_IE_?(goog.dependencies_.deferred[b]=d,goog.queuedModules_.push(b)):c(a,d);else throw Error("load of "+a+"failed");}};
goog.typeOf=function(a){var b=typeof a;if("object"==b)if(a){if(a instanceof Array)return"array";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if("[object Window]"==c)return"object";if("[object Array]"==c||"number"==typeof a.length&&"undefined"!=typeof a.splice&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("splice"))return"array";if("[object Function]"==c||"undefined"!=typeof a.call&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("call"))return"function"}else return"null";
else if("function"==b&&"undefined"==typeof a.call)return"object";return b};goog.isNull=function(a){return null===a};goog.isDefAndNotNull=function(a){return null!=a};goog.isArray=function(a){return"array"==goog.typeOf(a)};goog.isArrayLike=function(a){var b=goog.typeOf(a);return"array"==b||"object"==b&&"number"==typeof a.length};goog.isDateLike=function(a){return goog.isObject(a)&&"function"==typeof a.getFullYear};goog.isString=function(a){return"string"==typeof a};
goog.isBoolean=function(a){return"boolean"==typeof a};goog.isNumber=function(a){return"number"==typeof a};goog.isFunction=function(a){return"function"==goog.typeOf(a)};goog.isObject=function(a){var b=typeof a;return"object"==b&&null!=a||"function"==b};goog.getUid=function(a){return a[goog.UID_PROPERTY_]||(a[goog.UID_PROPERTY_]=++goog.uidCounter_)};goog.hasUid=function(a){return!!a[goog.UID_PROPERTY_]};
goog.removeUid=function(a){null!==a&&"removeAttribute"in a&&a.removeAttribute(goog.UID_PROPERTY_);try{delete a[goog.UID_PROPERTY_]}catch(b){}};goog.UID_PROPERTY_="closure_uid_"+(1E9*Math.random()>>>0);goog.uidCounter_=0;goog.getHashCode=goog.getUid;goog.removeHashCode=goog.removeUid;goog.cloneObject=function(a){var b=goog.typeOf(a);if("object"==b||"array"==b){if(a.clone)return a.clone();var b="array"==b?[]:{},c;for(c in a)b[c]=goog.cloneObject(a[c]);return b}return a};
goog.bindNative_=function(a,b,c){return a.call.apply(a.bind,arguments)};goog.bindJs_=function(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}};
goog.bind=function(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_;return goog.bind.apply(null,arguments)};goog.partial=function(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=c.slice();b.push.apply(b,arguments);return a.apply(this,b)}};goog.mixin=function(a,b){for(var c in b)a[c]=b[c]};goog.now=goog.TRUSTED_SITE&&Date.now||function(){return+new Date};
goog.globalEval=function(a){if(goog.global.execScript)goog.global.execScript(a,"JavaScript");else if(goog.global.eval){if(null==goog.evalWorksForGlobals_)if(goog.global.eval("var _evalTest_ = 1;"),"undefined"!=typeof goog.global._evalTest_){try{delete goog.global._evalTest_}catch(d){}goog.evalWorksForGlobals_=!0}else goog.evalWorksForGlobals_=!1;if(goog.evalWorksForGlobals_)goog.global.eval(a);else{var b=goog.global.document,c=b.createElement("SCRIPT");c.type="text/javascript";c.defer=!1;c.appendChild(b.createTextNode(a));
b.body.appendChild(c);b.body.removeChild(c)}}else throw Error("goog.globalEval not available");};goog.evalWorksForGlobals_=null;goog.getCssName=function(a,b){var c=function(a){return goog.cssNameMapping_[a]||a},d=function(a){a=a.split("-");for(var b=[],d=0;d<a.length;d++)b.push(c(a[d]));return b.join("-")},d=goog.cssNameMapping_?"BY_WHOLE"==goog.cssNameMappingStyle_?c:d:function(a){return a};return b?a+"-"+d(b):d(a)};
goog.setCssNameMapping=function(a,b){goog.cssNameMapping_=a;goog.cssNameMappingStyle_=b};!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING&&(goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING);goog.getMsg=function(a,b){b&&(a=a.replace(/\{\$([^}]+)}/g,function(a,d){return null!=b&&d in b?b[d]:a}));return a};goog.getMsgWithFallback=function(a,b){return a};goog.exportSymbol=function(a,b,c){goog.exportPath_(a,b,c)};goog.exportProperty=function(a,b,c){a[b]=c};
goog.inherits=function(a,b){function c(){}c.prototype=b.prototype;a.superClass_=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.base=function(a,c,f){for(var g=Array(arguments.length-2),h=2;h<arguments.length;h++)g[h-2]=arguments[h];return b.prototype[c].apply(a,g)}};
goog.base=function(a,b,c){var d=arguments.callee.caller;if(goog.STRICT_MODE_COMPATIBLE||goog.DEBUG&&!d)throw Error("arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C");if(d.superClass_){for(var e=Array(arguments.length-1),f=1;f<arguments.length;f++)e[f-1]=arguments[f];return d.superClass_.constructor.apply(a,e)}e=Array(arguments.length-2);for(f=2;f<arguments.length;f++)e[f-2]=arguments[f];for(var f=!1,g=a.constructor;g;g=
g.superClass_&&g.superClass_.constructor)if(g.prototype[b]===d)f=!0;else if(f)return g.prototype[b].apply(a,e);if(a[b]===d)return a.constructor.prototype[b].apply(a,e);throw Error("goog.base called from a method of one name to a method of a different name");};goog.scope=function(a){a.call(goog.global)};COMPILED||(goog.global.COMPILED=COMPILED);
goog.defineClass=function(a,b){var c=b.constructor,d=b.statics;c&&c!=Object.prototype.constructor||(c=function(){throw Error("cannot instantiate an interface (no constructor defined).");});c=goog.defineClass.createSealingConstructor_(c,a);a&&goog.inherits(c,a);delete b.constructor;delete b.statics;goog.defineClass.applyProperties_(c.prototype,b);null!=d&&(d instanceof Function?d(c):goog.defineClass.applyProperties_(c,d));return c};goog.defineClass.SEAL_CLASS_INSTANCES=goog.DEBUG;
goog.defineClass.createSealingConstructor_=function(a,b){if(goog.defineClass.SEAL_CLASS_INSTANCES&&Object.seal instanceof Function){if(b&&b.prototype&&b.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_])return a;var c=function(){var b=a.apply(this,arguments)||this;b[goog.UID_PROPERTY_]=b[goog.UID_PROPERTY_];this.constructor===c&&Object.seal(b);return b};return c}return a};goog.defineClass.OBJECT_PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.defineClass.applyProperties_=function(a,b){for(var c in b)Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c]);for(var d=0;d<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;d++)c=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d],Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c])};goog.tagUnsealableClass=function(a){!COMPILED&&goog.defineClass.SEAL_CLASS_INSTANCES&&(a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]=!0)};goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_="goog_defineClass_legacy_unsealable";goog.debug={};goog.debug.Error=function(a){if(Error.captureStackTrace)Error.captureStackTrace(this,goog.debug.Error);else{var b=Error().stack;b&&(this.stack=b)}a&&(this.message=String(a));this.reportErrorToServer=!0};goog.inherits(goog.debug.Error,Error);goog.debug.Error.prototype.name="CustomError";goog.dom={};goog.dom.NodeType={ELEMENT:1,ATTRIBUTE:2,TEXT:3,CDATA_SECTION:4,ENTITY_REFERENCE:5,ENTITY:6,PROCESSING_INSTRUCTION:7,COMMENT:8,DOCUMENT:9,DOCUMENT_TYPE:10,DOCUMENT_FRAGMENT:11,NOTATION:12};goog.string={};goog.string.DETECT_DOUBLE_ESCAPING=!1;goog.string.FORCE_NON_DOM_HTML_UNESCAPING=!1;goog.string.Unicode={NBSP:"\u00a0"};goog.string.startsWith=function(a,b){return 0==a.lastIndexOf(b,0)};goog.string.endsWith=function(a,b){var c=a.length-b.length;return 0<=c&&a.indexOf(b,c)==c};goog.string.caseInsensitiveStartsWith=function(a,b){return 0==goog.string.caseInsensitiveCompare(b,a.substr(0,b.length))};
goog.string.caseInsensitiveEndsWith=function(a,b){return 0==goog.string.caseInsensitiveCompare(b,a.substr(a.length-b.length,b.length))};goog.string.caseInsensitiveEquals=function(a,b){return a.toLowerCase()==b.toLowerCase()};goog.string.subs=function(a,b){for(var c=a.split("%s"),d="",e=Array.prototype.slice.call(arguments,1);e.length&&1<c.length;)d+=c.shift()+e.shift();return d+c.join("%s")};goog.string.collapseWhitespace=function(a){return a.replace(/[\s\xa0]+/g," ").replace(/^\s+|\s+$/g,"")};
goog.string.isEmptyOrWhitespace=function(a){return/^[\s\xa0]*$/.test(a)};goog.string.isEmptyString=function(a){return 0==a.length};goog.string.isEmpty=goog.string.isEmptyOrWhitespace;goog.string.isEmptyOrWhitespaceSafe=function(a){return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a))};goog.string.isEmptySafe=goog.string.isEmptyOrWhitespaceSafe;goog.string.isBreakingWhitespace=function(a){return!/[^\t\n\r ]/.test(a)};goog.string.isAlpha=function(a){return!/[^a-zA-Z]/.test(a)};
goog.string.isNumeric=function(a){return!/[^0-9]/.test(a)};goog.string.isAlphaNumeric=function(a){return!/[^a-zA-Z0-9]/.test(a)};goog.string.isSpace=function(a){return" "==a};goog.string.isUnicodeChar=function(a){return 1==a.length&&" "<=a&&"~">=a||"\u0080"<=a&&"\ufffd">=a};goog.string.stripNewlines=function(a){return a.replace(/(\r\n|\r|\n)+/g," ")};goog.string.canonicalizeNewlines=function(a){return a.replace(/(\r\n|\r|\n)/g,"\n")};
goog.string.normalizeWhitespace=function(a){return a.replace(/\xa0|\s/g," ")};goog.string.normalizeSpaces=function(a){return a.replace(/\xa0|[ \t]+/g," ")};goog.string.collapseBreakingSpaces=function(a){return a.replace(/[\t\r\n ]+/g," ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g,"")};goog.string.trim=goog.TRUSTED_SITE&&String.prototype.trim?function(a){return a.trim()}:function(a){return a.replace(/^[\s\xa0]+|[\s\xa0]+$/g,"")};goog.string.trimLeft=function(a){return a.replace(/^[\s\xa0]+/,"")};
goog.string.trimRight=function(a){return a.replace(/[\s\xa0]+$/,"")};goog.string.caseInsensitiveCompare=function(a,b){var c=String(a).toLowerCase(),d=String(b).toLowerCase();return c<d?-1:c==d?0:1};
goog.string.numberAwareCompare_=function(a,b,c){if(a==b)return 0;if(!a)return-1;if(!b)return 1;for(var d=a.toLowerCase().match(c),e=b.toLowerCase().match(c),f=Math.min(d.length,e.length),g=0;g<f;g++){c=d[g];var h=e[g];if(c!=h)return a=parseInt(c,10),!isNaN(a)&&(b=parseInt(h,10),!isNaN(b)&&a-b)?a-b:c<h?-1:1}return d.length!=e.length?d.length-e.length:a<b?-1:1};goog.string.intAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\d+|\D+/g)};
goog.string.floatAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\d+|\.\d+|\D+/g)};goog.string.numerateCompare=goog.string.floatAwareCompare;goog.string.urlEncode=function(a){return encodeURIComponent(String(a))};goog.string.urlDecode=function(a){return decodeURIComponent(a.replace(/\+/g," "))};goog.string.newLineToBr=function(a,b){return a.replace(/(\r\n|\r|\n)/g,b?"<br />":"<br>")};
goog.string.htmlEscape=function(a,b){if(b)a=a.replace(goog.string.AMP_RE_,"&amp;").replace(goog.string.LT_RE_,"&lt;").replace(goog.string.GT_RE_,"&gt;").replace(goog.string.QUOT_RE_,"&quot;").replace(goog.string.SINGLE_QUOTE_RE_,"&#39;").replace(goog.string.NULL_RE_,"&#0;"),goog.string.DETECT_DOUBLE_ESCAPING&&(a=a.replace(goog.string.E_RE_,"&#101;"));else{if(!goog.string.ALL_RE_.test(a))return a;-1!=a.indexOf("&")&&(a=a.replace(goog.string.AMP_RE_,"&amp;"));-1!=a.indexOf("<")&&(a=a.replace(goog.string.LT_RE_,
"&lt;"));-1!=a.indexOf(">")&&(a=a.replace(goog.string.GT_RE_,"&gt;"));-1!=a.indexOf('"')&&(a=a.replace(goog.string.QUOT_RE_,"&quot;"));-1!=a.indexOf("'")&&(a=a.replace(goog.string.SINGLE_QUOTE_RE_,"&#39;"));-1!=a.indexOf("\x00")&&(a=a.replace(goog.string.NULL_RE_,"&#0;"));goog.string.DETECT_DOUBLE_ESCAPING&&-1!=a.indexOf("e")&&(a=a.replace(goog.string.E_RE_,"&#101;"))}return a};goog.string.AMP_RE_=/&/g;goog.string.LT_RE_=/</g;goog.string.GT_RE_=/>/g;goog.string.QUOT_RE_=/"/g;
goog.string.SINGLE_QUOTE_RE_=/'/g;goog.string.NULL_RE_=/\x00/g;goog.string.E_RE_=/e/g;goog.string.ALL_RE_=goog.string.DETECT_DOUBLE_ESCAPING?/[\x00&<>"'e]/:/[\x00&<>"']/;goog.string.unescapeEntities=function(a){return goog.string.contains(a,"&")?!goog.string.FORCE_NON_DOM_HTML_UNESCAPING&&"document"in goog.global?goog.string.unescapeEntitiesUsingDom_(a):goog.string.unescapePureXmlEntities_(a):a};
goog.string.unescapeEntitiesWithDocument=function(a,b){return goog.string.contains(a,"&")?goog.string.unescapeEntitiesUsingDom_(a,b):a};
goog.string.unescapeEntitiesUsingDom_=function(a,b){var c={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"'},d;d=b?b.createElement("div"):goog.global.document.createElement("div");return a.replace(goog.string.HTML_ENTITY_PATTERN_,function(a,b){var g=c[a];if(g)return g;if("#"==b.charAt(0)){var h=Number("0"+b.substr(1));isNaN(h)||(g=String.fromCharCode(h))}g||(d.innerHTML=a+" ",g=d.firstChild.nodeValue.slice(0,-1));return c[a]=g})};
goog.string.unescapePureXmlEntities_=function(a){return a.replace(/&([^;]+);/g,function(a,c){switch(c){case "amp":return"&";case "lt":return"<";case "gt":return">";case "quot":return'"';default:if("#"==c.charAt(0)){var d=Number("0"+c.substr(1));if(!isNaN(d))return String.fromCharCode(d)}return a}})};goog.string.HTML_ENTITY_PATTERN_=/&([^;\s<&]+);?/g;goog.string.whitespaceEscape=function(a,b){return goog.string.newLineToBr(a.replace(/  /g," &#160;"),b)};
goog.string.preserveSpaces=function(a){return a.replace(/(^|[\n ]) /g,"$1"+goog.string.Unicode.NBSP)};goog.string.stripQuotes=function(a,b){for(var c=b.length,d=0;d<c;d++){var e=1==c?b:b.charAt(d);if(a.charAt(0)==e&&a.charAt(a.length-1)==e)return a.substring(1,a.length-1)}return a};goog.string.truncate=function(a,b,c){c&&(a=goog.string.unescapeEntities(a));a.length>b&&(a=a.substring(0,b-3)+"...");c&&(a=goog.string.htmlEscape(a));return a};
goog.string.truncateMiddle=function(a,b,c,d){c&&(a=goog.string.unescapeEntities(a));if(d&&a.length>b){d>b&&(d=b);var e=a.length-d;a=a.substring(0,b-d)+"..."+a.substring(e)}else a.length>b&&(d=Math.floor(b/2),e=a.length-d,a=a.substring(0,d+b%2)+"..."+a.substring(e));c&&(a=goog.string.htmlEscape(a));return a};goog.string.specialEscapeChars_={"\x00":"\\0","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\x0B":"\\x0B",'"':'\\"',"\\":"\\\\","<":"<"};goog.string.jsEscapeCache_={"'":"\\'"};
goog.string.quote=function(a){a=String(a);for(var b=['"'],c=0;c<a.length;c++){var d=a.charAt(c),e=d.charCodeAt(0);b[c+1]=goog.string.specialEscapeChars_[d]||(31<e&&127>e?d:goog.string.escapeChar(d))}b.push('"');return b.join("")};goog.string.escapeString=function(a){for(var b=[],c=0;c<a.length;c++)b[c]=goog.string.escapeChar(a.charAt(c));return b.join("")};
goog.string.escapeChar=function(a){if(a in goog.string.jsEscapeCache_)return goog.string.jsEscapeCache_[a];if(a in goog.string.specialEscapeChars_)return goog.string.jsEscapeCache_[a]=goog.string.specialEscapeChars_[a];var b,c=a.charCodeAt(0);if(31<c&&127>c)b=a;else{if(256>c){if(b="\\x",16>c||256<c)b+="0"}else b="\\u",4096>c&&(b+="0");b+=c.toString(16).toUpperCase()}return goog.string.jsEscapeCache_[a]=b};goog.string.contains=function(a,b){return-1!=a.indexOf(b)};
goog.string.caseInsensitiveContains=function(a,b){return goog.string.contains(a.toLowerCase(),b.toLowerCase())};goog.string.countOf=function(a,b){return a&&b?a.split(b).length-1:0};goog.string.removeAt=function(a,b,c){var d=a;0<=b&&b<a.length&&0<c&&(d=a.substr(0,b)+a.substr(b+c,a.length-b-c));return d};goog.string.remove=function(a,b){var c=new RegExp(goog.string.regExpEscape(b),"");return a.replace(c,"")};
goog.string.removeAll=function(a,b){var c=new RegExp(goog.string.regExpEscape(b),"g");return a.replace(c,"")};goog.string.regExpEscape=function(a){return String(a).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08")};goog.string.repeat=String.prototype.repeat?function(a,b){return a.repeat(b)}:function(a,b){return Array(b+1).join(a)};
goog.string.padNumber=function(a,b,c){a=goog.isDef(c)?a.toFixed(c):String(a);c=a.indexOf(".");-1==c&&(c=a.length);return goog.string.repeat("0",Math.max(0,b-c))+a};goog.string.makeSafe=function(a){return null==a?"":String(a)};goog.string.buildString=function(a){return Array.prototype.join.call(arguments,"")};goog.string.getRandomString=function(){return Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^goog.now()).toString(36)};
goog.string.compareVersions=function(a,b){for(var c=0,d=goog.string.trim(String(a)).split("."),e=goog.string.trim(String(b)).split("."),f=Math.max(d.length,e.length),g=0;0==c&&g<f;g++){var h=d[g]||"",k=e[g]||"",l=RegExp("(\\d*)(\\D*)","g"),p=RegExp("(\\d*)(\\D*)","g");do{var m=l.exec(h)||["","",""],n=p.exec(k)||["","",""];if(0==m[0].length&&0==n[0].length)break;var c=0==m[1].length?0:parseInt(m[1],10),q=0==n[1].length?0:parseInt(n[1],10),c=goog.string.compareElements_(c,q)||goog.string.compareElements_(0==
m[2].length,0==n[2].length)||goog.string.compareElements_(m[2],n[2])}while(0==c)}return c};goog.string.compareElements_=function(a,b){return a<b?-1:a>b?1:0};goog.string.hashCode=function(a){for(var b=0,c=0;c<a.length;++c)b=31*b+a.charCodeAt(c)>>>0;return b};goog.string.uniqueStringCounter_=2147483648*Math.random()|0;goog.string.createUniqueString=function(){return"goog_"+goog.string.uniqueStringCounter_++};
goog.string.toNumber=function(a){var b=Number(a);return 0==b&&goog.string.isEmptyOrWhitespace(a)?NaN:b};goog.string.isLowerCamelCase=function(a){return/^[a-z]+([A-Z][a-z]*)*$/.test(a)};goog.string.isUpperCamelCase=function(a){return/^([A-Z][a-z]*)+$/.test(a)};goog.string.toCamelCase=function(a){return String(a).replace(/\-([a-z])/g,function(a,c){return c.toUpperCase()})};goog.string.toSelectorCase=function(a){return String(a).replace(/([A-Z])/g,"-$1").toLowerCase()};
goog.string.toTitleCase=function(a,b){var c=goog.isString(b)?goog.string.regExpEscape(b):"\\s";return a.replace(new RegExp("(^"+(c?"|["+c+"]+":"")+")([a-z])","g"),function(a,b,c){return b+c.toUpperCase()})};goog.string.capitalize=function(a){return String(a.charAt(0)).toUpperCase()+String(a.substr(1)).toLowerCase()};goog.string.parseInt=function(a){isFinite(a)&&(a=String(a));return goog.isString(a)?/^\s*-?0x/i.test(a)?parseInt(a,16):parseInt(a,10):NaN};
goog.string.splitLimit=function(a,b,c){a=a.split(b);for(var d=[];0<c&&a.length;)d.push(a.shift()),c--;a.length&&d.push(a.join(b));return d};goog.string.editDistance=function(a,b){var c=[],d=[];if(a==b)return 0;if(!a.length||!b.length)return Math.max(a.length,b.length);for(var e=0;e<b.length+1;e++)c[e]=e;for(e=0;e<a.length;e++){d[0]=e+1;for(var f=0;f<b.length;f++)d[f+1]=Math.min(d[f]+1,c[f+1]+1,c[f]+Number(a[e]!=b[f]));for(f=0;f<c.length;f++)c[f]=d[f]}return d[b.length]};goog.asserts={};goog.asserts.ENABLE_ASSERTS=goog.DEBUG;goog.asserts.AssertionError=function(a,b){b.unshift(a);goog.debug.Error.call(this,goog.string.subs.apply(null,b));b.shift();this.messagePattern=a};goog.inherits(goog.asserts.AssertionError,goog.debug.Error);goog.asserts.AssertionError.prototype.name="AssertionError";goog.asserts.DEFAULT_ERROR_HANDLER=function(a){throw a;};goog.asserts.errorHandler_=goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_=function(a,b,c,d){var e="Assertion failed";if(c)var e=e+(": "+c),f=d;else a&&(e+=": "+a,f=b);a=new goog.asserts.AssertionError(""+e,f||[]);goog.asserts.errorHandler_(a)};goog.asserts.setErrorHandler=function(a){goog.asserts.ENABLE_ASSERTS&&(goog.asserts.errorHandler_=a)};goog.asserts.assert=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!a&&goog.asserts.doAssertFailure_("",null,b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.fail=function(a,b){goog.asserts.ENABLE_ASSERTS&&goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure"+(a?": "+a:""),Array.prototype.slice.call(arguments,1)))};goog.asserts.assertNumber=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isNumber(a)&&goog.asserts.doAssertFailure_("Expected number but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertString=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isString(a)&&goog.asserts.doAssertFailure_("Expected string but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertFunction=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isFunction(a)&&goog.asserts.doAssertFailure_("Expected function but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertObject=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isObject(a)&&goog.asserts.doAssertFailure_("Expected object but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertArray=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isArray(a)&&goog.asserts.doAssertFailure_("Expected array but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertBoolean=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isBoolean(a)&&goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertElement=function(a,b,c){!goog.asserts.ENABLE_ASSERTS||goog.isObject(a)&&a.nodeType==goog.dom.NodeType.ELEMENT||goog.asserts.doAssertFailure_("Expected Element but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertInstanceof=function(a,b,c,d){!goog.asserts.ENABLE_ASSERTS||a instanceof b||goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.",[goog.asserts.getType_(b),goog.asserts.getType_(a)],c,Array.prototype.slice.call(arguments,3));return a};goog.asserts.assertObjectPrototypeIsIntact=function(){for(var a in Object.prototype)goog.asserts.fail(a+" should not be enumerable in Object.prototype.")};
goog.asserts.getType_=function(a){return a instanceof Function?a.displayName||a.name||"unknown type name":a instanceof Object?a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a):null===a?"null":typeof a};goog.array={};goog.NATIVE_ARRAY_PROTOTYPES=goog.TRUSTED_SITE;goog.array.ASSUME_NATIVE_FUNCTIONS=!1;goog.array.peek=function(a){return a[a.length-1]};goog.array.last=goog.array.peek;
goog.array.indexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.indexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.indexOf.call(a,b,c)}:function(a,b,c){c=null==c?0:0>c?Math.max(0,a.length+c):c;if(goog.isString(a))return goog.isString(b)&&1==b.length?a.indexOf(b,c):-1;for(;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1};
goog.array.lastIndexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.lastIndexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.lastIndexOf.call(a,b,null==c?a.length-1:c)}:function(a,b,c){c=null==c?a.length-1:c;0>c&&(c=Math.max(0,a.length+c));if(goog.isString(a))return goog.isString(b)&&1==b.length?a.lastIndexOf(b,c):-1;for(;0<=c;c--)if(c in a&&a[c]===b)return c;return-1};
goog.array.forEach=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.forEach)?function(a,b,c){goog.asserts.assert(null!=a.length);Array.prototype.forEach.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)};goog.array.forEachRight=function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,d=d-1;0<=d;--d)d in e&&b.call(c,e[d],d,a)};
goog.array.filter=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.filter)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.filter.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=[],f=0,g=goog.isString(a)?a.split(""):a,h=0;h<d;h++)if(h in g){var k=g[h];b.call(c,k,h,a)&&(e[f++]=k)}return e};
goog.array.map=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.map)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.map.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=Array(d),f=goog.isString(a)?a.split(""):a,g=0;g<d;g++)g in f&&(e[g]=b.call(c,f[g],g,a));return e};
goog.array.reduce=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduce)?function(a,b,c,d){goog.asserts.assert(null!=a.length);d&&(b=goog.bind(b,d));return Array.prototype.reduce.call(a,b,c)}:function(a,b,c,d){var e=c;goog.array.forEach(a,function(c,g){e=b.call(d,e,c,g,a)});return e};
goog.array.reduceRight=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduceRight)?function(a,b,c,d){goog.asserts.assert(null!=a.length);goog.asserts.assert(null!=b);d&&(b=goog.bind(b,d));return Array.prototype.reduceRight.call(a,b,c)}:function(a,b,c,d){var e=c;goog.array.forEachRight(a,function(c,g){e=b.call(d,e,c,g,a)});return e};
goog.array.some=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.some)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.some.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return!0;return!1};
goog.array.every=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.every)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.every.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,f=0;f<d;f++)if(f in e&&!b.call(c,e[f],f,a))return!1;return!0};goog.array.count=function(a,b,c){var d=0;goog.array.forEach(a,function(a,f,g){b.call(c,a,f,g)&&++d},c);return d};
goog.array.find=function(a,b,c){b=goog.array.findIndex(a,b,c);return 0>b?null:goog.isString(a)?a.charAt(b):a[b]};goog.array.findIndex=function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return f;return-1};goog.array.findRight=function(a,b,c){b=goog.array.findIndexRight(a,b,c);return 0>b?null:goog.isString(a)?a.charAt(b):a[b]};
goog.array.findIndexRight=function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,d=d-1;0<=d;d--)if(d in e&&b.call(c,e[d],d,a))return d;return-1};goog.array.contains=function(a,b){return 0<=goog.array.indexOf(a,b)};goog.array.isEmpty=function(a){return 0==a.length};goog.array.clear=function(a){if(!goog.isArray(a))for(var b=a.length-1;0<=b;b--)delete a[b];a.length=0};goog.array.insert=function(a,b){goog.array.contains(a,b)||a.push(b)};
goog.array.insertAt=function(a,b,c){goog.array.splice(a,c,0,b)};goog.array.insertArrayAt=function(a,b,c){goog.partial(goog.array.splice,a,c,0).apply(null,b)};goog.array.insertBefore=function(a,b,c){var d;2==arguments.length||0>(d=goog.array.indexOf(a,c))?a.push(b):goog.array.insertAt(a,b,d)};goog.array.remove=function(a,b){var c=goog.array.indexOf(a,b),d;(d=0<=c)&&goog.array.removeAt(a,c);return d};
goog.array.removeAt=function(a,b){goog.asserts.assert(null!=a.length);return 1==Array.prototype.splice.call(a,b,1).length};goog.array.removeIf=function(a,b,c){b=goog.array.findIndex(a,b,c);return 0<=b?(goog.array.removeAt(a,b),!0):!1};goog.array.removeAllIf=function(a,b,c){var d=0;goog.array.forEachRight(a,function(e,f){b.call(c,e,f,a)&&goog.array.removeAt(a,f)&&d++});return d};goog.array.concat=function(a){return Array.prototype.concat.apply(Array.prototype,arguments)};
goog.array.join=function(a){return Array.prototype.concat.apply(Array.prototype,arguments)};goog.array.toArray=function(a){var b=a.length;if(0<b){for(var c=Array(b),d=0;d<b;d++)c[d]=a[d];return c}return[]};goog.array.clone=goog.array.toArray;goog.array.extend=function(a,b){for(var c=1;c<arguments.length;c++){var d=arguments[c];if(goog.isArrayLike(d)){var e=a.length||0,f=d.length||0;a.length=e+f;for(var g=0;g<f;g++)a[e+g]=d[g]}else a.push(d)}};
goog.array.splice=function(a,b,c,d){goog.asserts.assert(null!=a.length);return Array.prototype.splice.apply(a,goog.array.slice(arguments,1))};goog.array.slice=function(a,b,c){goog.asserts.assert(null!=a.length);return 2>=arguments.length?Array.prototype.slice.call(a,b):Array.prototype.slice.call(a,b,c)};
goog.array.removeDuplicates=function(a,b,c){b=b||a;var d=function(a){return goog.isObject(a)?"o"+goog.getUid(a):(typeof a).charAt(0)+a};c=c||d;for(var d={},e=0,f=0;f<a.length;){var g=a[f++],h=c(g);Object.prototype.hasOwnProperty.call(d,h)||(d[h]=!0,b[e++]=g)}b.length=e};goog.array.binarySearch=function(a,b,c){return goog.array.binarySearch_(a,c||goog.array.defaultCompare,!1,b)};goog.array.binarySelect=function(a,b,c){return goog.array.binarySearch_(a,b,!0,void 0,c)};
goog.array.binarySearch_=function(a,b,c,d,e){for(var f=0,g=a.length,h;f<g;){var k=f+g>>1,l;l=c?b.call(e,a[k],k,a):b(d,a[k]);0<l?f=k+1:(g=k,h=!l)}return h?f:~f};goog.array.sort=function(a,b){a.sort(b||goog.array.defaultCompare)};goog.array.stableSort=function(a,b){for(var c=0;c<a.length;c++)a[c]={index:c,value:a[c]};var d=b||goog.array.defaultCompare;goog.array.sort(a,function(a,b){return d(a.value,b.value)||a.index-b.index});for(c=0;c<a.length;c++)a[c]=a[c].value};
goog.array.sortByKey=function(a,b,c){var d=c||goog.array.defaultCompare;goog.array.sort(a,function(a,c){return d(b(a),b(c))})};goog.array.sortObjectsByKey=function(a,b,c){goog.array.sortByKey(a,function(a){return a[b]},c)};goog.array.isSorted=function(a,b,c){b=b||goog.array.defaultCompare;for(var d=1;d<a.length;d++){var e=b(a[d-1],a[d]);if(0<e||0==e&&c)return!1}return!0};
goog.array.equals=function(a,b,c){if(!goog.isArrayLike(a)||!goog.isArrayLike(b)||a.length!=b.length)return!1;var d=a.length;c=c||goog.array.defaultCompareEquality;for(var e=0;e<d;e++)if(!c(a[e],b[e]))return!1;return!0};goog.array.compare3=function(a,b,c){c=c||goog.array.defaultCompare;for(var d=Math.min(a.length,b.length),e=0;e<d;e++){var f=c(a[e],b[e]);if(0!=f)return f}return goog.array.defaultCompare(a.length,b.length)};goog.array.defaultCompare=function(a,b){return a>b?1:a<b?-1:0};
goog.array.inverseDefaultCompare=function(a,b){return-goog.array.defaultCompare(a,b)};goog.array.defaultCompareEquality=function(a,b){return a===b};goog.array.binaryInsert=function(a,b,c){c=goog.array.binarySearch(a,b,c);return 0>c?(goog.array.insertAt(a,b,-(c+1)),!0):!1};goog.array.binaryRemove=function(a,b,c){b=goog.array.binarySearch(a,b,c);return 0<=b?goog.array.removeAt(a,b):!1};
goog.array.bucket=function(a,b,c){for(var d={},e=0;e<a.length;e++){var f=a[e],g=b.call(c,f,e,a);goog.isDef(g)&&(d[g]||(d[g]=[])).push(f)}return d};goog.array.toObject=function(a,b,c){var d={};goog.array.forEach(a,function(e,f){d[b.call(c,e,f,a)]=e});return d};goog.array.range=function(a,b,c){var d=[],e=0,f=a;c=c||1;void 0!==b&&(e=a,f=b);if(0>c*(f-e))return[];if(0<c)for(a=e;a<f;a+=c)d.push(a);else for(a=e;a>f;a+=c)d.push(a);return d};
goog.array.repeat=function(a,b){for(var c=[],d=0;d<b;d++)c[d]=a;return c};goog.array.flatten=function(a){for(var b=[],c=0;c<arguments.length;c++){var d=arguments[c];if(goog.isArray(d))for(var e=0;e<d.length;e+=8192)for(var f=goog.array.slice(d,e,e+8192),f=goog.array.flatten.apply(null,f),g=0;g<f.length;g++)b.push(f[g]);else b.push(d)}return b};
goog.array.rotate=function(a,b){goog.asserts.assert(null!=a.length);a.length&&(b%=a.length,0<b?Array.prototype.unshift.apply(a,a.splice(-b,b)):0>b&&Array.prototype.push.apply(a,a.splice(0,-b)));return a};goog.array.moveItem=function(a,b,c){goog.asserts.assert(0<=b&&b<a.length);goog.asserts.assert(0<=c&&c<a.length);b=Array.prototype.splice.call(a,b,1);Array.prototype.splice.call(a,c,0,b[0])};
goog.array.zip=function(a){if(!arguments.length)return[];for(var b=[],c=arguments[0].length,d=1;d<arguments.length;d++)arguments[d].length<c&&(c=arguments[d].length);for(d=0;d<c;d++){for(var e=[],f=0;f<arguments.length;f++)e.push(arguments[f][d]);b.push(e)}return b};goog.array.shuffle=function(a,b){for(var c=b||Math.random,d=a.length-1;0<d;d--){var e=Math.floor(c()*(d+1)),f=a[d];a[d]=a[e];a[e]=f}};goog.array.copyByIndex=function(a,b){var c=[];goog.array.forEach(b,function(b){c.push(a[b])});return c};goog.crypt={};goog.crypt.stringToByteArray=function(a){for(var b=[],c=0,d=0;d<a.length;d++){for(var e=a.charCodeAt(d);255<e;)b[c++]=e&255,e>>=8;b[c++]=e}return b};goog.crypt.byteArrayToString=function(a){if(8192>=a.length)return String.fromCharCode.apply(null,a);for(var b="",c=0;c<a.length;c+=8192)var d=goog.array.slice(a,c,c+8192),b=b+String.fromCharCode.apply(null,d);return b};goog.crypt.byteArrayToHex=function(a){return goog.array.map(a,function(a){a=a.toString(16);return 1<a.length?a:"0"+a}).join("")};
goog.crypt.hexToByteArray=function(a){goog.asserts.assert(0==a.length%2,"Key string length must be multiple of 2");for(var b=[],c=0;c<a.length;c+=2)b.push(parseInt(a.substring(c,c+2),16));return b};
goog.crypt.stringToUtf8ByteArray=function(a){for(var b=[],c=0,d=0;d<a.length;d++){var e=a.charCodeAt(d);128>e?b[c++]=e:(2048>e?b[c++]=e>>6|192:(55296==(e&64512)&&d+1<a.length&&56320==(a.charCodeAt(d+1)&64512)?(e=65536+((e&1023)<<10)+(a.charCodeAt(++d)&1023),b[c++]=e>>18|240,b[c++]=e>>12&63|128):b[c++]=e>>12|224,b[c++]=e>>6&63|128),b[c++]=e&63|128)}return b};
goog.crypt.utf8ByteArrayToString=function(a){for(var b=[],c=0,d=0;c<a.length;){var e=a[c++];if(128>e)b[d++]=String.fromCharCode(e);else if(191<e&&224>e){var f=a[c++];b[d++]=String.fromCharCode((e&31)<<6|f&63)}else if(239<e&&365>e){var f=a[c++],g=a[c++],h=a[c++],e=((e&7)<<18|(f&63)<<12|(g&63)<<6|h&63)-65536;b[d++]=String.fromCharCode(55296+(e>>10));b[d++]=String.fromCharCode(56320+(e&1023))}else f=a[c++],g=a[c++],b[d++]=String.fromCharCode((e&15)<<12|(f&63)<<6|g&63)}return b.join("")};
goog.crypt.xorByteArray=function(a,b){goog.asserts.assert(a.length==b.length,"XOR array lengths must match");for(var c=[],d=0;d<a.length;d++)c.push(a[d]^b[d]);return c};goog.labs={};goog.labs.userAgent={};goog.labs.userAgent.util={};goog.labs.userAgent.util.getNativeUserAgentString_=function(){var a=goog.labs.userAgent.util.getNavigator_();return a&&(a=a.userAgent)?a:""};goog.labs.userAgent.util.getNavigator_=function(){return goog.global.navigator};goog.labs.userAgent.util.userAgent_=goog.labs.userAgent.util.getNativeUserAgentString_();goog.labs.userAgent.util.setUserAgent=function(a){goog.labs.userAgent.util.userAgent_=a||goog.labs.userAgent.util.getNativeUserAgentString_()};
goog.labs.userAgent.util.getUserAgent=function(){return goog.labs.userAgent.util.userAgent_};goog.labs.userAgent.util.matchUserAgent=function(a){var b=goog.labs.userAgent.util.getUserAgent();return goog.string.contains(b,a)};goog.labs.userAgent.util.matchUserAgentIgnoreCase=function(a){var b=goog.labs.userAgent.util.getUserAgent();return goog.string.caseInsensitiveContains(b,a)};
goog.labs.userAgent.util.extractVersionTuples=function(a){for(var b=RegExp("(\\w[\\w ]+)/([^\\s]+)\\s*(?:\\((.*?)\\))?","g"),c=[],d;d=b.exec(a);)c.push([d[1],d[2],d[3]||void 0]);return c};goog.object={};goog.object.forEach=function(a,b,c){for(var d in a)b.call(c,a[d],d,a)};goog.object.filter=function(a,b,c){var d={},e;for(e in a)b.call(c,a[e],e,a)&&(d[e]=a[e]);return d};goog.object.map=function(a,b,c){var d={},e;for(e in a)d[e]=b.call(c,a[e],e,a);return d};goog.object.some=function(a,b,c){for(var d in a)if(b.call(c,a[d],d,a))return!0;return!1};goog.object.every=function(a,b,c){for(var d in a)if(!b.call(c,a[d],d,a))return!1;return!0};
goog.object.getCount=function(a){var b=0,c;for(c in a)b++;return b};goog.object.getAnyKey=function(a){for(var b in a)return b};goog.object.getAnyValue=function(a){for(var b in a)return a[b]};goog.object.contains=function(a,b){return goog.object.containsValue(a,b)};goog.object.getValues=function(a){var b=[],c=0,d;for(d in a)b[c++]=a[d];return b};goog.object.getKeys=function(a){var b=[],c=0,d;for(d in a)b[c++]=d;return b};
goog.object.getValueByKeys=function(a,b){for(var c=goog.isArrayLike(b),d=c?b:arguments,c=c?0:1;c<d.length&&(a=a[d[c]],goog.isDef(a));c++);return a};goog.object.containsKey=function(a,b){return null!==a&&b in a};goog.object.containsValue=function(a,b){for(var c in a)if(a[c]==b)return!0;return!1};goog.object.findKey=function(a,b,c){for(var d in a)if(b.call(c,a[d],d,a))return d};goog.object.findValue=function(a,b,c){return(b=goog.object.findKey(a,b,c))&&a[b]};
goog.object.isEmpty=function(a){for(var b in a)return!1;return!0};goog.object.clear=function(a){for(var b in a)delete a[b]};goog.object.remove=function(a,b){var c;(c=b in a)&&delete a[b];return c};goog.object.add=function(a,b,c){if(null!==a&&b in a)throw Error('The object already contains the key "'+b+'"');goog.object.set(a,b,c)};goog.object.get=function(a,b,c){return null!==a&&b in a?a[b]:c};goog.object.set=function(a,b,c){a[b]=c};
goog.object.setIfUndefined=function(a,b,c){return b in a?a[b]:a[b]=c};goog.object.setWithReturnValueIfNotSet=function(a,b,c){if(b in a)return a[b];c=c();return a[b]=c};goog.object.equals=function(a,b){for(var c in a)if(!(c in b)||a[c]!==b[c])return!1;for(c in b)if(!(c in a))return!1;return!0};goog.object.clone=function(a){var b={},c;for(c in a)b[c]=a[c];return b};
goog.object.unsafeClone=function(a){var b=goog.typeOf(a);if("object"==b||"array"==b){if(goog.isFunction(a.clone))return a.clone();var b="array"==b?[]:{},c;for(c in a)b[c]=goog.object.unsafeClone(a[c]);return b}return a};goog.object.transpose=function(a){var b={},c;for(c in a)b[a[c]]=c;return b};goog.object.PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.object.extend=function(a,b){for(var c,d,e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(var f=0;f<goog.object.PROTOTYPE_FIELDS_.length;f++)c=goog.object.PROTOTYPE_FIELDS_[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};
goog.object.create=function(a){var b=arguments.length;if(1==b&&goog.isArray(arguments[0]))return goog.object.create.apply(null,arguments[0]);if(b%2)throw Error("Uneven number of arguments");for(var c={},d=0;d<b;d+=2)c[arguments[d]]=arguments[d+1];return c};goog.object.createSet=function(a){var b=arguments.length;if(1==b&&goog.isArray(arguments[0]))return goog.object.createSet.apply(null,arguments[0]);for(var c={},d=0;d<b;d++)c[arguments[d]]=!0;return c};
goog.object.createImmutableView=function(a){var b=a;Object.isFrozen&&!Object.isFrozen(a)&&(b=Object.create(a),Object.freeze(b));return b};goog.object.isImmutableView=function(a){return!!Object.isFrozen&&Object.isFrozen(a)};goog.labs.userAgent.browser={};goog.labs.userAgent.browser.matchOpera_=function(){return goog.labs.userAgent.util.matchUserAgent("Opera")||goog.labs.userAgent.util.matchUserAgent("OPR")};goog.labs.userAgent.browser.matchIE_=function(){return goog.labs.userAgent.util.matchUserAgent("Trident")||goog.labs.userAgent.util.matchUserAgent("MSIE")};goog.labs.userAgent.browser.matchEdge_=function(){return goog.labs.userAgent.util.matchUserAgent("Edge")};goog.labs.userAgent.browser.matchFirefox_=function(){return goog.labs.userAgent.util.matchUserAgent("Firefox")};
goog.labs.userAgent.browser.matchSafari_=function(){return goog.labs.userAgent.util.matchUserAgent("Safari")&&!(goog.labs.userAgent.browser.matchChrome_()||goog.labs.userAgent.browser.matchCoast_()||goog.labs.userAgent.browser.matchOpera_()||goog.labs.userAgent.browser.matchEdge_()||goog.labs.userAgent.browser.isSilk()||goog.labs.userAgent.util.matchUserAgent("Android"))};goog.labs.userAgent.browser.matchCoast_=function(){return goog.labs.userAgent.util.matchUserAgent("Coast")};
goog.labs.userAgent.browser.matchIosWebview_=function(){return(goog.labs.userAgent.util.matchUserAgent("iPad")||goog.labs.userAgent.util.matchUserAgent("iPhone"))&&!goog.labs.userAgent.browser.matchSafari_()&&!goog.labs.userAgent.browser.matchChrome_()&&!goog.labs.userAgent.browser.matchCoast_()&&goog.labs.userAgent.util.matchUserAgent("AppleWebKit")};
goog.labs.userAgent.browser.matchChrome_=function(){return(goog.labs.userAgent.util.matchUserAgent("Chrome")||goog.labs.userAgent.util.matchUserAgent("CriOS"))&&!goog.labs.userAgent.browser.matchOpera_()&&!goog.labs.userAgent.browser.matchEdge_()};goog.labs.userAgent.browser.matchAndroidBrowser_=function(){return goog.labs.userAgent.util.matchUserAgent("Android")&&!(goog.labs.userAgent.browser.isChrome()||goog.labs.userAgent.browser.isFirefox()||goog.labs.userAgent.browser.isOpera()||goog.labs.userAgent.browser.isSilk())};
goog.labs.userAgent.browser.isOpera=goog.labs.userAgent.browser.matchOpera_;goog.labs.userAgent.browser.isIE=goog.labs.userAgent.browser.matchIE_;goog.labs.userAgent.browser.isEdge=goog.labs.userAgent.browser.matchEdge_;goog.labs.userAgent.browser.isFirefox=goog.labs.userAgent.browser.matchFirefox_;goog.labs.userAgent.browser.isSafari=goog.labs.userAgent.browser.matchSafari_;goog.labs.userAgent.browser.isCoast=goog.labs.userAgent.browser.matchCoast_;goog.labs.userAgent.browser.isIosWebview=goog.labs.userAgent.browser.matchIosWebview_;
goog.labs.userAgent.browser.isChrome=goog.labs.userAgent.browser.matchChrome_;goog.labs.userAgent.browser.isAndroidBrowser=goog.labs.userAgent.browser.matchAndroidBrowser_;goog.labs.userAgent.browser.isSilk=function(){return goog.labs.userAgent.util.matchUserAgent("Silk")};
goog.labs.userAgent.browser.getVersion=function(){function a(a){a=goog.array.find(a,d);return c[a]||""}var b=goog.labs.userAgent.util.getUserAgent();if(goog.labs.userAgent.browser.isIE())return goog.labs.userAgent.browser.getIEVersion_(b);var b=goog.labs.userAgent.util.extractVersionTuples(b),c={};goog.array.forEach(b,function(a){c[a[0]]=a[1]});var d=goog.partial(goog.object.containsKey,c);return goog.labs.userAgent.browser.isOpera()?a(["Version","Opera","OPR"]):goog.labs.userAgent.browser.isEdge()?
a(["Edge"]):goog.labs.userAgent.browser.isChrome()?a(["Chrome","CriOS"]):(b=b[2])&&b[1]||""};goog.labs.userAgent.browser.isVersionOrHigher=function(a){return 0<=goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(),a)};
goog.labs.userAgent.browser.getIEVersion_=function(a){var b=/rv: *([\d\.]*)/.exec(a);if(b&&b[1])return b[1];var b="",c=/MSIE +([\d\.]+)/.exec(a);if(c&&c[1])if(a=/Trident\/(\d.\d)/.exec(a),"7.0"==c[1])if(a&&a[1])switch(a[1]){case "4.0":b="8.0";break;case "5.0":b="9.0";break;case "6.0":b="10.0";break;case "7.0":b="11.0"}else b="7.0";else b=c[1];return b};goog.labs.userAgent.engine={};goog.labs.userAgent.engine.isPresto=function(){return goog.labs.userAgent.util.matchUserAgent("Presto")};goog.labs.userAgent.engine.isTrident=function(){return goog.labs.userAgent.util.matchUserAgent("Trident")||goog.labs.userAgent.util.matchUserAgent("MSIE")};goog.labs.userAgent.engine.isEdge=function(){return goog.labs.userAgent.util.matchUserAgent("Edge")};
goog.labs.userAgent.engine.isWebKit=function(){return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit")&&!goog.labs.userAgent.engine.isEdge()};goog.labs.userAgent.engine.isGecko=function(){return goog.labs.userAgent.util.matchUserAgent("Gecko")&&!goog.labs.userAgent.engine.isWebKit()&&!goog.labs.userAgent.engine.isTrident()&&!goog.labs.userAgent.engine.isEdge()};
goog.labs.userAgent.engine.getVersion=function(){var a=goog.labs.userAgent.util.getUserAgent();if(a){var a=goog.labs.userAgent.util.extractVersionTuples(a),b=goog.labs.userAgent.engine.getEngineTuple_(a);if(b)return"Gecko"==b[0]?goog.labs.userAgent.engine.getVersionForKey_(a,"Firefox"):b[1];var a=a[0],c;if(a&&(c=a[2])&&(c=/Trident\/([^\s;]+)/.exec(c)))return c[1]}return""};
goog.labs.userAgent.engine.getEngineTuple_=function(a){if(!goog.labs.userAgent.engine.isEdge())return a[1];for(var b=0;b<a.length;b++){var c=a[b];if("Edge"==c[0])return c}};goog.labs.userAgent.engine.isVersionOrHigher=function(a){return 0<=goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(),a)};goog.labs.userAgent.engine.getVersionForKey_=function(a,b){var c=goog.array.find(a,function(a){return b==a[0]});return c&&c[1]||""};goog.labs.userAgent.platform={};goog.labs.userAgent.platform.isAndroid=function(){return goog.labs.userAgent.util.matchUserAgent("Android")};goog.labs.userAgent.platform.isIpod=function(){return goog.labs.userAgent.util.matchUserAgent("iPod")};goog.labs.userAgent.platform.isIphone=function(){return goog.labs.userAgent.util.matchUserAgent("iPhone")&&!goog.labs.userAgent.util.matchUserAgent("iPod")&&!goog.labs.userAgent.util.matchUserAgent("iPad")};goog.labs.userAgent.platform.isIpad=function(){return goog.labs.userAgent.util.matchUserAgent("iPad")};
goog.labs.userAgent.platform.isIos=function(){return goog.labs.userAgent.platform.isIphone()||goog.labs.userAgent.platform.isIpad()||goog.labs.userAgent.platform.isIpod()};goog.labs.userAgent.platform.isMacintosh=function(){return goog.labs.userAgent.util.matchUserAgent("Macintosh")};goog.labs.userAgent.platform.isLinux=function(){return goog.labs.userAgent.util.matchUserAgent("Linux")};goog.labs.userAgent.platform.isWindows=function(){return goog.labs.userAgent.util.matchUserAgent("Windows")};
goog.labs.userAgent.platform.isChromeOS=function(){return goog.labs.userAgent.util.matchUserAgent("CrOS")};
goog.labs.userAgent.platform.getVersion=function(){var a=goog.labs.userAgent.util.getUserAgent(),b="";goog.labs.userAgent.platform.isWindows()?(b=/Windows (?:NT|Phone) ([0-9.]+)/,b=(a=b.exec(a))?a[1]:"0.0"):goog.labs.userAgent.platform.isIos()?(b=/(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/,b=(a=b.exec(a))&&a[1].replace(/_/g,".")):goog.labs.userAgent.platform.isMacintosh()?(b=/Mac OS X ([0-9_.]+)/,b=(a=b.exec(a))?a[1].replace(/_/g,"."):"10"):goog.labs.userAgent.platform.isAndroid()?(b=/Android\s+([^\);]+)(\)|;)/,
b=(a=b.exec(a))&&a[1]):goog.labs.userAgent.platform.isChromeOS()&&(b=/(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/,b=(a=b.exec(a))&&a[1]);return b||""};goog.labs.userAgent.platform.isVersionOrHigher=function(a){return 0<=goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(),a)};goog.userAgent={};goog.userAgent.ASSUME_IE=!1;goog.userAgent.ASSUME_EDGE=!1;goog.userAgent.ASSUME_GECKO=!1;goog.userAgent.ASSUME_WEBKIT=!1;goog.userAgent.ASSUME_MOBILE_WEBKIT=!1;goog.userAgent.ASSUME_OPERA=!1;goog.userAgent.ASSUME_ANY_VERSION=!1;goog.userAgent.BROWSER_KNOWN_=goog.userAgent.ASSUME_IE||goog.userAgent.ASSUME_EDGE||goog.userAgent.ASSUME_GECKO||goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_OPERA;goog.userAgent.getUserAgentString=function(){return goog.labs.userAgent.util.getUserAgent()};
goog.userAgent.getNavigator=function(){return goog.global.navigator||null};goog.userAgent.OPERA=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_OPERA:goog.labs.userAgent.browser.isOpera();goog.userAgent.IE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_IE:goog.labs.userAgent.browser.isIE();goog.userAgent.EDGE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_EDGE:goog.labs.userAgent.engine.isEdge();goog.userAgent.EDGE_OR_IE=goog.userAgent.EDGE||goog.userAgent.IE;
goog.userAgent.GECKO=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_GECKO:goog.labs.userAgent.engine.isGecko();goog.userAgent.WEBKIT=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_MOBILE_WEBKIT:goog.labs.userAgent.engine.isWebKit();goog.userAgent.isMobile_=function(){return goog.userAgent.WEBKIT&&goog.labs.userAgent.util.matchUserAgent("Mobile")};goog.userAgent.MOBILE=goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.isMobile_();goog.userAgent.SAFARI=goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_=function(){var a=goog.userAgent.getNavigator();return a&&a.platform||""};goog.userAgent.PLATFORM=goog.userAgent.determinePlatform_();goog.userAgent.ASSUME_MAC=!1;goog.userAgent.ASSUME_WINDOWS=!1;goog.userAgent.ASSUME_LINUX=!1;goog.userAgent.ASSUME_X11=!1;goog.userAgent.ASSUME_ANDROID=!1;goog.userAgent.ASSUME_IPHONE=!1;goog.userAgent.ASSUME_IPAD=!1;
goog.userAgent.PLATFORM_KNOWN_=goog.userAgent.ASSUME_MAC||goog.userAgent.ASSUME_WINDOWS||goog.userAgent.ASSUME_LINUX||goog.userAgent.ASSUME_X11||goog.userAgent.ASSUME_ANDROID||goog.userAgent.ASSUME_IPHONE||goog.userAgent.ASSUME_IPAD;goog.userAgent.MAC=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_MAC:goog.labs.userAgent.platform.isMacintosh();goog.userAgent.WINDOWS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_WINDOWS:goog.labs.userAgent.platform.isWindows();
goog.userAgent.isLegacyLinux_=function(){return goog.labs.userAgent.platform.isLinux()||goog.labs.userAgent.platform.isChromeOS()};goog.userAgent.LINUX=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_LINUX:goog.userAgent.isLegacyLinux_();goog.userAgent.isX11_=function(){var a=goog.userAgent.getNavigator();return!!a&&goog.string.contains(a.appVersion||"","X11")};goog.userAgent.X11=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_X11:goog.userAgent.isX11_();
goog.userAgent.ANDROID=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_ANDROID:goog.labs.userAgent.platform.isAndroid();goog.userAgent.IPHONE=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPHONE:goog.labs.userAgent.platform.isIphone();goog.userAgent.IPAD=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPAD:goog.labs.userAgent.platform.isIpad();goog.userAgent.operaVersion_=function(){var a=goog.global.opera.version;try{return a()}catch(b){return a}};
goog.userAgent.determineVersion_=function(){if(goog.userAgent.OPERA&&goog.global.opera)return goog.userAgent.operaVersion_();var a="",b=goog.userAgent.getVersionRegexResult_();b&&(a=b?b[1]:"");return goog.userAgent.IE&&(b=goog.userAgent.getDocumentMode_(),b>parseFloat(a))?String(b):a};
goog.userAgent.getVersionRegexResult_=function(){var a=goog.userAgent.getUserAgentString();if(goog.userAgent.GECKO)return/rv\:([^\);]+)(\)|;)/.exec(a);if(goog.userAgent.EDGE)return/Edge\/([\d\.]+)/.exec(a);if(goog.userAgent.IE)return/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a);if(goog.userAgent.WEBKIT)return/WebKit\/(\S+)/.exec(a)};goog.userAgent.getDocumentMode_=function(){var a=goog.global.document;return a?a.documentMode:void 0};goog.userAgent.VERSION=goog.userAgent.determineVersion_();
goog.userAgent.compare=function(a,b){return goog.string.compareVersions(a,b)};goog.userAgent.isVersionOrHigherCache_={};goog.userAgent.isVersionOrHigher=function(a){return goog.userAgent.ASSUME_ANY_VERSION||goog.userAgent.isVersionOrHigherCache_[a]||(goog.userAgent.isVersionOrHigherCache_[a]=0<=goog.string.compareVersions(goog.userAgent.VERSION,a))};goog.userAgent.isVersion=goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher=function(a){return Number(goog.userAgent.DOCUMENT_MODE)>=a};goog.userAgent.isDocumentMode=goog.userAgent.isDocumentModeOrHigher;goog.userAgent.DOCUMENT_MODE=function(){var a=goog.global.document,b=goog.userAgent.getDocumentMode_();return a&&goog.userAgent.IE?b||("CSS1Compat"==a.compatMode?parseInt(goog.userAgent.VERSION,10):5):void 0}();goog.userAgent.product={};goog.userAgent.product.ASSUME_FIREFOX=!1;goog.userAgent.product.ASSUME_IPHONE=!1;goog.userAgent.product.ASSUME_IPAD=!1;goog.userAgent.product.ASSUME_ANDROID=!1;goog.userAgent.product.ASSUME_CHROME=!1;goog.userAgent.product.ASSUME_SAFARI=!1;
goog.userAgent.product.PRODUCT_KNOWN_=goog.userAgent.ASSUME_IE||goog.userAgent.ASSUME_EDGE||goog.userAgent.ASSUME_OPERA||goog.userAgent.product.ASSUME_FIREFOX||goog.userAgent.product.ASSUME_IPHONE||goog.userAgent.product.ASSUME_IPAD||goog.userAgent.product.ASSUME_ANDROID||goog.userAgent.product.ASSUME_CHROME||goog.userAgent.product.ASSUME_SAFARI;goog.userAgent.product.OPERA=goog.userAgent.OPERA;goog.userAgent.product.IE=goog.userAgent.IE;goog.userAgent.product.EDGE=goog.userAgent.EDGE;
goog.userAgent.product.FIREFOX=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_FIREFOX:goog.labs.userAgent.browser.isFirefox();goog.userAgent.product.isIphoneOrIpod_=function(){return goog.labs.userAgent.platform.isIphone()||goog.labs.userAgent.platform.isIpod()};goog.userAgent.product.IPHONE=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_IPHONE:goog.userAgent.product.isIphoneOrIpod_();
goog.userAgent.product.IPAD=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_IPAD:goog.labs.userAgent.platform.isIpad();goog.userAgent.product.ANDROID=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_ANDROID:goog.labs.userAgent.browser.isAndroidBrowser();goog.userAgent.product.CHROME=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_CHROME:goog.labs.userAgent.browser.isChrome();
goog.userAgent.product.isSafariDesktop_=function(){return goog.labs.userAgent.browser.isSafari()&&!goog.labs.userAgent.platform.isIos()};goog.userAgent.product.SAFARI=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_SAFARI:goog.userAgent.product.isSafariDesktop_();goog.crypt.base64={};goog.crypt.base64.byteToCharMap_=null;goog.crypt.base64.charToByteMap_=null;goog.crypt.base64.byteToCharMapWebSafe_=null;goog.crypt.base64.ENCODED_VALS_BASE="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";goog.crypt.base64.ENCODED_VALS=goog.crypt.base64.ENCODED_VALS_BASE+"+/=";goog.crypt.base64.ENCODED_VALS_WEBSAFE=goog.crypt.base64.ENCODED_VALS_BASE+"-_.";
goog.crypt.base64.ASSUME_NATIVE_SUPPORT_=goog.userAgent.GECKO||goog.userAgent.WEBKIT&&!goog.userAgent.product.SAFARI||goog.userAgent.OPERA;goog.crypt.base64.HAS_NATIVE_ENCODE_=goog.crypt.base64.ASSUME_NATIVE_SUPPORT_||"function"==typeof goog.global.btoa;goog.crypt.base64.HAS_NATIVE_DECODE_=goog.crypt.base64.ASSUME_NATIVE_SUPPORT_||!goog.userAgent.product.SAFARI&&!goog.userAgent.IE&&"function"==typeof goog.global.atob;
goog.crypt.base64.encodeByteArray=function(a,b){goog.asserts.assert(goog.isArrayLike(a),"encodeByteArray takes an array as a parameter");goog.crypt.base64.init_();for(var c=b?goog.crypt.base64.byteToCharMapWebSafe_:goog.crypt.base64.byteToCharMap_,d=[],e=0;e<a.length;e+=3){var f=a[e],g=e+1<a.length,h=g?a[e+1]:0,k=e+2<a.length,l=k?a[e+2]:0,p=f>>2,f=(f&3)<<4|h>>4,h=(h&15)<<2|l>>6,l=l&63;k||(l=64,g||(h=64));d.push(c[p],c[f],c[h],c[l])}return d.join("")};
goog.crypt.base64.encodeString=function(a,b){return goog.crypt.base64.HAS_NATIVE_ENCODE_&&!b?goog.global.btoa(a):goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(a),b)};goog.crypt.base64.decodeString=function(a,b){if(goog.crypt.base64.HAS_NATIVE_DECODE_&&!b)return goog.global.atob(a);var c="";goog.crypt.base64.decodeStringInternal_(a,function(a){c+=String.fromCharCode(a)});return c};
goog.crypt.base64.decodeStringToByteArray=function(a,b){var c=[];goog.crypt.base64.decodeStringInternal_(a,function(a){c.push(a)});return c};goog.crypt.base64.decodeStringToUint8Array=function(a){goog.asserts.assert(!goog.userAgent.IE||goog.userAgent.isVersionOrHigher("10"),"Browser does not support typed arrays");var b=new Uint8Array(Math.ceil(3*a.length/4)),c=0;goog.crypt.base64.decodeStringInternal_(a,function(a){b[c++]=a});return b.subarray(0,c)};
goog.crypt.base64.decodeStringInternal_=function(a,b){function c(b){for(;d<a.length;){var c=a.charAt(d++),e=goog.crypt.base64.charToByteMap_[c];if(null!=e)return e;if(!goog.string.isEmptyOrWhitespace(c))throw Error("Unknown base64 encoding at char: "+c);}return b}goog.crypt.base64.init_();for(var d=0;;){var e=c(-1),f=c(0),g=c(64),h=c(64);if(64===h&&-1===e)break;b(e<<2|f>>4);64!=g&&(b(f<<4&240|g>>2),64!=h&&b(g<<6&192|h))}};
goog.crypt.base64.init_=function(){if(!goog.crypt.base64.byteToCharMap_){goog.crypt.base64.byteToCharMap_={};goog.crypt.base64.charToByteMap_={};goog.crypt.base64.byteToCharMapWebSafe_={};for(var a=0;a<goog.crypt.base64.ENCODED_VALS.length;a++)goog.crypt.base64.byteToCharMap_[a]=goog.crypt.base64.ENCODED_VALS.charAt(a),goog.crypt.base64.charToByteMap_[goog.crypt.base64.byteToCharMap_[a]]=a,goog.crypt.base64.byteToCharMapWebSafe_[a]=goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(a),a>=goog.crypt.base64.ENCODED_VALS_BASE.length&&
(goog.crypt.base64.charToByteMap_[goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(a)]=a)}};goog.json={};goog.json.USE_NATIVE_JSON=!1;goog.json.isValid=function(a){return/^\s*$/.test(a)?!1:/^[\],:{}\s\u2028\u2029]*$/.test(a.replace(/\\["\\\/bfnrtu]/g,"@").replace(/(?:"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)[\s\u2028\u2029]*(?=:|,|]|}|$)/g,"]").replace(/(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g,""))};
goog.json.parse=goog.json.USE_NATIVE_JSON?goog.global.JSON.parse:function(a){a=String(a);if(goog.json.isValid(a))try{return eval("("+a+")")}catch(b){}throw Error("Invalid JSON string: "+a);};goog.json.unsafeParse=goog.json.USE_NATIVE_JSON?goog.global.JSON.parse:function(a){return eval("("+a+")")};goog.json.serialize=goog.json.USE_NATIVE_JSON?goog.global.JSON.stringify:function(a,b){return(new goog.json.Serializer(b)).serialize(a)};goog.json.Serializer=function(a){this.replacer_=a};
goog.json.Serializer.prototype.serialize=function(a){var b=[];this.serializeInternal(a,b);return b.join("")};
goog.json.Serializer.prototype.serializeInternal=function(a,b){if(null==a)b.push("null");else{if("object"==typeof a){if(goog.isArray(a)){this.serializeArray(a,b);return}if(a instanceof String||a instanceof Number||a instanceof Boolean)a=a.valueOf();else{this.serializeObject_(a,b);return}}switch(typeof a){case "string":this.serializeString_(a,b);break;case "number":this.serializeNumber_(a,b);break;case "boolean":b.push(String(a));break;case "function":b.push("null");break;default:throw Error("Unknown type: "+
typeof a);}}};goog.json.Serializer.charToJsonCharCache_={'"':'\\"',"\\":"\\\\","/":"\\/","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\x0B":"\\u000b"};goog.json.Serializer.charsToReplace_=/\uffff/.test("\uffff")?/[\\\"\x00-\x1f\x7f-\uffff]/g:/[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_=function(a,b){b.push('"',a.replace(goog.json.Serializer.charsToReplace_,function(a){var b=goog.json.Serializer.charToJsonCharCache_[a];b||(b="\\u"+(a.charCodeAt(0)|65536).toString(16).substr(1),goog.json.Serializer.charToJsonCharCache_[a]=b);return b}),'"')};goog.json.Serializer.prototype.serializeNumber_=function(a,b){b.push(isFinite(a)&&!isNaN(a)?String(a):"null")};
goog.json.Serializer.prototype.serializeArray=function(a,b){var c=a.length;b.push("[");for(var d="",e=0;e<c;e++)b.push(d),d=a[e],this.serializeInternal(this.replacer_?this.replacer_.call(a,String(e),d):d,b),d=",";b.push("]")};
goog.json.Serializer.prototype.serializeObject_=function(a,b){b.push("{");var c="",d;for(d in a)if(Object.prototype.hasOwnProperty.call(a,d)){var e=a[d];"function"!=typeof e&&(b.push(c),this.serializeString_(d,b),b.push(":"),this.serializeInternal(this.replacer_?this.replacer_.call(a,d,e):e,b),c=",")}b.push("}")};var jspb={Map:function(a,b){this.arr_=a;this.valueCtor_=b;this.map_={};this.arrClean=!0;0<this.arr_.length&&this.loadFromArray_()}};jspb.Map.prototype.loadFromArray_=function(){for(var a=0;a<this.arr_.length;a++){var b=this.arr_[a],c=b[0];this.map_[c.toString()]=new jspb.Map.Entry_(c,b[1])}this.arrClean=!0};
jspb.Map.prototype.toArray=function(){if(this.arrClean){if(this.valueCtor_){var a=this.map_,b;for(b in a)if(Object.prototype.hasOwnProperty.call(a,b)){var c=a[b].valueWrapper;c&&c.toArray()}}}else{this.arr_.length=0;a=this.stringKeys_();a.sort();for(b=0;b<a.length;b++){var d=this.map_[a[b]];(c=d.valueWrapper)&&c.toArray();this.arr_.push([d.key,d.value])}this.arrClean=!0}return this.arr_};jspb.Map.arrayIterator_=function(a){var b=0;return{next:function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}}};
jspb.Map.prototype.getLength=function(){return this.stringKeys_().length};jspb.Map.prototype.clear=function(){this.map_={};this.arrClean=!1};jspb.Map.prototype.del=function(a){a=a.toString();var b=this.map_.hasOwnProperty(a);delete this.map_[a];this.arrClean=!1;return b};jspb.Map.prototype.getEntryList=function(){var a=[],b=this.stringKeys_();b.sort();for(var c=0;c<b.length;c++){var d=this.map_[b[c]];a.push([d.key,d.value])}return a};
jspb.Map.prototype.entries=function(){var a=[],b=this.stringKeys_();b.sort();for(var c=0;c<b.length;c++){var d=this.map_[b[c]];a.push([d.key,this.wrapEntry_(d)])}return jspb.Map.arrayIterator_(a)};jspb.Map.prototype.keys=function(){var a=[],b=this.stringKeys_();b.sort();for(var c=0;c<b.length;c++)a.push(this.map_[b[c]].key);return jspb.Map.arrayIterator_(a)};
jspb.Map.prototype.values=function(){var a=[],b=this.stringKeys_();b.sort();for(var c=0;c<b.length;c++)a.push(this.wrapEntry_(this.map_[b[c]]));return jspb.Map.arrayIterator_(a)};jspb.Map.prototype.forEach=function(a,b){var c=this.stringKeys_();c.sort();for(var d=0;d<c.length;d++){var e=this.map_[c[d]];a.call(b,this.wrapEntry_(e),e.key,this)}};
jspb.Map.prototype.set=function(a,b){var c=new jspb.Map.Entry_(a);this.valueCtor_?(c.valueWrapper=b,c.value=b.toArray()):c.value=b;this.map_[a.toString()]=c;this.arrClean=!1;return this};jspb.Map.prototype.wrapEntry_=function(a){return this.valueCtor_?(a.valueWrapper||(a.valueWrapper=new this.valueCtor_(a.value)),a.valueWrapper):a.value};jspb.Map.prototype.get=function(a){if(a=this.map_[a.toString()])return this.wrapEntry_(a)};jspb.Map.prototype.has=function(a){return a.toString()in this.map_};
jspb.Map.prototype.serializeBinary=function(a,b,c,d,e){var f=this.stringKeys_();f.sort();for(var g=0;g<f.length;g++){var h=this.map_[f[g]];b.beginSubMessage(a);c.call(b,1,h.key);this.valueCtor_?d.call(b,2,this.wrapEntry_(h),e):d.call(b,2,h.value);b.endSubMessage()}};
jspb.Map.deserializeBinary=function(a,b,c,d,e){for(var f=void 0,g=void 0;b.nextField()&&!b.isEndGroup();){var h=b.getFieldNumber();1==h?f=c.call(b):2==h&&(a.valueCtor_?(g=new a.valueCtor_,d.call(b,g,e)):g=d.call(b))}goog.asserts.assert(void 0!=f);goog.asserts.assert(void 0!=g);a.set(f,g)};jspb.Map.prototype.stringKeys_=function(){var a=this.map_,b=[],c;for(c in a)Object.prototype.hasOwnProperty.call(a,c)&&b.push(c);return b};
jspb.Map.Entry_=function(a,b){this.key=a;this.value=b;this.valueWrapper=void 0};jspb.ExtensionFieldInfo=function(a,b,c,d,e){this.fieldIndex=a;this.fieldName=b;this.ctor=c;this.toObjectFn=d;this.isRepeated=e};jspb.ExtensionFieldBinaryInfo=function(a,b,c,d,e,f){this.fieldInfo=a;this.binaryReaderFn=b;this.binaryWriterFn=c;this.binaryMessageSerializeFn=d;this.binaryMessageDeserializeFn=e;this.isPacked=f};jspb.ExtensionFieldInfo.prototype.isMessageType=function(){return!!this.ctor};jspb.Message=function(){};jspb.Message.GENERATE_TO_OBJECT=!0;jspb.Message.GENERATE_FROM_OBJECT=!goog.DISALLOW_TEST_ONLY_CODE;
jspb.Message.MINIMIZE_MEMORY_ALLOCATIONS=COMPILED;jspb.Message.SUPPORTS_UINT8ARRAY_="function"==typeof Uint8Array;jspb.Message.prototype.getJsPbMessageId=function(){return this.messageId_};jspb.Message.getIndex_=function(a,b){return b+a.arrayIndexOffset_};
jspb.Message.initialize=function(a,b,c,d,e,f){a.wrappers_=jspb.Message.MINIMIZE_MEMORY_ALLOCATIONS?null:{};b||(b=c?[c]:[]);a.messageId_=c?String(c):void 0;a.arrayIndexOffset_=0===c?-1:0;a.array=b;jspb.Message.materializeExtensionObject_(a,d);a.convertedFloatingPointFields_={};if(e)for(b=0;b<e.length;b++)c=e[b],c<a.pivot_?(c=jspb.Message.getIndex_(a,c),a.array[c]=a.array[c]||(jspb.Message.MINIMIZE_MEMORY_ALLOCATIONS?jspb.Message.EMPTY_LIST_SENTINEL_:[])):a.extensionObject_[c]=a.extensionObject_[c]||
(jspb.Message.MINIMIZE_MEMORY_ALLOCATIONS?jspb.Message.EMPTY_LIST_SENTINEL_:[]);f&&f.length&&goog.array.forEach(f,goog.partial(jspb.Message.computeOneofCase,a))};jspb.Message.EMPTY_LIST_SENTINEL_=goog.DEBUG&&Object.freeze?Object.freeze([]):[];
jspb.Message.materializeExtensionObject_=function(a,b){if(a.array.length){var c=a.array.length-1,d=a.array[c];if(d&&"object"==typeof d&&!goog.isArray(d)&&!(jspb.Message.SUPPORTS_UINT8ARRAY_&&d instanceof Uint8Array)){a.pivot_=c-a.arrayIndexOffset_;a.extensionObject_=d;return}}-1<b?(a.pivot_=b,c=jspb.Message.getIndex_(a,b),a.extensionObject_=jspb.Message.MINIMIZE_MEMORY_ALLOCATIONS?null:a.array[c]={}):a.pivot_=Number.MAX_VALUE};
jspb.Message.maybeInitEmptyExtensionObject_=function(a){var b=jspb.Message.getIndex_(a,a.pivot_);a.array[b]||(a.extensionObject_=a.array[b]={})};jspb.Message.toObjectList=function(a,b,c){for(var d=[],e=0;e<a.length;e++)d[e]=b.call(a[e],c,a[e]);return d};
jspb.Message.toObjectExtension=function(a,b,c,d,e){for(var f in c){var g=c[f],h=d.call(a,g);if(h){for(var k in g.fieldName)if(g.fieldName.hasOwnProperty(k))break;b[k]=g.toObjectFn?g.isRepeated?jspb.Message.toObjectList(h,g.toObjectFn,e):g.toObjectFn(e,h):h}}};
jspb.Message.serializeBinaryExtensions=function(a,b,c,d){for(var e in c){var f=c[e],g=f.fieldInfo;if(!f.binaryWriterFn)throw Error("Message extension present that was generated without binary serialization support");var h=d.call(a,g);if(h)if(g.isMessageType())if(f.binaryMessageSerializeFn)f.binaryWriterFn.call(b,g.fieldIndex,h,f.binaryMessageSerializeFn);else throw Error("Message extension present holding submessage without binary support enabled, and message is being serialized to binary format");
else f.binaryWriterFn.call(b,g.fieldIndex,h)}};jspb.Message.readBinaryExtension=function(a,b,c,d,e){var f=c[b.getFieldNumber()];c=f.fieldInfo;if(f){if(!f.binaryReaderFn)throw Error("Deserializing extension whose generated code does not support binary format");var g;c.isMessageType()?(g=new c.ctor,f.binaryReaderFn.call(b,g,f.binaryMessageDeserializeFn)):g=f.binaryReaderFn.call(b);c.isRepeated&&!f.isPacked?(b=d.call(a,c))?b.push(g):e.call(a,c,[g]):e.call(a,c,g)}else b.skipField()};
jspb.Message.getField=function(a,b){if(b<a.pivot_){var c=jspb.Message.getIndex_(a,b),d=a.array[c];return d===jspb.Message.EMPTY_LIST_SENTINEL_?a.array[c]=[]:d}d=a.extensionObject_[b];return d===jspb.Message.EMPTY_LIST_SENTINEL_?a.extensionObject_[b]=[]:d};jspb.Message.getOptionalFloatingPointField=function(a,b){var c=jspb.Message.getField(a,b);return null==c?c:+c};
jspb.Message.getRepeatedFloatingPointField=function(a,b){var c=jspb.Message.getField(a,b);a.convertedFloatingPointFields_||(a.convertedFloatingPointFields_={});if(!a.convertedFloatingPointFields_[b]){for(var d=0;d<c.length;d++)c[d]=+c[d];a.convertedFloatingPointFields_[b]=!0}return c};
jspb.Message.bytesAsB64=function(a){if(null==a||goog.isString(a))return a;if(jspb.Message.SUPPORTS_UINT8ARRAY_&&a instanceof Uint8Array)return goog.crypt.base64.encodeByteArray(a);goog.asserts.fail("Cannot coerce to b64 string: "+goog.typeOf(a));return null};jspb.Message.bytesAsU8=function(a){if(null==a||a instanceof Uint8Array)return a;if(goog.isString(a))return goog.crypt.base64.decodeStringToUint8Array(a);goog.asserts.fail("Cannot coerce to Uint8Array: "+goog.typeOf(a));return null};
jspb.Message.bytesListAsB64=function(a){jspb.Message.assertConsistentTypes_(a);return!a.length||goog.isString(a[0])?a:goog.array.map(a,jspb.Message.bytesAsB64)};jspb.Message.bytesListAsU8=function(a){jspb.Message.assertConsistentTypes_(a);return!a.length||a[0]instanceof Uint8Array?a:goog.array.map(a,jspb.Message.bytesAsU8)};
jspb.Message.assertConsistentTypes_=function(a){if(goog.DEBUG&&a&&1<a.length){var b=goog.typeOf(a[0]);goog.array.forEach(a,function(a){goog.typeOf(a)!=b&&goog.asserts.fail("Inconsistent type in JSPB repeated field array. Got "+goog.typeOf(a)+" expected "+b)})}};jspb.Message.getFieldWithDefault=function(a,b,c){a=jspb.Message.getField(a,b);return null==a?c:a};jspb.Message.getFieldProto3=jspb.Message.getFieldWithDefault;
jspb.Message.getMapField=function(a,b,c,d){a.wrappers_||(a.wrappers_={});if(b in a.wrappers_)return a.wrappers_[b];if(!c)return c=jspb.Message.getField(a,b),c||(c=[],jspb.Message.setField(a,b,c)),a.wrappers_[b]=new jspb.Map(c,d)};jspb.Message.setField=function(a,b,c){b<a.pivot_?a.array[jspb.Message.getIndex_(a,b)]=c:a.extensionObject_[b]=c};jspb.Message.addToRepeatedField=function(a,b,c,d){a=jspb.Message.getField(a,b);void 0!=d?a.splice(d,0,c):a.push(c)};
jspb.Message.setOneofField=function(a,b,c,d){(c=jspb.Message.computeOneofCase(a,c))&&c!==b&&void 0!==d&&(a.wrappers_&&c in a.wrappers_&&(a.wrappers_[c]=void 0),jspb.Message.setField(a,c,void 0));jspb.Message.setField(a,b,d)};jspb.Message.computeOneofCase=function(a,b){var c,d;goog.array.forEach(b,function(b){var f=jspb.Message.getField(a,b);goog.isDefAndNotNull(f)&&(c=b,d=f,jspb.Message.setField(a,b,void 0))});return c?(jspb.Message.setField(a,c,d),c):0};
jspb.Message.getWrapperField=function(a,b,c,d){a.wrappers_||(a.wrappers_={});if(!a.wrappers_[c]){var e=jspb.Message.getField(a,c);if(d||e)a.wrappers_[c]=new b(e)}return a.wrappers_[c]};jspb.Message.getRepeatedWrapperField=function(a,b,c){jspb.Message.wrapRepeatedField_(a,b,c);b=a.wrappers_[c];b==jspb.Message.EMPTY_LIST_SENTINEL_&&(b=a.wrappers_[c]=[]);return b};
jspb.Message.wrapRepeatedField_=function(a,b,c){a.wrappers_||(a.wrappers_={});if(!a.wrappers_[c]){for(var d=jspb.Message.getField(a,c),e=[],f=0;f<d.length;f++)e[f]=new b(d[f]);a.wrappers_[c]=e}};jspb.Message.setWrapperField=function(a,b,c){a.wrappers_||(a.wrappers_={});var d=c?c.toArray():c;a.wrappers_[b]=c;jspb.Message.setField(a,b,d)};jspb.Message.setOneofWrapperField=function(a,b,c,d){a.wrappers_||(a.wrappers_={});var e=d?d.toArray():d;a.wrappers_[b]=d;jspb.Message.setOneofField(a,b,c,e)};
jspb.Message.setRepeatedWrapperField=function(a,b,c){a.wrappers_||(a.wrappers_={});c=c||[];for(var d=[],e=0;e<c.length;e++)d[e]=c[e].toArray();a.wrappers_[b]=c;jspb.Message.setField(a,b,d)};jspb.Message.addToRepeatedWrapperField=function(a,b,c,d,e){jspb.Message.wrapRepeatedField_(a,d,b);var f=a.wrappers_[b];f||(f=a.wrappers_[b]=[]);c=c?c:new d;a=jspb.Message.getField(a,b);void 0!=e?(f.splice(e,0,c),a.splice(e,0,c.toArray())):(f.push(c),a.push(c.toArray()));return c};
jspb.Message.toMap=function(a,b,c,d){for(var e={},f=0;f<a.length;f++)e[b.call(a[f])]=c?c.call(a[f],d,a[f]):a[f];return e};jspb.Message.prototype.syncMapFields_=function(){if(this.wrappers_)for(var a in this.wrappers_){var b=this.wrappers_[a];if(goog.isArray(b))for(var c=0;c<b.length;c++)b[c]&&b[c].toArray();else b&&b.toArray()}};jspb.Message.prototype.toArray=function(){this.syncMapFields_();return this.array};jspb.Message.prototype.toString=function(){this.syncMapFields_();return this.array.toString()};
jspb.Message.prototype.getExtension=function(a){if(this.extensionObject_){this.wrappers_||(this.wrappers_={});var b=a.fieldIndex;if(a.isRepeated){if(a.isMessageType())return this.wrappers_[b]||(this.wrappers_[b]=goog.array.map(this.extensionObject_[b]||[],function(b){return new a.ctor(b)})),this.wrappers_[b]}else if(a.isMessageType())return!this.wrappers_[b]&&this.extensionObject_[b]&&(this.wrappers_[b]=new a.ctor(this.extensionObject_[b])),this.wrappers_[b];return this.extensionObject_[b]}};
jspb.Message.prototype.setExtension=function(a,b){this.wrappers_||(this.wrappers_={});jspb.Message.maybeInitEmptyExtensionObject_(this);var c=a.fieldIndex;a.isRepeated?(b=b||[],a.isMessageType()?(this.wrappers_[c]=b,this.extensionObject_[c]=goog.array.map(b,function(a){return a.toArray()})):this.extensionObject_[c]=b):a.isMessageType()?(this.wrappers_[c]=b,this.extensionObject_[c]=b?b.toArray():b):this.extensionObject_[c]=b;return this};
jspb.Message.difference=function(a,b){if(!(a instanceof b.constructor))throw Error("Messages have different types.");var c=a.toArray(),d=b.toArray(),e=[],f=0,g=c.length>d.length?c.length:d.length;a.getJsPbMessageId()&&(e[0]=a.getJsPbMessageId(),f=1);for(;f<g;f++)jspb.Message.compareFields(c[f],d[f])||(e[f]=d[f]);return new a.constructor(e)};jspb.Message.equals=function(a,b){return a==b||!(!a||!b)&&a instanceof b.constructor&&jspb.Message.compareFields(a.toArray(),b.toArray())};
jspb.Message.compareExtensions=function(a,b){a=a||{};b=b||{};var c={},d;for(d in a)c[d]=0;for(d in b)c[d]=0;for(d in c)if(!jspb.Message.compareFields(a[d],b[d]))return!1;return!0};
jspb.Message.compareFields=function(a,b){if(a==b)return!0;if(!goog.isObject(a)||!goog.isObject(b)||a.constructor!=b.constructor)return!1;if(jspb.Message.SUPPORTS_UINT8ARRAY_&&a.constructor===Uint8Array){if(a.length!=b.length)return!1;for(var c=0;c<a.length;c++)if(a[c]!=b[c])return!1;return!0}if(a.constructor===Array){for(var d=void 0,e=void 0,f=Math.max(a.length,b.length),c=0;c<f;c++){var g=a[c],h=b[c];g&&g.constructor==Object&&(goog.asserts.assert(void 0===d),goog.asserts.assert(c===a.length-1),
d=g,g=void 0);h&&h.constructor==Object&&(goog.asserts.assert(void 0===e),goog.asserts.assert(c===b.length-1),e=h,h=void 0);if(!jspb.Message.compareFields(g,h))return!1}return d||e?(d=d||{},e=e||{},jspb.Message.compareExtensions(d,e)):!0}if(a.constructor===Object)return jspb.Message.compareExtensions(a,b);throw Error("Invalid type in JSPB array");};jspb.Message.prototype.cloneMessage=function(){return jspb.Message.cloneMessage(this)};jspb.Message.prototype.clone=function(){return jspb.Message.cloneMessage(this)};
jspb.Message.clone=function(a){return jspb.Message.cloneMessage(a)};jspb.Message.cloneMessage=function(a){return new a.constructor(jspb.Message.clone_(a.toArray()))};
jspb.Message.copyInto=function(a,b){goog.asserts.assertInstanceof(a,jspb.Message);goog.asserts.assertInstanceof(b,jspb.Message);goog.asserts.assert(a.constructor==b.constructor,"Copy source and target message should have the same type.");for(var c=jspb.Message.clone(a),d=b.toArray(),e=c.toArray(),f=d.length=0;f<e.length;f++)d[f]=e[f];b.wrappers_=c.wrappers_;b.extensionObject_=c.extensionObject_};
jspb.Message.clone_=function(a){var b;if(goog.isArray(a)){for(var c=Array(a.length),d=0;d<a.length;d++)null!=(b=a[d])&&(c[d]="object"==typeof b?jspb.Message.clone_(b):b);return c}if(jspb.Message.SUPPORTS_UINT8ARRAY_&&a instanceof Uint8Array)return new Uint8Array(a);c={};for(d in a)null!=(b=a[d])&&(c[d]="object"==typeof b?jspb.Message.clone_(b):b);return c};jspb.Message.registerMessageType=function(a,b){jspb.Message.registry_[a]=b;b.messageId=a};jspb.Message.registry_={};
jspb.Message.messageSetExtensions={};jspb.Message.messageSetExtensionsBinary={};jspb.BinaryConstants={};jspb.ConstBinaryMessage=function(){};jspb.BinaryMessage=function(){};jspb.BinaryConstants.FieldType={INVALID:-1,DOUBLE:1,FLOAT:2,INT64:3,UINT64:4,INT32:5,FIXED64:6,FIXED32:7,BOOL:8,STRING:9,GROUP:10,MESSAGE:11,BYTES:12,UINT32:13,ENUM:14,SFIXED32:15,SFIXED64:16,SINT32:17,SINT64:18,FHASH64:30,VHASH64:31};jspb.BinaryConstants.WireType={INVALID:-1,VARINT:0,FIXED64:1,DELIMITED:2,START_GROUP:3,END_GROUP:4,FIXED32:5};
jspb.BinaryConstants.FieldTypeToWireType=function(a){var b=jspb.BinaryConstants.FieldType,c=jspb.BinaryConstants.WireType;switch(a){case b.INT32:case b.INT64:case b.UINT32:case b.UINT64:case b.SINT32:case b.SINT64:case b.BOOL:case b.ENUM:case b.VHASH64:return c.VARINT;case b.DOUBLE:case b.FIXED64:case b.SFIXED64:case b.FHASH64:return c.FIXED64;case b.STRING:case b.MESSAGE:case b.BYTES:return c.DELIMITED;case b.FLOAT:case b.FIXED32:case b.SFIXED32:return c.FIXED32;default:return c.INVALID}};
jspb.BinaryConstants.INVALID_FIELD_NUMBER=-1;jspb.BinaryConstants.FLOAT32_EPS=1.401298464324817E-45;jspb.BinaryConstants.FLOAT32_MIN=1.1754943508222875E-38;jspb.BinaryConstants.FLOAT32_MAX=3.4028234663852886E38;jspb.BinaryConstants.FLOAT64_EPS=4.9E-324;jspb.BinaryConstants.FLOAT64_MIN=2.2250738585072014E-308;jspb.BinaryConstants.FLOAT64_MAX=1.7976931348623157E308;jspb.BinaryConstants.TWO_TO_20=1048576;jspb.BinaryConstants.TWO_TO_23=8388608;jspb.BinaryConstants.TWO_TO_31=2147483648;
jspb.BinaryConstants.TWO_TO_32=4294967296;jspb.BinaryConstants.TWO_TO_52=4503599627370496;jspb.BinaryConstants.TWO_TO_63=0x7fffffffffffffff;jspb.BinaryConstants.TWO_TO_64=1.8446744073709552E19;jspb.BinaryConstants.ZERO_HASH="\x00\x00\x00\x00\x00\x00\x00\x00";jspb.utils={};jspb.utils.split64Low=0;jspb.utils.split64High=0;jspb.utils.splitUint64=function(a){var b=a>>>0;a=Math.floor((a-b)/jspb.BinaryConstants.TWO_TO_32)>>>0;jspb.utils.split64Low=b;jspb.utils.split64High=a};jspb.utils.splitInt64=function(a){var b=0>a;a=Math.abs(a);var c=a>>>0;a=Math.floor((a-c)/jspb.BinaryConstants.TWO_TO_32);a>>>=0;b&&(a=~a>>>0,c=(~c>>>0)+1,4294967295<c&&(c=0,a++,4294967295<a&&(a=0)));jspb.utils.split64Low=c;jspb.utils.split64High=a};
jspb.utils.splitZigzag64=function(a){var b=0>a;a=2*Math.abs(a);jspb.utils.splitUint64(a);a=jspb.utils.split64Low;var c=jspb.utils.split64High;b&&(0==a?0==c?c=a=4294967295:(c--,a=4294967295):a--);jspb.utils.split64Low=a;jspb.utils.split64High=c};
jspb.utils.splitFloat32=function(a){var b=0>a?1:0;a=b?-a:a;var c;0===a?0<1/a?(jspb.utils.split64High=0,jspb.utils.split64Low=0):(jspb.utils.split64High=0,jspb.utils.split64Low=2147483648):isNaN(a)?(jspb.utils.split64High=0,jspb.utils.split64Low=2147483647):a>jspb.BinaryConstants.FLOAT32_MAX?(jspb.utils.split64High=0,jspb.utils.split64Low=(b<<31|2139095040)>>>0):a<jspb.BinaryConstants.FLOAT32_MIN?(a=Math.round(a/Math.pow(2,-149)),jspb.utils.split64High=0,jspb.utils.split64Low=(b<<31|a)>>>0):(c=Math.floor(Math.log(a)/
Math.LN2),a*=Math.pow(2,-c),a=Math.round(a*jspb.BinaryConstants.TWO_TO_23)&8388607,jspb.utils.split64High=0,jspb.utils.split64Low=(b<<31|c+127<<23|a)>>>0)};
jspb.utils.splitFloat64=function(a){var b=0>a?1:0;a=b?-a:a;if(0===a)jspb.utils.split64High=0<1/a?0:2147483648,jspb.utils.split64Low=0;else if(isNaN(a))jspb.utils.split64High=2147483647,jspb.utils.split64Low=4294967295;else if(a>jspb.BinaryConstants.FLOAT64_MAX)jspb.utils.split64High=(b<<31|2146435072)>>>0,jspb.utils.split64Low=0;else if(a<jspb.BinaryConstants.FLOAT64_MIN){var c=a/Math.pow(2,-1074);a=c/jspb.BinaryConstants.TWO_TO_32;jspb.utils.split64High=(b<<31|a)>>>0;jspb.utils.split64Low=c>>>0}else{var d=
Math.floor(Math.log(a)/Math.LN2);1024==d&&(d=1023);c=a*Math.pow(2,-d);a=c*jspb.BinaryConstants.TWO_TO_20&1048575;c=c*jspb.BinaryConstants.TWO_TO_52>>>0;jspb.utils.split64High=(b<<31|d+1023<<20|a)>>>0;jspb.utils.split64Low=c}};
jspb.utils.splitHash64=function(a){var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=a.charCodeAt(4),g=a.charCodeAt(5),h=a.charCodeAt(6);a=a.charCodeAt(7);jspb.utils.split64Low=b+(c<<8)+(d<<16)+(e<<24)>>>0;jspb.utils.split64High=f+(g<<8)+(h<<16)+(a<<24)>>>0};jspb.utils.joinUint64=function(a,b){return b*jspb.BinaryConstants.TWO_TO_32+a};
jspb.utils.joinInt64=function(a,b){var c=b&2147483648;c&&(a=~a+1>>>0,b=~b>>>0,0==a&&(b=b+1>>>0));var d=jspb.utils.joinUint64(a,b);return c?-d:d};jspb.utils.joinZigzag64=function(a,b){var c=a&1;a=(a>>>1|b<<31)>>>0;b>>>=1;c&&(a=a+1>>>0,0==a&&(b=b+1>>>0));var d=jspb.utils.joinUint64(a,b);return c?-d:d};jspb.utils.joinFloat32=function(a,b){var c=2*(a>>31)+1,d=a>>>23&255,e=a&8388607;return 255==d?e?NaN:Infinity*c:0==d?c*Math.pow(2,-149)*e:c*Math.pow(2,d-150)*(e+Math.pow(2,23))};
jspb.utils.joinFloat64=function(a,b){var c=2*(b>>31)+1,d=b>>>20&2047,e=jspb.BinaryConstants.TWO_TO_32*(b&1048575)+a;return 2047==d?e?NaN:Infinity*c:0==d?c*Math.pow(2,-1074)*e:c*Math.pow(2,d-1075)*(e+jspb.BinaryConstants.TWO_TO_52)};jspb.utils.joinHash64=function(a,b){return String.fromCharCode(a>>>0&255,a>>>8&255,a>>>16&255,a>>>24&255,b>>>0&255,b>>>8&255,b>>>16&255,b>>>24&255)};jspb.utils.DIGITS="0123456789abcdef".split("");
jspb.utils.joinUnsignedDecimalString=function(a,b){function c(a){for(var b=1E7,c=0;7>c;c++){var b=b/10,d=a/b%10>>>0;if(0!=d||h)h=!0,k+=g[d]}}if(2097151>=b)return""+(jspb.BinaryConstants.TWO_TO_32*b+a);var d=(a>>>24|b<<8)>>>0&16777215,e=b>>16&65535,f=(a&16777215)+6777216*d+6710656*e,d=d+8147497*e,e=2*e;1E7<=f&&(d+=Math.floor(f/1E7),f%=1E7);1E7<=d&&(e+=Math.floor(d/1E7),d%=1E7);var g=jspb.utils.DIGITS,h=!1,k="";(e||h)&&c(e);(d||h)&&c(d);(f||h)&&c(f);return k};
jspb.utils.joinSignedDecimalString=function(a,b){var c=b&2147483648;c&&(a=~a+1>>>0,b=~b+(0==a?1:0)>>>0);var d=jspb.utils.joinUnsignedDecimalString(a,b);return c?"-"+d:d};jspb.utils.hash64ToDecimalString=function(a,b){jspb.utils.splitHash64(a);var c=jspb.utils.split64Low,d=jspb.utils.split64High;return b?jspb.utils.joinSignedDecimalString(c,d):jspb.utils.joinUnsignedDecimalString(c,d)};
jspb.utils.hash64ArrayToDecimalStrings=function(a,b){for(var c=Array(a.length),d=0;d<a.length;d++)c[d]=jspb.utils.hash64ToDecimalString(a[d],b);return c};
jspb.utils.decimalStringToHash64=function(a){function b(a,b){for(var c=0;8>c&&(1!==a||0<b);c++){var d=a*e[c]+b;e[c]=d&255;b=d>>>8}}function c(){for(var a=0;8>a;a++)e[a]=~e[a]&255}goog.asserts.assert(0<a.length);var d=!1;"-"===a[0]&&(d=!0,a=a.slice(1));for(var e=[0,0,0,0,0,0,0,0],f=0;f<a.length;f++)b(10,jspb.utils.DIGITS.indexOf(a[f]));d&&(c(),b(1,1));return String.fromCharCode.apply(null,e)};
jspb.utils.hash64ToHexString=function(a){var b=Array(18);b[0]="0";b[1]="x";for(var c=0;8>c;c++){var d=a.charCodeAt(7-c);b[2*c+2]=jspb.utils.DIGITS[d>>4];b[2*c+3]=jspb.utils.DIGITS[d&15]}return b.join("")};jspb.utils.hexStringToHash64=function(a){a=a.toLowerCase();goog.asserts.assert(18==a.length);goog.asserts.assert("0"==a[0]);goog.asserts.assert("x"==a[1]);for(var b="",c=0;8>c;c++)var d=jspb.utils.DIGITS.indexOf(a[2*c+2]),e=jspb.utils.DIGITS.indexOf(a[2*c+3]),b=String.fromCharCode(16*d+e)+b;return b};
jspb.utils.hash64ToNumber=function(a,b){jspb.utils.splitHash64(a);var c=jspb.utils.split64Low,d=jspb.utils.split64High;return b?jspb.utils.joinInt64(c,d):jspb.utils.joinUint64(c,d)};jspb.utils.numberToHash64=function(a){jspb.utils.splitInt64(a);return jspb.utils.joinHash64(jspb.utils.split64Low,jspb.utils.split64High)};jspb.utils.countVarints=function(a,b,c){for(var d=0,e=b;e<c;e++)d+=a[e]>>7;return c-b-d};
jspb.utils.countVarintFields=function(a,b,c,d){var e=0;d=8*d+jspb.BinaryConstants.WireType.VARINT;if(128>d)for(;b<c&&a[b++]==d;)for(e++;;){var f=a[b++];if(0==(f&128))break}else for(;b<c;){for(f=d;128<f;){if(a[b]!=(f&127|128))return e;b++;f>>=7}if(a[b++]!=f)break;for(e++;f=a[b++],0!=(f&128););}return e};jspb.utils.countFixedFields_=function(a,b,c,d,e){var f=0;if(128>d)for(;b<c&&a[b++]==d;)f++,b+=e;else for(;b<c;){for(var g=d;128<g;){if(a[b++]!=(g&127|128))return f;g>>=7}if(a[b++]!=g)break;f++;b+=e}return f};
jspb.utils.countFixed32Fields=function(a,b,c,d){return jspb.utils.countFixedFields_(a,b,c,8*d+jspb.BinaryConstants.WireType.FIXED32,4)};jspb.utils.countFixed64Fields=function(a,b,c,d){return jspb.utils.countFixedFields_(a,b,c,8*d+jspb.BinaryConstants.WireType.FIXED64,8)};
jspb.utils.countDelimitedFields=function(a,b,c,d){var e=0;for(d=8*d+jspb.BinaryConstants.WireType.DELIMITED;b<c;){for(var f=d;128<f;){if(a[b++]!=(f&127|128))return e;f>>=7}if(a[b++]!=f)break;e++;for(var g=0,h=1;f=a[b++],g+=(f&127)*h,h*=128,0!=(f&128););b+=g}return e};jspb.utils.debugBytesToTextFormat=function(a){var b='"';if(a){a=jspb.utils.byteSourceToUint8Array(a);for(var c=0;c<a.length;c++)b+="\\x",16>a[c]&&(b+="0"),b+=a[c].toString(16)}return b+'"'};
jspb.utils.debugScalarToTextFormat=function(a){return goog.isString(a)?goog.string.quote(a):a.toString()};jspb.utils.stringToByteArray=function(a){for(var b=new Uint8Array(a.length),c=0;c<a.length;c++){var d=a.charCodeAt(c);if(255<d)throw Error("Conversion error: string contains codepoint outside of byte range");b[c]=d}return b};
jspb.utils.byteSourceToUint8Array=function(a){if(a.constructor===Uint8Array)return a;if(a.constructor===ArrayBuffer||a.constructor===Array)return new Uint8Array(a);if(a.constructor===String)return goog.crypt.base64.decodeStringToUint8Array(a);goog.asserts.fail("Type not convertible to Uint8Array.");return new Uint8Array(0)};jspb.BinaryIterator=function(a,b,c){this.elements_=this.nextMethod_=this.decoder_=null;this.cursor_=0;this.nextValue_=null;this.atEnd_=!0;this.init_(a,b,c)};jspb.BinaryIterator.prototype.init_=function(a,b,c){a&&b&&(this.decoder_=a,this.nextMethod_=b);this.elements_=c?c:null;this.cursor_=0;this.nextValue_=null;this.atEnd_=!this.decoder_&&!this.elements_;this.next()};jspb.BinaryIterator.instanceCache_=[];
jspb.BinaryIterator.alloc=function(a,b,c){if(jspb.BinaryIterator.instanceCache_.length){var d=jspb.BinaryIterator.instanceCache_.pop();d.init_(a,b,c);return d}return new jspb.BinaryIterator(a,b,c)};jspb.BinaryIterator.prototype.free=function(){this.clear();100>jspb.BinaryIterator.instanceCache_.length&&jspb.BinaryIterator.instanceCache_.push(this)};
jspb.BinaryIterator.prototype.clear=function(){this.decoder_&&this.decoder_.free();this.elements_=this.nextMethod_=this.decoder_=null;this.cursor_=0;this.nextValue_=null;this.atEnd_=!0};jspb.BinaryIterator.prototype.get=function(){return this.nextValue_};jspb.BinaryIterator.prototype.atEnd=function(){return this.atEnd_};
jspb.BinaryIterator.prototype.next=function(){var a=this.nextValue_;this.decoder_?this.decoder_.atEnd()?(this.nextValue_=null,this.atEnd_=!0):this.nextValue_=this.nextMethod_.call(this.decoder_):this.elements_&&(this.cursor_==this.elements_.length?(this.nextValue_=null,this.atEnd_=!0):this.nextValue_=this.elements_[this.cursor_++]);return a};jspb.BinaryDecoder=function(a,b,c){this.bytes_=null;this.tempHigh_=this.tempLow_=this.cursor_=this.end_=this.start_=0;this.error_=!1;a&&this.setBlock(a,b,c)};
jspb.BinaryDecoder.instanceCache_=[];jspb.BinaryDecoder.alloc=function(a,b,c){if(jspb.BinaryDecoder.instanceCache_.length){var d=jspb.BinaryDecoder.instanceCache_.pop();a&&d.setBlock(a,b,c);return d}return new jspb.BinaryDecoder(a,b,c)};jspb.BinaryDecoder.prototype.free=function(){this.clear();100>jspb.BinaryDecoder.instanceCache_.length&&jspb.BinaryDecoder.instanceCache_.push(this)};jspb.BinaryDecoder.prototype.clone=function(){return jspb.BinaryDecoder.alloc(this.bytes_,this.start_,this.end_-this.start_)};
jspb.BinaryDecoder.prototype.clear=function(){this.bytes_=null;this.cursor_=this.end_=this.start_=0;this.error_=!1};jspb.BinaryDecoder.prototype.getBuffer=function(){return this.bytes_};jspb.BinaryDecoder.prototype.setBlock=function(a,b,c){this.bytes_=jspb.utils.byteSourceToUint8Array(a);this.start_=goog.isDef(b)?b:0;this.end_=goog.isDef(c)?this.start_+c:this.bytes_.length;this.cursor_=this.start_};jspb.BinaryDecoder.prototype.getEnd=function(){return this.end_};
jspb.BinaryDecoder.prototype.setEnd=function(a){this.end_=a};jspb.BinaryDecoder.prototype.reset=function(){this.cursor_=this.start_};jspb.BinaryDecoder.prototype.getCursor=function(){return this.cursor_};jspb.BinaryDecoder.prototype.setCursor=function(a){this.cursor_=a};jspb.BinaryDecoder.prototype.advance=function(a){this.cursor_+=a;goog.asserts.assert(this.cursor_<=this.end_)};jspb.BinaryDecoder.prototype.atEnd=function(){return this.cursor_==this.end_};
jspb.BinaryDecoder.prototype.pastEnd=function(){return this.cursor_>this.end_};jspb.BinaryDecoder.prototype.getError=function(){return this.error_||0>this.cursor_||this.cursor_>this.end_};
jspb.BinaryDecoder.prototype.readSplitVarint64_=function(){for(var a,b=0,c,d=0;4>d;d++)if(a=this.bytes_[this.cursor_++],b|=(a&127)<<7*d,128>a){this.tempLow_=b>>>0;this.tempHigh_=0;return}a=this.bytes_[this.cursor_++];b|=(a&127)<<28;c=0|(a&127)>>4;if(128>a)this.tempLow_=b>>>0,this.tempHigh_=c>>>0;else{for(d=0;5>d;d++)if(a=this.bytes_[this.cursor_++],c|=(a&127)<<7*d+3,128>a){this.tempLow_=b>>>0;this.tempHigh_=c>>>0;return}goog.asserts.fail("Failed to read varint, encoding is invalid.");this.error_=
!0}};jspb.BinaryDecoder.prototype.skipVarint=function(){for(;this.bytes_[this.cursor_]&128;)this.cursor_++;this.cursor_++};jspb.BinaryDecoder.prototype.unskipVarint=function(a){for(;128<a;)this.cursor_--,a>>>=7;this.cursor_--};
jspb.BinaryDecoder.prototype.readUnsignedVarint32=function(){var a,b=this.bytes_;a=b[this.cursor_+0];var c=a&127;if(128>a)return this.cursor_+=1,goog.asserts.assert(this.cursor_<=this.end_),c;a=b[this.cursor_+1];c|=(a&127)<<7;if(128>a)return this.cursor_+=2,goog.asserts.assert(this.cursor_<=this.end_),c;a=b[this.cursor_+2];c|=(a&127)<<14;if(128>a)return this.cursor_+=3,goog.asserts.assert(this.cursor_<=this.end_),c;a=b[this.cursor_+3];c|=(a&127)<<21;if(128>a)return this.cursor_+=4,goog.asserts.assert(this.cursor_<=
this.end_),c;a=b[this.cursor_+4];c|=(a&15)<<28;if(128>a)return goog.asserts.assert(0==(a&240)),this.cursor_+=5,goog.asserts.assert(this.cursor_<=this.end_),c>>>0;goog.asserts.assert(240==(a&240));goog.asserts.assert(255==b[this.cursor_+5]);goog.asserts.assert(255==b[this.cursor_+6]);goog.asserts.assert(255==b[this.cursor_+7]);goog.asserts.assert(255==b[this.cursor_+8]);goog.asserts.assert(1==b[this.cursor_+9]);this.cursor_+=10;goog.asserts.assert(this.cursor_<=this.end_);return c};
jspb.BinaryDecoder.prototype.readSignedVarint32=jspb.BinaryDecoder.prototype.readUnsignedVarint32;jspb.BinaryDecoder.prototype.readUnsignedVarint32String=function(){return this.readUnsignedVarint32().toString()};jspb.BinaryDecoder.prototype.readSignedVarint32String=function(){return this.readSignedVarint32().toString()};jspb.BinaryDecoder.prototype.readZigzagVarint32=function(){var a=this.readUnsignedVarint32();return a>>>1^-(a&1)};
jspb.BinaryDecoder.prototype.readUnsignedVarint64=function(){this.readSplitVarint64_();return jspb.utils.joinUint64(this.tempLow_,this.tempHigh_)};jspb.BinaryDecoder.prototype.readUnsignedVarint64String=function(){this.readSplitVarint64_();return jspb.utils.joinUnsignedDecimalString(this.tempLow_,this.tempHigh_)};jspb.BinaryDecoder.prototype.readSignedVarint64=function(){this.readSplitVarint64_();return jspb.utils.joinInt64(this.tempLow_,this.tempHigh_)};
jspb.BinaryDecoder.prototype.readSignedVarint64String=function(){this.readSplitVarint64_();return jspb.utils.joinSignedDecimalString(this.tempLow_,this.tempHigh_)};jspb.BinaryDecoder.prototype.readZigzagVarint64=function(){this.readSplitVarint64_();return jspb.utils.joinZigzag64(this.tempLow_,this.tempHigh_)};jspb.BinaryDecoder.prototype.readUint8=function(){var a=this.bytes_[this.cursor_+0];this.cursor_+=1;goog.asserts.assert(this.cursor_<=this.end_);return a};
jspb.BinaryDecoder.prototype.readUint16=function(){var a=this.bytes_[this.cursor_+0],b=this.bytes_[this.cursor_+1];this.cursor_+=2;goog.asserts.assert(this.cursor_<=this.end_);return a<<0|b<<8};jspb.BinaryDecoder.prototype.readUint32=function(){var a=this.bytes_[this.cursor_+0],b=this.bytes_[this.cursor_+1],c=this.bytes_[this.cursor_+2],d=this.bytes_[this.cursor_+3];this.cursor_+=4;goog.asserts.assert(this.cursor_<=this.end_);return(a<<0|b<<8|c<<16|d<<24)>>>0};
jspb.BinaryDecoder.prototype.readUint64=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinUint64(a,b)};jspb.BinaryDecoder.prototype.readInt8=function(){var a=this.bytes_[this.cursor_+0];this.cursor_+=1;goog.asserts.assert(this.cursor_<=this.end_);return a<<24>>24};jspb.BinaryDecoder.prototype.readInt16=function(){var a=this.bytes_[this.cursor_+0],b=this.bytes_[this.cursor_+1];this.cursor_+=2;goog.asserts.assert(this.cursor_<=this.end_);return(a<<0|b<<8)<<16>>16};
jspb.BinaryDecoder.prototype.readInt32=function(){var a=this.bytes_[this.cursor_+0],b=this.bytes_[this.cursor_+1],c=this.bytes_[this.cursor_+2],d=this.bytes_[this.cursor_+3];this.cursor_+=4;goog.asserts.assert(this.cursor_<=this.end_);return a<<0|b<<8|c<<16|d<<24};jspb.BinaryDecoder.prototype.readInt64=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinInt64(a,b)};jspb.BinaryDecoder.prototype.readFloat=function(){var a=this.readUint32();return jspb.utils.joinFloat32(a,0)};
jspb.BinaryDecoder.prototype.readDouble=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinFloat64(a,b)};jspb.BinaryDecoder.prototype.readBool=function(){return!!this.bytes_[this.cursor_++]};jspb.BinaryDecoder.prototype.readEnum=function(){return this.readSignedVarint32()};
jspb.BinaryDecoder.prototype.readString=function(a){var b=this.bytes_,c=this.cursor_;a=c+a;for(var d=[];c<a;){var e=b[c++];if(128>e)d.push(e);else if(!(192>e))if(224>e){var f=b[c++];d.push((e&31)<<6|f&63)}else if(240>e){var f=b[c++],g=b[c++];d.push((e&15)<<12|(f&63)<<6|g&63)}}b=String.fromCharCode.apply(null,d);this.cursor_=c;return b};jspb.BinaryDecoder.prototype.readStringWithLength=function(){var a=this.readUnsignedVarint32();return this.readString(a)};
jspb.BinaryDecoder.prototype.readBytes=function(a){if(0>a||this.cursor_+a>this.bytes_.length)return this.error_=!0,goog.asserts.fail("Invalid byte length!"),new Uint8Array(0);var b=this.bytes_.subarray(this.cursor_,this.cursor_+a);this.cursor_+=a;goog.asserts.assert(this.cursor_<=this.end_);return b};jspb.BinaryDecoder.prototype.readVarintHash64=function(){this.readSplitVarint64_();return jspb.utils.joinHash64(this.tempLow_,this.tempHigh_)};
jspb.BinaryDecoder.prototype.readFixedHash64=function(){var a=this.bytes_,b=this.cursor_,c=a[b+0],d=a[b+1],e=a[b+2],f=a[b+3],g=a[b+4],h=a[b+5],k=a[b+6],a=a[b+7];this.cursor_+=8;return String.fromCharCode(c,d,e,f,g,h,k,a)};jspb.BinaryReader=function(a,b,c){this.decoder_=jspb.BinaryDecoder.alloc(a,b,c);this.fieldCursor_=this.decoder_.getCursor();this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER;this.nextWireType_=jspb.BinaryConstants.WireType.INVALID;this.error_=!1;this.readCallbacks_=null};jspb.BinaryReader.instanceCache_=[];
jspb.BinaryReader.alloc=function(a,b,c){if(jspb.BinaryReader.instanceCache_.length){var d=jspb.BinaryReader.instanceCache_.pop();a&&d.decoder_.setBlock(a,b,c);return d}return new jspb.BinaryReader(a,b,c)};jspb.BinaryReader.prototype.alloc=jspb.BinaryReader.alloc;
jspb.BinaryReader.prototype.free=function(){this.decoder_.clear();this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER;this.nextWireType_=jspb.BinaryConstants.WireType.INVALID;this.error_=!1;this.readCallbacks_=null;100>jspb.BinaryReader.instanceCache_.length&&jspb.BinaryReader.instanceCache_.push(this)};jspb.BinaryReader.prototype.getFieldCursor=function(){return this.fieldCursor_};jspb.BinaryReader.prototype.getCursor=function(){return this.decoder_.getCursor()};
jspb.BinaryReader.prototype.getBuffer=function(){return this.decoder_.getBuffer()};jspb.BinaryReader.prototype.getFieldNumber=function(){return this.nextField_};jspb.BinaryReader.prototype.getWireType=function(){return this.nextWireType_};jspb.BinaryReader.prototype.isEndGroup=function(){return this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP};jspb.BinaryReader.prototype.getError=function(){return this.error_||this.decoder_.getError()};
jspb.BinaryReader.prototype.setBlock=function(a,b,c){this.decoder_.setBlock(a,b,c);this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER;this.nextWireType_=jspb.BinaryConstants.WireType.INVALID};jspb.BinaryReader.prototype.reset=function(){this.decoder_.reset();this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER;this.nextWireType_=jspb.BinaryConstants.WireType.INVALID};jspb.BinaryReader.prototype.advance=function(a){this.decoder_.advance(a)};
jspb.BinaryReader.prototype.nextField=function(){if(this.decoder_.atEnd())return!1;if(this.getError())return goog.asserts.fail("Decoder hit an error"),!1;this.fieldCursor_=this.decoder_.getCursor();var a=this.decoder_.readUnsignedVarint32(),b=a>>>3,a=a&7;if(a!=jspb.BinaryConstants.WireType.VARINT&&a!=jspb.BinaryConstants.WireType.FIXED32&&a!=jspb.BinaryConstants.WireType.FIXED64&&a!=jspb.BinaryConstants.WireType.DELIMITED&&a!=jspb.BinaryConstants.WireType.START_GROUP&&a!=jspb.BinaryConstants.WireType.END_GROUP)return goog.asserts.fail("Invalid wire type"),
this.error_=!0,!1;this.nextField_=b;this.nextWireType_=a;return!0};jspb.BinaryReader.prototype.unskipHeader=function(){this.decoder_.unskipVarint(this.nextField_<<3|this.nextWireType_)};jspb.BinaryReader.prototype.skipMatchingFields=function(){var a=this.nextField_;for(this.unskipHeader();this.nextField()&&this.getFieldNumber()==a;)this.skipField();this.decoder_.atEnd()||this.unskipHeader()};
jspb.BinaryReader.prototype.skipVarintField=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.VARINT?(goog.asserts.fail("Invalid wire type for skipVarintField"),this.skipField()):this.decoder_.skipVarint()};jspb.BinaryReader.prototype.skipDelimitedField=function(){if(this.nextWireType_!=jspb.BinaryConstants.WireType.DELIMITED)goog.asserts.fail("Invalid wire type for skipDelimitedField"),this.skipField();else{var a=this.decoder_.readUnsignedVarint32();this.decoder_.advance(a)}};
jspb.BinaryReader.prototype.skipFixed32Field=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.FIXED32?(goog.asserts.fail("Invalid wire type for skipFixed32Field"),this.skipField()):this.decoder_.advance(4)};jspb.BinaryReader.prototype.skipFixed64Field=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.FIXED64?(goog.asserts.fail("Invalid wire type for skipFixed64Field"),this.skipField()):this.decoder_.advance(8)};
jspb.BinaryReader.prototype.skipGroup=function(){var a=[this.nextField_];do{if(!this.nextField()){goog.asserts.fail("Unmatched start-group tag: stream EOF");this.error_=!0;break}if(this.nextWireType_==jspb.BinaryConstants.WireType.START_GROUP)a.push(this.nextField_);else if(this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP&&this.nextField_!=a.pop()){goog.asserts.fail("Unmatched end-group tag");this.error_=!0;break}}while(0<a.length)};
jspb.BinaryReader.prototype.skipField=function(){switch(this.nextWireType_){case jspb.BinaryConstants.WireType.VARINT:this.skipVarintField();break;case jspb.BinaryConstants.WireType.FIXED64:this.skipFixed64Field();break;case jspb.BinaryConstants.WireType.DELIMITED:this.skipDelimitedField();break;case jspb.BinaryConstants.WireType.FIXED32:this.skipFixed32Field();break;case jspb.BinaryConstants.WireType.START_GROUP:this.skipGroup();break;default:goog.asserts.fail("Invalid wire encoding for field.")}};
jspb.BinaryReader.prototype.registerReadCallback=function(a,b){goog.isNull(this.readCallbacks_)&&(this.readCallbacks_={});goog.asserts.assert(!this.readCallbacks_[a]);this.readCallbacks_[a]=b};jspb.BinaryReader.prototype.runReadCallback=function(a){goog.asserts.assert(!goog.isNull(this.readCallbacks_));a=this.readCallbacks_[a];goog.asserts.assert(a);return a(this)};
jspb.BinaryReader.prototype.readAny=function(a){this.nextWireType_=jspb.BinaryConstants.FieldTypeToWireType(a);var b=jspb.BinaryConstants.FieldType;switch(a){case b.DOUBLE:return this.readDouble();case b.FLOAT:return this.readFloat();case b.INT64:return this.readInt64();case b.UINT64:return this.readUint64();case b.INT32:return this.readInt32();case b.FIXED64:return this.readFixed64();case b.FIXED32:return this.readFixed32();case b.BOOL:return this.readBool();case b.STRING:return this.readString();
case b.GROUP:goog.asserts.fail("Group field type not supported in readAny()");case b.MESSAGE:goog.asserts.fail("Message field type not supported in readAny()");case b.BYTES:return this.readBytes();case b.UINT32:return this.readUint32();case b.ENUM:return this.readEnum();case b.SFIXED32:return this.readSfixed32();case b.SFIXED64:return this.readSfixed64();case b.SINT32:return this.readSint32();case b.SINT64:return this.readSint64();case b.FHASH64:return this.readFixedHash64();case b.VHASH64:return this.readVarintHash64();
default:goog.asserts.fail("Invalid field type in readAny()")}return 0};jspb.BinaryReader.prototype.readMessage=function(a,b){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var c=this.decoder_.getEnd(),d=this.decoder_.readUnsignedVarint32(),d=this.decoder_.getCursor()+d;this.decoder_.setEnd(d);b(a,this);this.decoder_.setCursor(d);this.decoder_.setEnd(c)};
jspb.BinaryReader.prototype.readGroup=function(a,b,c){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.START_GROUP);goog.asserts.assert(this.nextField_==a);c(b,this);this.error_||this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP||(goog.asserts.fail("Group submessage did not end with an END_GROUP tag"),this.error_=!0)};
jspb.BinaryReader.prototype.getFieldDecoder=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var a=this.decoder_.readUnsignedVarint32(),b=this.decoder_.getCursor(),c=b+a,a=jspb.BinaryDecoder.alloc(this.decoder_.getBuffer(),b,a);this.decoder_.setCursor(c);return a};jspb.BinaryReader.prototype.readInt32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint32()};
jspb.BinaryReader.prototype.readInt32String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint32String()};jspb.BinaryReader.prototype.readInt64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint64()};jspb.BinaryReader.prototype.readInt64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint64String()};
jspb.BinaryReader.prototype.readUint32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readUnsignedVarint32()};jspb.BinaryReader.prototype.readUint32String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readUnsignedVarint32String()};jspb.BinaryReader.prototype.readUint64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readUnsignedVarint64()};
jspb.BinaryReader.prototype.readUint64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readUnsignedVarint64String()};jspb.BinaryReader.prototype.readSint32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readZigzagVarint32()};jspb.BinaryReader.prototype.readSint64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readZigzagVarint64()};
jspb.BinaryReader.prototype.readFixed32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32);return this.decoder_.readUint32()};jspb.BinaryReader.prototype.readFixed64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readUint64()};jspb.BinaryReader.prototype.readSfixed32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32);return this.decoder_.readInt32()};
jspb.BinaryReader.prototype.readSfixed64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readInt64()};jspb.BinaryReader.prototype.readFloat=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32);return this.decoder_.readFloat()};jspb.BinaryReader.prototype.readDouble=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readDouble()};
jspb.BinaryReader.prototype.readBool=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return!!this.decoder_.readUnsignedVarint32()};jspb.BinaryReader.prototype.readEnum=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint64()};
jspb.BinaryReader.prototype.readString=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var a=this.decoder_.readUnsignedVarint32();return this.decoder_.readString(a)};jspb.BinaryReader.prototype.readBytes=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var a=this.decoder_.readUnsignedVarint32();return this.decoder_.readBytes(a)};
jspb.BinaryReader.prototype.readVarintHash64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readVarintHash64()};jspb.BinaryReader.prototype.readFixedHash64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readFixedHash64()};
jspb.BinaryReader.prototype.readPackedField_=function(a){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);for(var b=this.decoder_.readUnsignedVarint32(),b=this.decoder_.getCursor()+b,c=[];this.decoder_.getCursor()<b;)c.push(a.call(this.decoder_));return c};jspb.BinaryReader.prototype.readPackedInt32=function(){return this.readPackedField_(this.decoder_.readSignedVarint32)};jspb.BinaryReader.prototype.readPackedInt32String=function(){return this.readPackedField_(this.decoder_.readSignedVarint32String)};
jspb.BinaryReader.prototype.readPackedInt64=function(){return this.readPackedField_(this.decoder_.readSignedVarint64)};jspb.BinaryReader.prototype.readPackedInt64String=function(){return this.readPackedField_(this.decoder_.readSignedVarint64String)};jspb.BinaryReader.prototype.readPackedUint32=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint32)};jspb.BinaryReader.prototype.readPackedUint32String=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint32String)};
jspb.BinaryReader.prototype.readPackedUint64=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint64)};jspb.BinaryReader.prototype.readPackedUint64String=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint64String)};jspb.BinaryReader.prototype.readPackedSint32=function(){return this.readPackedField_(this.decoder_.readZigzagVarint32)};jspb.BinaryReader.prototype.readPackedSint64=function(){return this.readPackedField_(this.decoder_.readZigzagVarint64)};
jspb.BinaryReader.prototype.readPackedFixed32=function(){return this.readPackedField_(this.decoder_.readUint32)};jspb.BinaryReader.prototype.readPackedFixed64=function(){return this.readPackedField_(this.decoder_.readUint64)};jspb.BinaryReader.prototype.readPackedSfixed32=function(){return this.readPackedField_(this.decoder_.readInt32)};jspb.BinaryReader.prototype.readPackedSfixed64=function(){return this.readPackedField_(this.decoder_.readInt64)};jspb.BinaryReader.prototype.readPackedFloat=function(){return this.readPackedField_(this.decoder_.readFloat)};
jspb.BinaryReader.prototype.readPackedDouble=function(){return this.readPackedField_(this.decoder_.readDouble)};jspb.BinaryReader.prototype.readPackedBool=function(){return this.readPackedField_(this.decoder_.readBool)};jspb.BinaryReader.prototype.readPackedEnum=function(){return this.readPackedField_(this.decoder_.readEnum)};jspb.BinaryReader.prototype.readPackedVarintHash64=function(){return this.readPackedField_(this.decoder_.readVarintHash64)};
jspb.BinaryReader.prototype.readPackedFixedHash64=function(){return this.readPackedField_(this.decoder_.readFixedHash64)};jspb.BinaryEncoder=function(){this.buffer_=[]};jspb.BinaryEncoder.prototype.length=function(){return this.buffer_.length};jspb.BinaryEncoder.prototype.end=function(){var a=this.buffer_;this.buffer_=[];return a};
jspb.BinaryEncoder.prototype.writeSplitVarint64=function(a,b){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(b==Math.floor(b));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_32);for(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32);0<b||127<a;)this.buffer_.push(a&127|128),a=(a>>>7|b<<25)>>>0,b>>>=7;this.buffer_.push(a)};
jspb.BinaryEncoder.prototype.writeUnsignedVarint32=function(a){goog.asserts.assert(a==Math.floor(a));for(goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_32);127<a;)this.buffer_.push(a&127|128),a>>>=7;this.buffer_.push(a)};
jspb.BinaryEncoder.prototype.writeSignedVarint32=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_31&&a<jspb.BinaryConstants.TWO_TO_31);if(0<=a)this.writeUnsignedVarint32(a);else{for(var b=0;9>b;b++)this.buffer_.push(a&127|128),a>>=7;this.buffer_.push(1)}};
jspb.BinaryEncoder.prototype.writeUnsignedVarint64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_64);jspb.utils.splitInt64(a);this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)};
jspb.BinaryEncoder.prototype.writeSignedVarint64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_63&&a<jspb.BinaryConstants.TWO_TO_63);jspb.utils.splitInt64(a);this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)};
jspb.BinaryEncoder.prototype.writeZigzagVarint32=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_31&&a<jspb.BinaryConstants.TWO_TO_31);this.writeUnsignedVarint32((a<<1^a>>31)>>>0)};jspb.BinaryEncoder.prototype.writeZigzagVarint64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_63&&a<jspb.BinaryConstants.TWO_TO_63);jspb.utils.splitZigzag64(a);this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)};
jspb.BinaryEncoder.prototype.writeUint8=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&256>a);this.buffer_.push(a>>>0&255)};jspb.BinaryEncoder.prototype.writeUint16=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&65536>a);this.buffer_.push(a>>>0&255);this.buffer_.push(a>>>8&255)};
jspb.BinaryEncoder.prototype.writeUint32=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_32);this.buffer_.push(a>>>0&255);this.buffer_.push(a>>>8&255);this.buffer_.push(a>>>16&255);this.buffer_.push(a>>>24&255)};jspb.BinaryEncoder.prototype.writeUint64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_64);jspb.utils.splitUint64(a);this.writeUint32(jspb.utils.split64Low);this.writeUint32(jspb.utils.split64High)};
jspb.BinaryEncoder.prototype.writeInt8=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(-128<=a&&128>a);this.buffer_.push(a>>>0&255)};jspb.BinaryEncoder.prototype.writeInt16=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(-32768<=a&&32768>a);this.buffer_.push(a>>>0&255);this.buffer_.push(a>>>8&255)};
jspb.BinaryEncoder.prototype.writeInt32=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_31&&a<jspb.BinaryConstants.TWO_TO_31);this.buffer_.push(a>>>0&255);this.buffer_.push(a>>>8&255);this.buffer_.push(a>>>16&255);this.buffer_.push(a>>>24&255)};
jspb.BinaryEncoder.prototype.writeInt64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_63&&a<jspb.BinaryConstants.TWO_TO_63);jspb.utils.splitInt64(a);this.writeUint32(jspb.utils.split64Low);this.writeUint32(jspb.utils.split64High)};jspb.BinaryEncoder.prototype.writeFloat=function(a){goog.asserts.assert(a>=-jspb.BinaryConstants.FLOAT32_MAX&&a<=jspb.BinaryConstants.FLOAT32_MAX);jspb.utils.splitFloat32(a);this.writeUint32(jspb.utils.split64Low)};
jspb.BinaryEncoder.prototype.writeDouble=function(a){goog.asserts.assert(a>=-jspb.BinaryConstants.FLOAT64_MAX&&a<=jspb.BinaryConstants.FLOAT64_MAX);jspb.utils.splitFloat64(a);this.writeUint32(jspb.utils.split64Low);this.writeUint32(jspb.utils.split64High)};jspb.BinaryEncoder.prototype.writeBool=function(a){goog.asserts.assert(goog.isBoolean(a));this.buffer_.push(a?1:0)};
jspb.BinaryEncoder.prototype.writeEnum=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_31&&a<jspb.BinaryConstants.TWO_TO_31);this.writeSignedVarint32(a)};jspb.BinaryEncoder.prototype.writeBytes=function(a){this.buffer_.push.apply(this.buffer_,a)};jspb.BinaryEncoder.prototype.writeVarintHash64=function(a){jspb.utils.splitHash64(a);this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)};
jspb.BinaryEncoder.prototype.writeFixedHash64=function(a){jspb.utils.splitHash64(a);this.writeUint32(jspb.utils.split64Low);this.writeUint32(jspb.utils.split64High)};jspb.BinaryEncoder.prototype.writeString=function(a){for(var b=this.buffer_.length,c=0;c<a.length;c++){var d=a.charCodeAt(c);128>d?this.buffer_.push(d):(2048>d?this.buffer_.push(d>>6|192):(this.buffer_.push(d>>12|224),this.buffer_.push(d>>6&63|128)),this.buffer_.push(d&63|128))}return this.buffer_.length-b};jspb.arith={};jspb.arith.UInt64=function(a,b){this.lo=a;this.hi=b};jspb.arith.UInt64.prototype.cmp=function(a){return this.hi<a.hi||this.hi==a.hi&&this.lo<a.lo?-1:this.hi==a.hi&&this.lo==a.lo?0:1};jspb.arith.UInt64.prototype.rightShift=function(){return new jspb.arith.UInt64((this.lo>>>1|(this.hi&1)<<31)>>>0,this.hi>>>1>>>0)};jspb.arith.UInt64.prototype.leftShift=function(){return new jspb.arith.UInt64(this.lo<<1>>>0,(this.hi<<1|this.lo>>>31)>>>0)};
jspb.arith.UInt64.prototype.msb=function(){return!!(this.hi&2147483648)};jspb.arith.UInt64.prototype.lsb=function(){return!!(this.lo&1)};jspb.arith.UInt64.prototype.zero=function(){return 0==this.lo&&0==this.hi};jspb.arith.UInt64.prototype.add=function(a){return new jspb.arith.UInt64((this.lo+a.lo&4294967295)>>>0>>>0,((this.hi+a.hi&4294967295)>>>0)+(4294967296<=this.lo+a.lo?1:0)>>>0)};
jspb.arith.UInt64.prototype.sub=function(a){return new jspb.arith.UInt64((this.lo-a.lo&4294967295)>>>0>>>0,((this.hi-a.hi&4294967295)>>>0)-(0>this.lo-a.lo?1:0)>>>0)};jspb.arith.UInt64.mul32x32=function(a,b){for(var c=a&65535,d=a>>>16,e=b&65535,f=b>>>16,g=c*e+65536*(c*f&65535)+65536*(d*e&65535),c=d*f+(c*f>>>16)+(d*e>>>16);4294967296<=g;)g-=4294967296,c+=1;return new jspb.arith.UInt64(g>>>0,c>>>0)};
jspb.arith.UInt64.prototype.mul=function(a){var b=jspb.arith.UInt64.mul32x32(this.lo,a);a=jspb.arith.UInt64.mul32x32(this.hi,a);a.hi=a.lo;a.lo=0;return b.add(a)};
jspb.arith.UInt64.prototype.div=function(a){if(0==a)return[];var b=new jspb.arith.UInt64(0,0),c=new jspb.arith.UInt64(this.lo,this.hi);a=new jspb.arith.UInt64(a,0);for(var d=new jspb.arith.UInt64(1,0);!a.msb();)a=a.leftShift(),d=d.leftShift();for(;!d.zero();)0>=a.cmp(c)&&(b=b.add(d),c=c.sub(a)),a=a.rightShift(),d=d.rightShift();return[b,c]};jspb.arith.UInt64.prototype.toString=function(){for(var a="",b=this;!b.zero();)var b=b.div(10),c=b[0],a=b[1].lo+a,b=c;""==a&&(a="0");return a};
jspb.arith.UInt64.fromString=function(a){for(var b=new jspb.arith.UInt64(0,0),c=new jspb.arith.UInt64(0,0),d=0;d<a.length;d++){if("0">a[d]||"9"<a[d])return null;var e=parseInt(a[d],10);c.lo=e;b=b.mul(10).add(c)}return b};jspb.arith.UInt64.prototype.clone=function(){return new jspb.arith.UInt64(this.lo,this.hi)};jspb.arith.Int64=function(a,b){this.lo=a;this.hi=b};
jspb.arith.Int64.prototype.add=function(a){return new jspb.arith.Int64((this.lo+a.lo&4294967295)>>>0>>>0,((this.hi+a.hi&4294967295)>>>0)+(4294967296<=this.lo+a.lo?1:0)>>>0)};jspb.arith.Int64.prototype.sub=function(a){return new jspb.arith.Int64((this.lo-a.lo&4294967295)>>>0>>>0,((this.hi-a.hi&4294967295)>>>0)-(0>this.lo-a.lo?1:0)>>>0)};jspb.arith.Int64.prototype.clone=function(){return new jspb.arith.Int64(this.lo,this.hi)};
jspb.arith.Int64.prototype.toString=function(){var a=0!=(this.hi&2147483648),b=new jspb.arith.UInt64(this.lo,this.hi);a&&(b=(new jspb.arith.UInt64(0,0)).sub(b));return(a?"-":"")+b.toString()};jspb.arith.Int64.fromString=function(a){var b=0<a.length&&"-"==a[0];b&&(a=a.substring(1));a=jspb.arith.UInt64.fromString(a);if(null===a)return null;b&&(a=(new jspb.arith.UInt64(0,0)).sub(a));return new jspb.arith.Int64(a.lo,a.hi)};jspb.BinaryWriter=function(){this.blocks_=[];this.totalLength_=0;this.encoder_=new jspb.BinaryEncoder;this.bookmarks_=[]};jspb.BinaryWriter.prototype.appendUint8Array_=function(a){var b=this.encoder_.end();this.blocks_.push(b);this.blocks_.push(a);this.totalLength_+=b.length+a.length};
jspb.BinaryWriter.prototype.beginDelimited_=function(a){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);a=this.encoder_.end();this.blocks_.push(a);this.totalLength_+=a.length;a.push(this.totalLength_);return a};jspb.BinaryWriter.prototype.endDelimited_=function(a){var b=a.pop(),b=this.totalLength_+this.encoder_.length()-b;for(goog.asserts.assert(0<=b);127<b;)a.push(b&127|128),b>>>=7,this.totalLength_++;a.push(b);this.totalLength_++};
jspb.BinaryWriter.prototype.writeSerializedMessage=function(a,b,c){this.appendUint8Array_(a.subarray(b,c))};jspb.BinaryWriter.prototype.maybeWriteSerializedMessage=function(a,b,c){null!=a&&null!=b&&null!=c&&this.writeSerializedMessage(a,b,c)};jspb.BinaryWriter.prototype.reset=function(){this.blocks_=[];this.encoder_.end();this.totalLength_=0;this.bookmarks_=[]};
jspb.BinaryWriter.prototype.getResultBuffer=function(){goog.asserts.assert(0==this.bookmarks_.length);for(var a=new Uint8Array(this.totalLength_+this.encoder_.length()),b=this.blocks_,c=b.length,d=0,e=0;e<c;e++){var f=b[e];a.set(f,d);d+=f.length}b=this.encoder_.end();a.set(b,d);d+=b.length;goog.asserts.assert(d==a.length);this.blocks_=[a];return a};jspb.BinaryWriter.prototype.getResultBase64String=function(){return goog.crypt.base64.encodeByteArray(this.getResultBuffer())};
jspb.BinaryWriter.prototype.beginSubMessage=function(a){this.bookmarks_.push(this.beginDelimited_(a))};jspb.BinaryWriter.prototype.endSubMessage=function(){goog.asserts.assert(0<=this.bookmarks_.length);this.endDelimited_(this.bookmarks_.pop())};jspb.BinaryWriter.prototype.writeFieldHeader_=function(a,b){goog.asserts.assert(1<=a&&a==Math.floor(a));this.encoder_.writeUnsignedVarint32(8*a+b)};
jspb.BinaryWriter.prototype.writeAny=function(a,b,c){var d=jspb.BinaryConstants.FieldType;switch(a){case d.DOUBLE:this.writeDouble(b,c);break;case d.FLOAT:this.writeFloat(b,c);break;case d.INT64:this.writeInt64(b,c);break;case d.UINT64:this.writeUint64(b,c);break;case d.INT32:this.writeInt32(b,c);break;case d.FIXED64:this.writeFixed64(b,c);break;case d.FIXED32:this.writeFixed32(b,c);break;case d.BOOL:this.writeBool(b,c);break;case d.STRING:this.writeString(b,c);break;case d.GROUP:goog.asserts.fail("Group field type not supported in writeAny()");
break;case d.MESSAGE:goog.asserts.fail("Message field type not supported in writeAny()");break;case d.BYTES:this.writeBytes(b,c);break;case d.UINT32:this.writeUint32(b,c);break;case d.ENUM:this.writeEnum(b,c);break;case d.SFIXED32:this.writeSfixed32(b,c);break;case d.SFIXED64:this.writeSfixed64(b,c);break;case d.SINT32:this.writeSint32(b,c);break;case d.SINT64:this.writeSint64(b,c);break;case d.FHASH64:this.writeFixedHash64(b,c);break;case d.VHASH64:this.writeVarintHash64(b,c);break;default:goog.asserts.fail("Invalid field type in writeAny()")}};
jspb.BinaryWriter.prototype.writeUnsignedVarint32_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeUnsignedVarint32(b))};jspb.BinaryWriter.prototype.writeSignedVarint32_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint32(b))};jspb.BinaryWriter.prototype.writeUnsignedVarint64_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeUnsignedVarint64(b))};
jspb.BinaryWriter.prototype.writeSignedVarint64_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint64(b))};jspb.BinaryWriter.prototype.writeZigzagVarint32_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint32(b))};jspb.BinaryWriter.prototype.writeZigzagVarint64_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint64(b))};
jspb.BinaryWriter.prototype.writeInt32=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeSignedVarint32_(a,b))};jspb.BinaryWriter.prototype.writeInt32String=function(a,b){if(null!=b){var c=parseInt(b,10);goog.asserts.assert(c>=-jspb.BinaryConstants.TWO_TO_31&&c<jspb.BinaryConstants.TWO_TO_31);this.writeSignedVarint32_(a,c)}};
jspb.BinaryWriter.prototype.writeInt64=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_63&&b<jspb.BinaryConstants.TWO_TO_63),this.writeSignedVarint64_(a,b))};jspb.BinaryWriter.prototype.writeInt64String=function(a,b){if(null!=b){var c=jspb.arith.Int64.fromString(b);this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT);this.encoder_.writeSplitVarint64(c.lo,c.hi)}};
jspb.BinaryWriter.prototype.writeUint32=function(a,b){null!=b&&(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32),this.writeUnsignedVarint32_(a,b))};jspb.BinaryWriter.prototype.writeUint32String=function(a,b){if(null!=b){var c=parseInt(b,10);goog.asserts.assert(0<=c&&c<jspb.BinaryConstants.TWO_TO_32);this.writeUnsignedVarint32_(a,c)}};
jspb.BinaryWriter.prototype.writeUint64=function(a,b){null!=b&&(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_64),this.writeUnsignedVarint64_(a,b))};jspb.BinaryWriter.prototype.writeUint64String=function(a,b){if(null!=b){var c=jspb.arith.UInt64.fromString(b);this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT);this.encoder_.writeSplitVarint64(c.lo,c.hi)}};
jspb.BinaryWriter.prototype.writeSint32=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeZigzagVarint32_(a,b))};jspb.BinaryWriter.prototype.writeSint64=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_63&&b<jspb.BinaryConstants.TWO_TO_63),this.writeZigzagVarint64_(a,b))};
jspb.BinaryWriter.prototype.writeFixed32=function(a,b){null!=b&&(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeUint32(b))};jspb.BinaryWriter.prototype.writeFixed64=function(a,b){null!=b&&(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_64),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeUint64(b))};
jspb.BinaryWriter.prototype.writeSfixed32=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeInt32(b))};jspb.BinaryWriter.prototype.writeSfixed64=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_63&&b<jspb.BinaryConstants.TWO_TO_63),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeInt64(b))};
jspb.BinaryWriter.prototype.writeFloat=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeFloat(b))};jspb.BinaryWriter.prototype.writeDouble=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeDouble(b))};jspb.BinaryWriter.prototype.writeBool=function(a,b){null!=b&&(goog.asserts.assert(goog.isBoolean(b)),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeBool(b))};
jspb.BinaryWriter.prototype.writeEnum=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint32(b))};jspb.BinaryWriter.prototype.writeString=function(a,b){if(null!=b){var c=this.beginDelimited_(a);this.encoder_.writeString(b);this.endDelimited_(c)}};
jspb.BinaryWriter.prototype.writeBytes=function(a,b){if(null!=b){var c=jspb.utils.byteSourceToUint8Array(b);this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(c.length);this.appendUint8Array_(c)}};jspb.BinaryWriter.prototype.writeMessage=function(a,b,c){null!=b&&(a=this.beginDelimited_(a),c(b,this),this.endDelimited_(a))};
jspb.BinaryWriter.prototype.writeGroup=function(a,b,c){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.START_GROUP),c(b,this),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.END_GROUP))};jspb.BinaryWriter.prototype.writeFixedHash64=function(a,b){null!=b&&(goog.asserts.assert(8==b.length),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeFixedHash64(b))};
jspb.BinaryWriter.prototype.writeVarintHash64=function(a,b){null!=b&&(goog.asserts.assert(8==b.length),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeVarintHash64(b))};jspb.BinaryWriter.prototype.writeRepeatedUnsignedVarint32_=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeUnsignedVarint32_(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedSignedVarint32_=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSignedVarint32_(a,b[c])};
jspb.BinaryWriter.prototype.writeRepeatedUnsignedVarint64_=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeUnsignedVarint64_(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedSignedVarint64_=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSignedVarint64_(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedZigzag32_=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeZigzagVarint32_(a,b[c])};
jspb.BinaryWriter.prototype.writeRepeatedZigzag_=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeZigzagVarint64_(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedInt32=jspb.BinaryWriter.prototype.writeRepeatedSignedVarint32_;jspb.BinaryWriter.prototype.writeRepeatedInt32String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeInt32String(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedInt64=jspb.BinaryWriter.prototype.writeRepeatedSignedVarint64_;
jspb.BinaryWriter.prototype.writeRepeatedInt64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeInt64String(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedUint32=jspb.BinaryWriter.prototype.writeRepeatedUnsignedVarint32_;jspb.BinaryWriter.prototype.writeRepeatedUint32String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeUint32String(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedUint64=jspb.BinaryWriter.prototype.writeRepeatedUnsignedVarint64_;
jspb.BinaryWriter.prototype.writeRepeatedUint64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeUint64String(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedSint32=jspb.BinaryWriter.prototype.writeRepeatedZigzag32_;jspb.BinaryWriter.prototype.writeRepeatedSint64=jspb.BinaryWriter.prototype.writeRepeatedZigzag_;jspb.BinaryWriter.prototype.writeRepeatedFixed32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFixed32(a,b[c])};
jspb.BinaryWriter.prototype.writeRepeatedFixed64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFixed64(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedSfixed32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSfixed32(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedSfixed64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSfixed64(a,b[c])};
jspb.BinaryWriter.prototype.writeRepeatedFloat=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFloat(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedDouble=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeDouble(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedBool=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeBool(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedEnum=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeEnum(a,b[c])};
jspb.BinaryWriter.prototype.writeRepeatedString=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeString(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedBytes=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeBytes(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedMessage=function(a,b,c){if(null!=b)for(var d=0;d<b.length;d++){var e=this.beginDelimited_(a);c(b[d],this);this.endDelimited_(e)}};
jspb.BinaryWriter.prototype.writeRepeatedGroup=function(a,b,c){if(null!=b)for(var d=0;d<b.length;d++)this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.START_GROUP),c(b[d],this),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.END_GROUP)};jspb.BinaryWriter.prototype.writeRepeatedFixedHash64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFixedHash64(a,b[c])};
jspb.BinaryWriter.prototype.writeRepeatedVarintHash64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeVarintHash64(a,b[c])};jspb.BinaryWriter.prototype.writePackedUnsignedVarint32_=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeUnsignedVarint32(b[d]);this.endDelimited_(c)}};
jspb.BinaryWriter.prototype.writePackedSignedVarint32_=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeSignedVarint32(b[d]);this.endDelimited_(c)}};jspb.BinaryWriter.prototype.writePackedUnsignedVarint64_=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeUnsignedVarint64(b[d]);this.endDelimited_(c)}};
jspb.BinaryWriter.prototype.writePackedSignedVarint64_=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeSignedVarint64(b[d]);this.endDelimited_(c)}};jspb.BinaryWriter.prototype.writePackedZigzag32_=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeZigzagVarint32(b[d]);this.endDelimited_(c)}};
jspb.BinaryWriter.prototype.writePackedZigzag64_=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeZigzagVarint64(b[d]);this.endDelimited_(c)}};jspb.BinaryWriter.prototype.writePackedInt32=jspb.BinaryWriter.prototype.writePackedSignedVarint32_;jspb.BinaryWriter.prototype.writePackedInt32String=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeSignedVarint32(parseInt(b[d],10));this.endDelimited_(c)}};
jspb.BinaryWriter.prototype.writePackedInt64=jspb.BinaryWriter.prototype.writePackedSignedVarint64_;jspb.BinaryWriter.prototype.writePackedInt64String=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++){var e=jspb.arith.Int64.fromString(b[d]);this.encoder_.writeSplitVarint64(e.lo,e.hi)}this.endDelimited_(c)}};jspb.BinaryWriter.prototype.writePackedUint32=jspb.BinaryWriter.prototype.writePackedUnsignedVarint32_;
jspb.BinaryWriter.prototype.writePackedUint32String=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeUnsignedVarint32(parseInt(b[d],10));this.endDelimited_(c)}};jspb.BinaryWriter.prototype.writePackedUint64=jspb.BinaryWriter.prototype.writePackedUnsignedVarint64_;
jspb.BinaryWriter.prototype.writePackedUint64String=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++){var e=jspb.arith.UInt64.fromString(b[d]);this.encoder_.writeSplitVarint64(e.lo,e.hi)}this.endDelimited_(c)}};jspb.BinaryWriter.prototype.writePackedSint32=jspb.BinaryWriter.prototype.writePackedZigzag32_;jspb.BinaryWriter.prototype.writePackedSint64=jspb.BinaryWriter.prototype.writePackedZigzag64_;
jspb.BinaryWriter.prototype.writePackedFixed32=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(4*b.length);for(var c=0;c<b.length;c++)this.encoder_.writeUint32(b[c])}};jspb.BinaryWriter.prototype.writePackedFixed64=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(8*b.length);for(var c=0;c<b.length;c++)this.encoder_.writeUint64(b[c])}};
jspb.BinaryWriter.prototype.writePackedSfixed32=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(4*b.length);for(var c=0;c<b.length;c++)this.encoder_.writeInt32(b[c])}};jspb.BinaryWriter.prototype.writePackedSfixed64=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(8*b.length);for(var c=0;c<b.length;c++)this.encoder_.writeInt64(b[c])}};
jspb.BinaryWriter.prototype.writePackedFloat=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(4*b.length);for(var c=0;c<b.length;c++)this.encoder_.writeFloat(b[c])}};jspb.BinaryWriter.prototype.writePackedDouble=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(8*b.length);for(var c=0;c<b.length;c++)this.encoder_.writeDouble(b[c])}};
jspb.BinaryWriter.prototype.writePackedBool=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(b.length);for(var c=0;c<b.length;c++)this.encoder_.writeBool(b[c])}};jspb.BinaryWriter.prototype.writePackedEnum=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeEnum(b[d]);this.endDelimited_(c)}};
jspb.BinaryWriter.prototype.writePackedFixedHash64=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(8*b.length);for(var c=0;c<b.length;c++)this.encoder_.writeFixedHash64(b[c])}};jspb.BinaryWriter.prototype.writePackedVarintHash64=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeVarintHash64(b[d]);this.endDelimited_(c)}};exports.Map=jspb.Map;exports.Message=jspb.Message;exports.BinaryReader=jspb.BinaryReader;exports.BinaryWriter=jspb.BinaryWriter;exports.ExtensionFieldInfo=jspb.ExtensionFieldInfo;exports.ExtensionFieldBinaryInfo=jspb.ExtensionFieldBinaryInfo;exports.exportSymbol=goog.exportSymbol;exports.inherits=goog.inherits;exports.object={extend:goog.object.extend};

},{}],3:[function(require,module,exports){
arguments[4][2][0].apply(exports,arguments)
},{"dup":2}],4:[function(require,module,exports){
var debug = false;


var handlers = null;


function connect(wsURL) {
  var result = new WebSocket(wsURL);
  result.binaryType = "arraybuffer"
  handlers = new Object();
  result.onmessage =
    function(event) {
      var buffer = new Uint8Array(event.data);
      var response = proto.RecordsAPI.Response.deserializeBinary(buffer);
      var id = response.getId();
      if (debug) {
        console.log("Response ID: " , id.getValue());
        console.log("  Chunk:     " , response.getChunkId());
        console.log("  Next chunk: ", response.getNextChunkId());
      }
      if (id in handlers) {
        var answer = handlers[id](response);
        if (answer.done)
          delete handlers[id];
        if (answer.notify != null)
          // NB: Pass control to the user-supplied function only after all the internal bookkeeping is complete.
          answer.notify(answer.value);
      } else {
        console.warn("Unexpected response: ", response);
      }
    }
  return result;
}


function disconnect(connection) {
  connection.close(1000, "normal termination");
}


function addHandler(id, f) {
  if (debug)
    console.log("Request ID: ", id.getValue());
  handlers[id] = f;
}


var version = 4;


var currentId = 0;


function nextId() {
  return optionalUInt32(++currentId);
}


function optionalInt32(x) {
  var result = new proto.RecordsAPI.OptionalInt32()
  result.setValue(x);
  return result;
}


function optionalUInt32(x) {
  var result = new proto.RecordsAPI.OptionalUInt32()
  result.setValue(x);
  return result;
}


function optionalString(x) {
  var result = new proto.RecordsAPI.OptionalString()
  result.setValue(x);
  return result;
}


function toVariable(v) {
  return {
           id    : v.getVarId()
         , name  : v.getVarName()
         , units : v.getUnits()
         , si    : v.getSiList()
         , scale : v.getScale()
         , type  : v.getType()
         };
}


function toModel(m) {
  return {
           id        : m.getModelId()
         , name      : m.getModelName()
         , uri       : m.getModelUri()
         , variables : m.getVariablesList().map(toVariable)
         };
}


function onResponse(response, handleError, handleModels, handleData, handleBookmarks) {
  if (handleError != null && response.hasError())
    return handleError(response.getError());
  else if (handleModels != null && response.hasModels())
    return handleModels(response.getChunkId(), response.getNextChunkId(), response.getModels());
  else if (handleData != null && response.hasData())
    return handleData(response.getChunkId(), response.getNextChunkId(), response.getData());
  else if (handleBookmarks != null && response.hasBookmarks())
    return handleBookmarks(response.getChunkId(), response.getNextChunkId(), response.getBookmarks());
  else {
    console.warn("Unhandled response: ", response);
    return {done : false, notify : handleError, value : null};
  }
}


function requestModelsMetadata(connection, modelId, notify, notifyError) {
  var request = new proto.RecordsAPI.Request();
  request.setVersion(version);
  request.setId(nextId());
  var m = new proto.RecordsAPI.RequestModelsMeta();
  if (modelId != null)
    m.setModelId(optionalString(modelId));
  request.setModelsMetadata(m);
  var result = {complete : false, models : []};
  var handleError =
    function(e) {
      console.warn("Error response: ", e);
      result.complete = false;
      return {done : true, notify : notifyError, value : e};
    };
  var handleModels =
    function(c, nc, ms) {
      result.models.push.apply(result.models, ms.getModelsList().map(toModel));
      result.complete = nc < 1;
      return {done : result.complete, notify : notify, value : result};
    };
  addHandler(request.getId(), response => onResponse(response, notifyError != null ? handleError : null, handleModels, null, null));
  connection.send(request.serializeBinary());
  return result;
}


function fromValue(v) {
  if (v.hasRealValue())
    return v.getRealValue();
  else if (v.hasIntegerValue())
    return v.getIntegerValue();
  else if (v.hasStringValue())
    return v.getStringValue();
  else
    return null;
}


function fromRecord(r) {
  var values = new Object();
  r.getVariablesList().forEach(vv => values[vv.getVarId()] = fromValue(vv.getValue()));
  return {
           id     : r.getRecordId()
         , values : values
         };
}


function fromRecordList(rl) {
  return rl.getRecordsList().map(fromRecord);
}


function fromRecordTable(rt) {
  var vids = rt.getVarIdsList();
  var nv = vids.length;
  var rids = rt.getRecIdsList();
  var nr = rids.length;
  var vals = null;
  if (rt.hasReals())
    vals = rt.getReals().getValuesList();
  else if (rt.hasIntegers())
    vals = rt.getIntegers().getValuesList();
  else if (rt.hasStrings())
    vals = rt.getStrings().getValuesList();
  else
    vals = Array(nv * nr);
  var rows = [];
  for (var i = 0; i < nr; ++i) {
    var obj = new Object();
    for (var j = 0; j < nv; ++j)
      obj[vids[j]] = vals[i * nv + j];
    rows.push({id : rids[i], values : obj});
  }
  return rows;
}


function fromRecordData(rd) {
  if (rd.hasList())
    return fromRecordList(rd.getList());
  else if (rd.hasTable())
    return fromRecordTable(rd.getTable());
  else
    console.error("Invalid record data: ", rd);
}


function requestRecordsData(connection, modelId, maxRecords, variableIds, bookmarkId, notify, notifyError) {
  var request = new proto.RecordsAPI.Request();
  request.setVersion(version);
  request.setId(nextId());
  var d = new proto.RecordsAPI.RequestRecordsData();
  d.setModelId(modelId);
  if (maxRecords != null)
    d.setMaxRecords(maxRecords);
  if (variableIds != null)
    d.setVariableIdsList(variableIds);
  if (bookmarkId != null)
    d.setBookmarkId(bookmarkId);
  request.setRecordsData(d);
  var result = {complete : false, data : []};
  var handleError =
    function(e) {
      console.warn("Error response: ", e);
      result.complete = false;
      return {done : true, notify : notifyError, value : e};
    };
  var handleData =
    function(c, nc, rd) {
      result.data.push.apply(result.data, fromRecordData(rd));
      result.complete = nc < 1;
      return {done : result.complete, notify : notify, value : result};
    };
  addHandler(request.getId(), response => onResponse(response, notifyError != null ? handleError : null, null, handleData, null));
  connection.send(request.serializeBinary());
  return result;
}


function fromInterval(i) {
  var result = new Object();
  result.first = i.getFirstRecord();
  result.last = i.getLastRecord();
  return result;
}


function fromBookmark(b) {
  var result =  {
                  id   : b.getBookmarkId()
                , name : b.getBookmarkName()
                };
  if (b.hasInterval())
    result.interval = fromInterval(b.getInterval());
  else if (b.hasSet())
    result.set = b.getSet().getRecordIdsList();
  return result;
}


function fromBookmarks(bs) {
  return bs.getBookmarkMetasList().map(fromBookmark);
}


function requestBookmarkMeta(connection, modelId, bookmarkId, notify, notifyError) {
  var request = new proto.RecordsAPI.Request();
  request.setVersion(version);
  request.setId(nextId());
  var b = new proto.RecordsAPI.RequestBookmarkMeta();
  b.setModelId(modelId);
  if (bookmarkId != null)
    b.setBookmarkId(string(bookmarkId));
  request.setBookmarkMeta(b);
  var result = {complete : false, bookmarks : []};
  var handleError =
    function(e) {
      console.warn("Error response: ", e);
      result.complete = false;
      return {done : true, notify : notifyError, value : e};
    };
  var handleBookmarks =
    function (c, nc, bs) {
      result.bookmarks.push.apply(result.bookmarks, fromBookmarks(bs));
      result.complete = nc < 1;
      return {done : result.complete, notify : notify, value : result};
    };
  addHandler(request.getId(), response => onResponse(response, notifyError != null ? handleError : null, null, null, handleBookmarks));
  connection.send(request.serializeBinary());
  return result;
}


function requestSaveBookmarkInterval(connection, modelId, name, firstRecord, lastRecord, notify, notifyError) {
  var i = new proto.RecordsAPI.BookmarkIntervalContent();
  i.setFirstRecord(firstRecord);
  i.setLastRecord(lastRecord);
  return requestSaveBookmark(connection, modelId, name, b => {b.setInterval(i); return b;}, notify, notifyError);
}


function requestSaveBookmarkSet(connection, modelId, name, records, notify, notifyError) {
  var s = new proto.RecordsAPI.BookmarkSetContent();
  s.setRecordIdsList(records != null ? records : []);
  return requestSaveBookmark(connection, modelId, name, b => {b.setSet(s); return b}, notify, notifyError);
}


function requestSaveBookmark(connection, modelId, name, f, notify, notifyError) {
  var request = new proto.RecordsAPI.Request();
  request.setVersion(version);
  request.setId(nextId());
  var s = new proto.RecordsAPI.RequestSaveBookmark();
  s.setModelId(modelId);
  var b = new proto.RecordsAPI.BookmarkMeta();
  b.setBookmarkName(name);
  s.setNewBookmark(f(b));
  request.setSaveBookmark(s);
  var result = {complete : false, bookmark : null};
  var handleError =
    function(e) {
      console.warn("Error response: ", e);
      result.complete = false;
      return {done : true, notify : notifyError, value : e};
    };
  var handleBookmark =
    function(c, nc, bs) {
      result.bookmark = fromBookmark(bs.getBookmarkMetasList()[0]);
      result.complete = nc < 1;
      return {done : true, notify : notify, value : result};
    };
  addHandler(request.getId(), response => onResponse(response, notifyError != null ? handleError : null, null, null, handleBookmark));
  connection.send(request.serializeBinary());
  return result;
}


module.exports = {
                   connect                    : connect
                 , disconnect                 : disconnect
                 , requestModelsMetadata      : requestModelsMetadata
                 , requestRecordsData         : requestRecordsData
                 , requestBookmarkMeta        : requestBookmarkMeta
                 , requestSaveBookmarkInterval: requestSaveBookmarkInterval
                 , requestSaveBookmarkSet     : requestSaveBookmarkSet
                 };

},{}],5:[function(require,module,exports){
(function (global){
var aesd = require('./aesd-records.js');

global.window.aesd = aesd;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./aesd-records.js":4}]},{},[5,4,1,2]);
