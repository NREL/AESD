/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.RecordsAPI.BookmarkIntervalContent', null, global);
goog.exportSymbol('proto.RecordsAPI.BookmarkMeta', null, global);
goog.exportSymbol('proto.RecordsAPI.BookmarkMetaList', null, global);
goog.exportSymbol('proto.RecordsAPI.BookmarkSetContent', null, global);
goog.exportSymbol('proto.RecordsAPI.DomainMeta', null, global);
goog.exportSymbol('proto.RecordsAPI.DoubleList', null, global);
goog.exportSymbol('proto.RecordsAPI.FilterExpression', null, global);
goog.exportSymbol('proto.RecordsAPI.FilterIntersection', null, global);
goog.exportSymbol('proto.RecordsAPI.FilterNot', null, global);
goog.exportSymbol('proto.RecordsAPI.FilterUnion', null, global);
goog.exportSymbol('proto.RecordsAPI.IntegerList', null, global);
goog.exportSymbol('proto.RecordsAPI.ModelMeta', null, global);
goog.exportSymbol('proto.RecordsAPI.ModelMetaList', null, global);
goog.exportSymbol('proto.RecordsAPI.OptionalInt32', null, global);
goog.exportSymbol('proto.RecordsAPI.OptionalString', null, global);
goog.exportSymbol('proto.RecordsAPI.OptionalUInt32', null, global);
goog.exportSymbol('proto.RecordsAPI.Record', null, global);
goog.exportSymbol('proto.RecordsAPI.RecordData', null, global);
goog.exportSymbol('proto.RecordsAPI.RecordList', null, global);
goog.exportSymbol('proto.RecordsAPI.RecordTable', null, global);
goog.exportSymbol('proto.RecordsAPI.Request', null, global);
goog.exportSymbol('proto.RecordsAPI.RequestBookmarkMeta', null, global);
goog.exportSymbol('proto.RecordsAPI.RequestCancel', null, global);
goog.exportSymbol('proto.RecordsAPI.RequestModelsMeta', null, global);
goog.exportSymbol('proto.RecordsAPI.RequestRecordsData', null, global);
goog.exportSymbol('proto.RecordsAPI.RequestSaveBookmark', null, global);
goog.exportSymbol('proto.RecordsAPI.RequestWork', null, global);
goog.exportSymbol('proto.RecordsAPI.Response', null, global);
goog.exportSymbol('proto.RecordsAPI.StringList', null, global);
goog.exportSymbol('proto.RecordsAPI.Value', null, global);
goog.exportSymbol('proto.RecordsAPI.VarInterval', null, global);
goog.exportSymbol('proto.RecordsAPI.VarMeta', null, global);
goog.exportSymbol('proto.RecordsAPI.VarMeta.VariableType', null, global);
goog.exportSymbol('proto.RecordsAPI.VarSet', null, global);
goog.exportSymbol('proto.RecordsAPI.VarValue', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.OptionalInt32 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RecordsAPI.OptionalInt32, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.OptionalInt32.displayName = 'proto.RecordsAPI.OptionalInt32';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.OptionalInt32.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.OptionalInt32.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.OptionalInt32} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.OptionalInt32.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: msg.getValue()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.OptionalInt32}
 */
proto.RecordsAPI.OptionalInt32.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.OptionalInt32;
  return proto.RecordsAPI.OptionalInt32.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.OptionalInt32} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.OptionalInt32}
 */
proto.RecordsAPI.OptionalInt32.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.OptionalInt32} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.OptionalInt32.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.OptionalInt32.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.OptionalInt32.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getValue();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.OptionalInt32} The clone.
 */
proto.RecordsAPI.OptionalInt32.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.OptionalInt32} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 value = 1;
 * @return {number}
 */
proto.RecordsAPI.OptionalInt32.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.RecordsAPI.OptionalInt32.prototype.setValue = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.OptionalUInt32 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RecordsAPI.OptionalUInt32, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.OptionalUInt32.displayName = 'proto.RecordsAPI.OptionalUInt32';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.OptionalUInt32.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.OptionalUInt32.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.OptionalUInt32} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.OptionalUInt32.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: msg.getValue()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.OptionalUInt32}
 */
proto.RecordsAPI.OptionalUInt32.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.OptionalUInt32;
  return proto.RecordsAPI.OptionalUInt32.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.OptionalUInt32} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.OptionalUInt32}
 */
proto.RecordsAPI.OptionalUInt32.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.OptionalUInt32} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.OptionalUInt32.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.OptionalUInt32.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.OptionalUInt32.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getValue();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.OptionalUInt32} The clone.
 */
proto.RecordsAPI.OptionalUInt32.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.OptionalUInt32} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional uint32 value = 1;
 * @return {number}
 */
proto.RecordsAPI.OptionalUInt32.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.RecordsAPI.OptionalUInt32.prototype.setValue = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.OptionalString = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RecordsAPI.OptionalString, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.OptionalString.displayName = 'proto.RecordsAPI.OptionalString';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.OptionalString.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.OptionalString.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.OptionalString} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.OptionalString.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: msg.getValue()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.OptionalString}
 */
proto.RecordsAPI.OptionalString.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.OptionalString;
  return proto.RecordsAPI.OptionalString.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.OptionalString} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.OptionalString}
 */
proto.RecordsAPI.OptionalString.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.OptionalString} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.OptionalString.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.OptionalString.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.OptionalString.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.OptionalString} The clone.
 */
proto.RecordsAPI.OptionalString.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.OptionalString} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.RecordsAPI.OptionalString.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.RecordsAPI.OptionalString.prototype.setValue = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.Value = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.RecordsAPI.Value.oneofGroups_);
};
goog.inherits(proto.RecordsAPI.Value, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.Value.displayName = 'proto.RecordsAPI.Value';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.RecordsAPI.Value.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.RecordsAPI.Value.ValueCase = {
  VALUE_NOT_SET: 0,
  REAL_VALUE: 1,
  INTEGER_VALUE: 2,
  STRING_VALUE: 3
};

/**
 * @return {proto.RecordsAPI.Value.ValueCase}
 */
proto.RecordsAPI.Value.prototype.getValueCase = function() {
  return /** @type {proto.RecordsAPI.Value.ValueCase} */(jspb.Message.computeOneofCase(this, proto.RecordsAPI.Value.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.Value.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.Value.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.Value} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.Value.toObject = function(includeInstance, msg) {
  var f, obj = {
    realValue: jspb.Message.getOptionalFloatingPointField(msg, 1),
    integerValue: jspb.Message.getField(msg, 2),
    stringValue: jspb.Message.getField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.Value}
 */
proto.RecordsAPI.Value.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.Value;
  return proto.RecordsAPI.Value.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.Value} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.Value}
 */
proto.RecordsAPI.Value.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRealValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIntegerValue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.Value} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.Value.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.Value.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.Value.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = jspb.Message.getField(this, 1);
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = jspb.Message.getField(this, 2);
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = jspb.Message.getField(this, 3);
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.Value} The clone.
 */
proto.RecordsAPI.Value.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.Value} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional double real_value = 1;
 * @return {number}
 */
proto.RecordsAPI.Value.prototype.getRealValue = function() {
  return /** @type {number} */ (!this.hasRealValue() ? 0.0 : +jspb.Message.getField(this, 1));
};


/** @param {number?|undefined} value  */
proto.RecordsAPI.Value.prototype.setRealValue = function(value) {
  jspb.Message.setOneofField(this, 1, proto.RecordsAPI.Value.oneofGroups_[0], value);
};


proto.RecordsAPI.Value.prototype.clearRealValue = function() {
  jspb.Message.setOneofField(this, 1, proto.RecordsAPI.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Value.prototype.hasRealValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 integer_value = 2;
 * @return {number}
 */
proto.RecordsAPI.Value.prototype.getIntegerValue = function() {
  return /** @type {number} */ (!this.hasIntegerValue() ? 0 : jspb.Message.getField(this, 2));
};


/** @param {number?|undefined} value  */
proto.RecordsAPI.Value.prototype.setIntegerValue = function(value) {
  jspb.Message.setOneofField(this, 2, proto.RecordsAPI.Value.oneofGroups_[0], value);
};


proto.RecordsAPI.Value.prototype.clearIntegerValue = function() {
  jspb.Message.setOneofField(this, 2, proto.RecordsAPI.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Value.prototype.hasIntegerValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string string_value = 3;
 * @return {string}
 */
proto.RecordsAPI.Value.prototype.getStringValue = function() {
  return /** @type {string} */ (!this.hasStringValue() ? "" : jspb.Message.getField(this, 3));
};


/** @param {string?|undefined} value  */
proto.RecordsAPI.Value.prototype.setStringValue = function(value) {
  jspb.Message.setOneofField(this, 3, proto.RecordsAPI.Value.oneofGroups_[0], value);
};


proto.RecordsAPI.Value.prototype.clearStringValue = function() {
  jspb.Message.setOneofField(this, 3, proto.RecordsAPI.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Value.prototype.hasStringValue = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.DoubleList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.DoubleList.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.DoubleList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.DoubleList.displayName = 'proto.RecordsAPI.DoubleList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.DoubleList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.DoubleList.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.DoubleList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.DoubleList} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.DoubleList.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.getRepeatedFloatingPointField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.DoubleList}
 */
proto.RecordsAPI.DoubleList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.DoubleList;
  return proto.RecordsAPI.DoubleList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.DoubleList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.DoubleList}
 */
proto.RecordsAPI.DoubleList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array.<number>} */ (reader.readPackedDouble());
      msg.setValuesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.DoubleList} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.DoubleList.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.DoubleList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.DoubleList.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getValuesList();
  if (f.length > 0) {
    writer.writePackedDouble(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.DoubleList} The clone.
 */
proto.RecordsAPI.DoubleList.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.DoubleList} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated double values = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.RecordsAPI.DoubleList.prototype.getValuesList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/** @param {Array.<number>} value  */
proto.RecordsAPI.DoubleList.prototype.setValuesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


proto.RecordsAPI.DoubleList.prototype.clearValuesList = function() {
  jspb.Message.setField(this, 1, []);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.IntegerList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.IntegerList.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.IntegerList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.IntegerList.displayName = 'proto.RecordsAPI.IntegerList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.IntegerList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.IntegerList.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.IntegerList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.IntegerList} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.IntegerList.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.getField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.IntegerList}
 */
proto.RecordsAPI.IntegerList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.IntegerList;
  return proto.RecordsAPI.IntegerList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.IntegerList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.IntegerList}
 */
proto.RecordsAPI.IntegerList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array.<number>} */ (reader.readPackedSint64());
      msg.setValuesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.IntegerList} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.IntegerList.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.IntegerList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.IntegerList.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getValuesList();
  if (f.length > 0) {
    writer.writePackedSint64(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.IntegerList} The clone.
 */
proto.RecordsAPI.IntegerList.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.IntegerList} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated sint64 values = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.RecordsAPI.IntegerList.prototype.getValuesList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 1));
};


/** @param {Array.<number>} value  */
proto.RecordsAPI.IntegerList.prototype.setValuesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


proto.RecordsAPI.IntegerList.prototype.clearValuesList = function() {
  jspb.Message.setField(this, 1, []);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.StringList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.StringList.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.StringList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.StringList.displayName = 'proto.RecordsAPI.StringList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.StringList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.StringList.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.StringList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.StringList} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.StringList.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.getField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.StringList}
 */
proto.RecordsAPI.StringList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.StringList;
  return proto.RecordsAPI.StringList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.StringList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.StringList}
 */
proto.RecordsAPI.StringList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.getValuesList().push(value);
      msg.setValuesList(msg.getValuesList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.StringList} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.StringList.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.StringList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.StringList.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.StringList} The clone.
 */
proto.RecordsAPI.StringList.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.StringList} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated string values = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.RecordsAPI.StringList.prototype.getValuesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 1));
};


/** @param {Array.<string>} value  */
proto.RecordsAPI.StringList.prototype.setValuesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


proto.RecordsAPI.StringList.prototype.clearValuesList = function() {
  jspb.Message.setField(this, 1, []);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.BookmarkIntervalContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RecordsAPI.BookmarkIntervalContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.BookmarkIntervalContent.displayName = 'proto.RecordsAPI.BookmarkIntervalContent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.BookmarkIntervalContent.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.BookmarkIntervalContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.BookmarkIntervalContent} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.BookmarkIntervalContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    firstRecord: msg.getFirstRecord(),
    lastRecord: msg.getLastRecord()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.BookmarkIntervalContent}
 */
proto.RecordsAPI.BookmarkIntervalContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.BookmarkIntervalContent;
  return proto.RecordsAPI.BookmarkIntervalContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.BookmarkIntervalContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.BookmarkIntervalContent}
 */
proto.RecordsAPI.BookmarkIntervalContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFirstRecord(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastRecord(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.BookmarkIntervalContent} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.BookmarkIntervalContent.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.BookmarkIntervalContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.BookmarkIntervalContent.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getFirstRecord();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getLastRecord();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.BookmarkIntervalContent} The clone.
 */
proto.RecordsAPI.BookmarkIntervalContent.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.BookmarkIntervalContent} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 first_record = 1;
 * @return {number}
 */
proto.RecordsAPI.BookmarkIntervalContent.prototype.getFirstRecord = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.RecordsAPI.BookmarkIntervalContent.prototype.setFirstRecord = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 last_record = 2;
 * @return {number}
 */
proto.RecordsAPI.BookmarkIntervalContent.prototype.getLastRecord = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.RecordsAPI.BookmarkIntervalContent.prototype.setLastRecord = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.BookmarkSetContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.BookmarkSetContent.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.BookmarkSetContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.BookmarkSetContent.displayName = 'proto.RecordsAPI.BookmarkSetContent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.BookmarkSetContent.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.BookmarkSetContent.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.BookmarkSetContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.BookmarkSetContent} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.BookmarkSetContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordIdsList: jspb.Message.getField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.BookmarkSetContent}
 */
proto.RecordsAPI.BookmarkSetContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.BookmarkSetContent;
  return proto.RecordsAPI.BookmarkSetContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.BookmarkSetContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.BookmarkSetContent}
 */
proto.RecordsAPI.BookmarkSetContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt64());
      msg.setRecordIdsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.BookmarkSetContent} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.BookmarkSetContent.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.BookmarkSetContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.BookmarkSetContent.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRecordIdsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.BookmarkSetContent} The clone.
 */
proto.RecordsAPI.BookmarkSetContent.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.BookmarkSetContent} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated int64 record_ids = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.RecordsAPI.BookmarkSetContent.prototype.getRecordIdsList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 1));
};


/** @param {Array.<number>} value  */
proto.RecordsAPI.BookmarkSetContent.prototype.setRecordIdsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


proto.RecordsAPI.BookmarkSetContent.prototype.clearRecordIdsList = function() {
  jspb.Message.setField(this, 1, []);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.BookmarkMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.RecordsAPI.BookmarkMeta.oneofGroups_);
};
goog.inherits(proto.RecordsAPI.BookmarkMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.BookmarkMeta.displayName = 'proto.RecordsAPI.BookmarkMeta';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.RecordsAPI.BookmarkMeta.oneofGroups_ = [[3,4,5]];

/**
 * @enum {number}
 */
proto.RecordsAPI.BookmarkMeta.ContentCase = {
  CONTENT_NOT_SET: 0,
  INTERVAL: 3,
  SET: 4,
  FILTER: 5
};

/**
 * @return {proto.RecordsAPI.BookmarkMeta.ContentCase}
 */
proto.RecordsAPI.BookmarkMeta.prototype.getContentCase = function() {
  return /** @type {proto.RecordsAPI.BookmarkMeta.ContentCase} */(jspb.Message.computeOneofCase(this, proto.RecordsAPI.BookmarkMeta.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.BookmarkMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.BookmarkMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.BookmarkMeta} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.BookmarkMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookmarkId: msg.getBookmarkId(),
    bookmarkName: msg.getBookmarkName(),
    interval: (f = msg.getInterval()) && proto.RecordsAPI.BookmarkIntervalContent.toObject(includeInstance, f),
    set: (f = msg.getSet()) && proto.RecordsAPI.BookmarkSetContent.toObject(includeInstance, f),
    filter: (f = msg.getFilter()) && proto.RecordsAPI.FilterExpression.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.BookmarkMeta}
 */
proto.RecordsAPI.BookmarkMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.BookmarkMeta;
  return proto.RecordsAPI.BookmarkMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.BookmarkMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.BookmarkMeta}
 */
proto.RecordsAPI.BookmarkMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookmarkId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookmarkName(value);
      break;
    case 3:
      var value = new proto.RecordsAPI.BookmarkIntervalContent;
      reader.readMessage(value,proto.RecordsAPI.BookmarkIntervalContent.deserializeBinaryFromReader);
      msg.setInterval(value);
      break;
    case 4:
      var value = new proto.RecordsAPI.BookmarkSetContent;
      reader.readMessage(value,proto.RecordsAPI.BookmarkSetContent.deserializeBinaryFromReader);
      msg.setSet(value);
      break;
    case 5:
      var value = new proto.RecordsAPI.FilterExpression;
      reader.readMessage(value,proto.RecordsAPI.FilterExpression.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.BookmarkMeta} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.BookmarkMeta.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.BookmarkMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.BookmarkMeta.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getBookmarkId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getBookmarkName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getInterval();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.RecordsAPI.BookmarkIntervalContent.serializeBinaryToWriter
    );
  }
  f = this.getSet();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.RecordsAPI.BookmarkSetContent.serializeBinaryToWriter
    );
  }
  f = this.getFilter();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.RecordsAPI.FilterExpression.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.BookmarkMeta} The clone.
 */
proto.RecordsAPI.BookmarkMeta.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.BookmarkMeta} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string bookmark_id = 1;
 * @return {string}
 */
proto.RecordsAPI.BookmarkMeta.prototype.getBookmarkId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.RecordsAPI.BookmarkMeta.prototype.setBookmarkId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string bookmark_name = 2;
 * @return {string}
 */
proto.RecordsAPI.BookmarkMeta.prototype.getBookmarkName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.RecordsAPI.BookmarkMeta.prototype.setBookmarkName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional BookmarkIntervalContent interval = 3;
 * @return {proto.RecordsAPI.BookmarkIntervalContent}
 */
proto.RecordsAPI.BookmarkMeta.prototype.getInterval = function() {
  return /** @type{proto.RecordsAPI.BookmarkIntervalContent} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.BookmarkIntervalContent, 3));
};


/** @param {proto.RecordsAPI.BookmarkIntervalContent|undefined} value  */
proto.RecordsAPI.BookmarkMeta.prototype.setInterval = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.RecordsAPI.BookmarkMeta.oneofGroups_[0], value);
};


proto.RecordsAPI.BookmarkMeta.prototype.clearInterval = function() {
  this.setInterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.BookmarkMeta.prototype.hasInterval = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional BookmarkSetContent set = 4;
 * @return {proto.RecordsAPI.BookmarkSetContent}
 */
proto.RecordsAPI.BookmarkMeta.prototype.getSet = function() {
  return /** @type{proto.RecordsAPI.BookmarkSetContent} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.BookmarkSetContent, 4));
};


/** @param {proto.RecordsAPI.BookmarkSetContent|undefined} value  */
proto.RecordsAPI.BookmarkMeta.prototype.setSet = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.RecordsAPI.BookmarkMeta.oneofGroups_[0], value);
};


proto.RecordsAPI.BookmarkMeta.prototype.clearSet = function() {
  this.setSet(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.BookmarkMeta.prototype.hasSet = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional FilterExpression filter = 5;
 * @return {proto.RecordsAPI.FilterExpression}
 */
proto.RecordsAPI.BookmarkMeta.prototype.getFilter = function() {
  return /** @type{proto.RecordsAPI.FilterExpression} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.FilterExpression, 5));
};


/** @param {proto.RecordsAPI.FilterExpression|undefined} value  */
proto.RecordsAPI.BookmarkMeta.prototype.setFilter = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.RecordsAPI.BookmarkMeta.oneofGroups_[0], value);
};


proto.RecordsAPI.BookmarkMeta.prototype.clearFilter = function() {
  this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.BookmarkMeta.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.BookmarkMetaList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.BookmarkMetaList.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.BookmarkMetaList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.BookmarkMetaList.displayName = 'proto.RecordsAPI.BookmarkMetaList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.BookmarkMetaList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.BookmarkMetaList.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.BookmarkMetaList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.BookmarkMetaList} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.BookmarkMetaList.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookmarkMetasList: jspb.Message.toObjectList(msg.getBookmarkMetasList(),
    proto.RecordsAPI.BookmarkMeta.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.BookmarkMetaList}
 */
proto.RecordsAPI.BookmarkMetaList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.BookmarkMetaList;
  return proto.RecordsAPI.BookmarkMetaList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.BookmarkMetaList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.BookmarkMetaList}
 */
proto.RecordsAPI.BookmarkMetaList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.BookmarkMeta;
      reader.readMessage(value,proto.RecordsAPI.BookmarkMeta.deserializeBinaryFromReader);
      msg.getBookmarkMetasList().push(value);
      msg.setBookmarkMetasList(msg.getBookmarkMetasList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.BookmarkMetaList} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.BookmarkMetaList.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.BookmarkMetaList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.BookmarkMetaList.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getBookmarkMetasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.RecordsAPI.BookmarkMeta.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.BookmarkMetaList} The clone.
 */
proto.RecordsAPI.BookmarkMetaList.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.BookmarkMetaList} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated BookmarkMeta bookmark_metas = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.RecordsAPI.BookmarkMeta>}
 */
proto.RecordsAPI.BookmarkMetaList.prototype.getBookmarkMetasList = function() {
  return /** @type{!Array.<!proto.RecordsAPI.BookmarkMeta>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RecordsAPI.BookmarkMeta, 1));
};


/** @param {Array.<!proto.RecordsAPI.BookmarkMeta>} value  */
proto.RecordsAPI.BookmarkMetaList.prototype.setBookmarkMetasList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.RecordsAPI.BookmarkMetaList.prototype.clearBookmarkMetasList = function() {
  this.setBookmarkMetasList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.RequestBookmarkMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RecordsAPI.RequestBookmarkMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.RequestBookmarkMeta.displayName = 'proto.RecordsAPI.RequestBookmarkMeta';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.RequestBookmarkMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.RequestBookmarkMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.RequestBookmarkMeta} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.RequestBookmarkMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelId: msg.getModelId(),
    bookmarkId: (f = msg.getBookmarkId()) && proto.RecordsAPI.OptionalString.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.RequestBookmarkMeta}
 */
proto.RecordsAPI.RequestBookmarkMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.RequestBookmarkMeta;
  return proto.RecordsAPI.RequestBookmarkMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.RequestBookmarkMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.RequestBookmarkMeta}
 */
proto.RecordsAPI.RequestBookmarkMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelId(value);
      break;
    case 2:
      var value = new proto.RecordsAPI.OptionalString;
      reader.readMessage(value,proto.RecordsAPI.OptionalString.deserializeBinaryFromReader);
      msg.setBookmarkId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.RequestBookmarkMeta} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RequestBookmarkMeta.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.RequestBookmarkMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RequestBookmarkMeta.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getModelId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getBookmarkId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.RecordsAPI.OptionalString.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.RequestBookmarkMeta} The clone.
 */
proto.RecordsAPI.RequestBookmarkMeta.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.RequestBookmarkMeta} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string model_id = 1;
 * @return {string}
 */
proto.RecordsAPI.RequestBookmarkMeta.prototype.getModelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.RecordsAPI.RequestBookmarkMeta.prototype.setModelId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional OptionalString bookmark_id = 2;
 * @return {proto.RecordsAPI.OptionalString}
 */
proto.RecordsAPI.RequestBookmarkMeta.prototype.getBookmarkId = function() {
  return /** @type{proto.RecordsAPI.OptionalString} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.OptionalString, 2));
};


/** @param {proto.RecordsAPI.OptionalString|undefined} value  */
proto.RecordsAPI.RequestBookmarkMeta.prototype.setBookmarkId = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.RecordsAPI.RequestBookmarkMeta.prototype.clearBookmarkId = function() {
  this.setBookmarkId(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.RequestBookmarkMeta.prototype.hasBookmarkId = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.RequestSaveBookmark = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RecordsAPI.RequestSaveBookmark, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.RequestSaveBookmark.displayName = 'proto.RecordsAPI.RequestSaveBookmark';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.RequestSaveBookmark.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.RequestSaveBookmark.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.RequestSaveBookmark} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.RequestSaveBookmark.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelId: msg.getModelId(),
    newBookmark: (f = msg.getNewBookmark()) && proto.RecordsAPI.BookmarkMeta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.RequestSaveBookmark}
 */
proto.RecordsAPI.RequestSaveBookmark.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.RequestSaveBookmark;
  return proto.RecordsAPI.RequestSaveBookmark.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.RequestSaveBookmark} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.RequestSaveBookmark}
 */
proto.RecordsAPI.RequestSaveBookmark.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelId(value);
      break;
    case 2:
      var value = new proto.RecordsAPI.BookmarkMeta;
      reader.readMessage(value,proto.RecordsAPI.BookmarkMeta.deserializeBinaryFromReader);
      msg.setNewBookmark(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.RequestSaveBookmark} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RequestSaveBookmark.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.RequestSaveBookmark.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RequestSaveBookmark.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getModelId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getNewBookmark();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.RecordsAPI.BookmarkMeta.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.RequestSaveBookmark} The clone.
 */
proto.RecordsAPI.RequestSaveBookmark.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.RequestSaveBookmark} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string model_id = 1;
 * @return {string}
 */
proto.RecordsAPI.RequestSaveBookmark.prototype.getModelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.RecordsAPI.RequestSaveBookmark.prototype.setModelId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional BookmarkMeta new_bookmark = 2;
 * @return {proto.RecordsAPI.BookmarkMeta}
 */
proto.RecordsAPI.RequestSaveBookmark.prototype.getNewBookmark = function() {
  return /** @type{proto.RecordsAPI.BookmarkMeta} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.BookmarkMeta, 2));
};


/** @param {proto.RecordsAPI.BookmarkMeta|undefined} value  */
proto.RecordsAPI.RequestSaveBookmark.prototype.setNewBookmark = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.RecordsAPI.RequestSaveBookmark.prototype.clearNewBookmark = function() {
  this.setNewBookmark(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.RequestSaveBookmark.prototype.hasNewBookmark = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.FilterExpression = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.RecordsAPI.FilterExpression.oneofGroups_);
};
goog.inherits(proto.RecordsAPI.FilterExpression, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.FilterExpression.displayName = 'proto.RecordsAPI.FilterExpression';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.RecordsAPI.FilterExpression.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.RecordsAPI.FilterExpression.ExpressionCase = {
  EXPRESSION_NOT_SET: 0,
  FILTER_NOT: 1,
  FILTER_UNION: 2,
  FILTER_INTERSECTION: 3,
  FILTER_DOMAIN: 4
};

/**
 * @return {proto.RecordsAPI.FilterExpression.ExpressionCase}
 */
proto.RecordsAPI.FilterExpression.prototype.getExpressionCase = function() {
  return /** @type {proto.RecordsAPI.FilterExpression.ExpressionCase} */(jspb.Message.computeOneofCase(this, proto.RecordsAPI.FilterExpression.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.FilterExpression.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.FilterExpression.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.FilterExpression} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.FilterExpression.toObject = function(includeInstance, msg) {
  var f, obj = {
    filterNot: (f = msg.getFilterNot()) && proto.RecordsAPI.FilterNot.toObject(includeInstance, f),
    filterUnion: (f = msg.getFilterUnion()) && proto.RecordsAPI.FilterUnion.toObject(includeInstance, f),
    filterIntersection: (f = msg.getFilterIntersection()) && proto.RecordsAPI.FilterIntersection.toObject(includeInstance, f),
    filterDomain: (f = msg.getFilterDomain()) && proto.RecordsAPI.DomainMeta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.FilterExpression}
 */
proto.RecordsAPI.FilterExpression.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.FilterExpression;
  return proto.RecordsAPI.FilterExpression.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.FilterExpression} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.FilterExpression}
 */
proto.RecordsAPI.FilterExpression.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.FilterNot;
      reader.readMessage(value,proto.RecordsAPI.FilterNot.deserializeBinaryFromReader);
      msg.setFilterNot(value);
      break;
    case 2:
      var value = new proto.RecordsAPI.FilterUnion;
      reader.readMessage(value,proto.RecordsAPI.FilterUnion.deserializeBinaryFromReader);
      msg.setFilterUnion(value);
      break;
    case 3:
      var value = new proto.RecordsAPI.FilterIntersection;
      reader.readMessage(value,proto.RecordsAPI.FilterIntersection.deserializeBinaryFromReader);
      msg.setFilterIntersection(value);
      break;
    case 4:
      var value = new proto.RecordsAPI.DomainMeta;
      reader.readMessage(value,proto.RecordsAPI.DomainMeta.deserializeBinaryFromReader);
      msg.setFilterDomain(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.FilterExpression} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.FilterExpression.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.FilterExpression.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.FilterExpression.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getFilterNot();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.RecordsAPI.FilterNot.serializeBinaryToWriter
    );
  }
  f = this.getFilterUnion();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.RecordsAPI.FilterUnion.serializeBinaryToWriter
    );
  }
  f = this.getFilterIntersection();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.RecordsAPI.FilterIntersection.serializeBinaryToWriter
    );
  }
  f = this.getFilterDomain();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.RecordsAPI.DomainMeta.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.FilterExpression} The clone.
 */
proto.RecordsAPI.FilterExpression.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.FilterExpression} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional FilterNot filter_not = 1;
 * @return {proto.RecordsAPI.FilterNot}
 */
proto.RecordsAPI.FilterExpression.prototype.getFilterNot = function() {
  return /** @type{proto.RecordsAPI.FilterNot} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.FilterNot, 1));
};


/** @param {proto.RecordsAPI.FilterNot|undefined} value  */
proto.RecordsAPI.FilterExpression.prototype.setFilterNot = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.RecordsAPI.FilterExpression.oneofGroups_[0], value);
};


proto.RecordsAPI.FilterExpression.prototype.clearFilterNot = function() {
  this.setFilterNot(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.FilterExpression.prototype.hasFilterNot = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FilterUnion filter_union = 2;
 * @return {proto.RecordsAPI.FilterUnion}
 */
proto.RecordsAPI.FilterExpression.prototype.getFilterUnion = function() {
  return /** @type{proto.RecordsAPI.FilterUnion} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.FilterUnion, 2));
};


/** @param {proto.RecordsAPI.FilterUnion|undefined} value  */
proto.RecordsAPI.FilterExpression.prototype.setFilterUnion = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.RecordsAPI.FilterExpression.oneofGroups_[0], value);
};


proto.RecordsAPI.FilterExpression.prototype.clearFilterUnion = function() {
  this.setFilterUnion(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.FilterExpression.prototype.hasFilterUnion = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional FilterIntersection filter_intersection = 3;
 * @return {proto.RecordsAPI.FilterIntersection}
 */
proto.RecordsAPI.FilterExpression.prototype.getFilterIntersection = function() {
  return /** @type{proto.RecordsAPI.FilterIntersection} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.FilterIntersection, 3));
};


/** @param {proto.RecordsAPI.FilterIntersection|undefined} value  */
proto.RecordsAPI.FilterExpression.prototype.setFilterIntersection = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.RecordsAPI.FilterExpression.oneofGroups_[0], value);
};


proto.RecordsAPI.FilterExpression.prototype.clearFilterIntersection = function() {
  this.setFilterIntersection(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.FilterExpression.prototype.hasFilterIntersection = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DomainMeta filter_domain = 4;
 * @return {proto.RecordsAPI.DomainMeta}
 */
proto.RecordsAPI.FilterExpression.prototype.getFilterDomain = function() {
  return /** @type{proto.RecordsAPI.DomainMeta} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.DomainMeta, 4));
};


/** @param {proto.RecordsAPI.DomainMeta|undefined} value  */
proto.RecordsAPI.FilterExpression.prototype.setFilterDomain = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.RecordsAPI.FilterExpression.oneofGroups_[0], value);
};


proto.RecordsAPI.FilterExpression.prototype.clearFilterDomain = function() {
  this.setFilterDomain(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.FilterExpression.prototype.hasFilterDomain = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.FilterNot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RecordsAPI.FilterNot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.FilterNot.displayName = 'proto.RecordsAPI.FilterNot';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.FilterNot.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.FilterNot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.FilterNot} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.FilterNot.toObject = function(includeInstance, msg) {
  var f, obj = {
    filterExpression: (f = msg.getFilterExpression()) && proto.RecordsAPI.FilterExpression.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.FilterNot}
 */
proto.RecordsAPI.FilterNot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.FilterNot;
  return proto.RecordsAPI.FilterNot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.FilterNot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.FilterNot}
 */
proto.RecordsAPI.FilterNot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.FilterExpression;
      reader.readMessage(value,proto.RecordsAPI.FilterExpression.deserializeBinaryFromReader);
      msg.setFilterExpression(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.FilterNot} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.FilterNot.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.FilterNot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.FilterNot.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getFilterExpression();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.RecordsAPI.FilterExpression.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.FilterNot} The clone.
 */
proto.RecordsAPI.FilterNot.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.FilterNot} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional FilterExpression filter_expression = 1;
 * @return {proto.RecordsAPI.FilterExpression}
 */
proto.RecordsAPI.FilterNot.prototype.getFilterExpression = function() {
  return /** @type{proto.RecordsAPI.FilterExpression} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.FilterExpression, 1));
};


/** @param {proto.RecordsAPI.FilterExpression|undefined} value  */
proto.RecordsAPI.FilterNot.prototype.setFilterExpression = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.RecordsAPI.FilterNot.prototype.clearFilterExpression = function() {
  this.setFilterExpression(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.FilterNot.prototype.hasFilterExpression = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.FilterUnion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.FilterUnion.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.FilterUnion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.FilterUnion.displayName = 'proto.RecordsAPI.FilterUnion';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.FilterUnion.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.FilterUnion.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.FilterUnion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.FilterUnion} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.FilterUnion.toObject = function(includeInstance, msg) {
  var f, obj = {
    filterExpressionsList: jspb.Message.toObjectList(msg.getFilterExpressionsList(),
    proto.RecordsAPI.FilterExpression.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.FilterUnion}
 */
proto.RecordsAPI.FilterUnion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.FilterUnion;
  return proto.RecordsAPI.FilterUnion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.FilterUnion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.FilterUnion}
 */
proto.RecordsAPI.FilterUnion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.FilterExpression;
      reader.readMessage(value,proto.RecordsAPI.FilterExpression.deserializeBinaryFromReader);
      msg.getFilterExpressionsList().push(value);
      msg.setFilterExpressionsList(msg.getFilterExpressionsList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.FilterUnion} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.FilterUnion.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.FilterUnion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.FilterUnion.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getFilterExpressionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.RecordsAPI.FilterExpression.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.FilterUnion} The clone.
 */
proto.RecordsAPI.FilterUnion.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.FilterUnion} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated FilterExpression filter_expressions = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.RecordsAPI.FilterExpression>}
 */
proto.RecordsAPI.FilterUnion.prototype.getFilterExpressionsList = function() {
  return /** @type{!Array.<!proto.RecordsAPI.FilterExpression>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RecordsAPI.FilterExpression, 1));
};


/** @param {Array.<!proto.RecordsAPI.FilterExpression>} value  */
proto.RecordsAPI.FilterUnion.prototype.setFilterExpressionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.RecordsAPI.FilterUnion.prototype.clearFilterExpressionsList = function() {
  this.setFilterExpressionsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.FilterIntersection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.FilterIntersection.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.FilterIntersection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.FilterIntersection.displayName = 'proto.RecordsAPI.FilterIntersection';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.FilterIntersection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.FilterIntersection.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.FilterIntersection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.FilterIntersection} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.FilterIntersection.toObject = function(includeInstance, msg) {
  var f, obj = {
    filterExpressionsList: jspb.Message.toObjectList(msg.getFilterExpressionsList(),
    proto.RecordsAPI.FilterExpression.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.FilterIntersection}
 */
proto.RecordsAPI.FilterIntersection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.FilterIntersection;
  return proto.RecordsAPI.FilterIntersection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.FilterIntersection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.FilterIntersection}
 */
proto.RecordsAPI.FilterIntersection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.FilterExpression;
      reader.readMessage(value,proto.RecordsAPI.FilterExpression.deserializeBinaryFromReader);
      msg.getFilterExpressionsList().push(value);
      msg.setFilterExpressionsList(msg.getFilterExpressionsList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.FilterIntersection} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.FilterIntersection.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.FilterIntersection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.FilterIntersection.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getFilterExpressionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.RecordsAPI.FilterExpression.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.FilterIntersection} The clone.
 */
proto.RecordsAPI.FilterIntersection.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.FilterIntersection} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated FilterExpression filter_expressions = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.RecordsAPI.FilterExpression>}
 */
proto.RecordsAPI.FilterIntersection.prototype.getFilterExpressionsList = function() {
  return /** @type{!Array.<!proto.RecordsAPI.FilterExpression>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RecordsAPI.FilterExpression, 1));
};


/** @param {Array.<!proto.RecordsAPI.FilterExpression>} value  */
proto.RecordsAPI.FilterIntersection.prototype.setFilterExpressionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.RecordsAPI.FilterIntersection.prototype.clearFilterExpressionsList = function() {
  this.setFilterExpressionsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.VarMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.VarMeta.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.VarMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.VarMeta.displayName = 'proto.RecordsAPI.VarMeta';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.VarMeta.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.VarMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.VarMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.VarMeta} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.VarMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    varId: msg.getVarId(),
    varName: msg.getVarName(),
    units: msg.getUnits(),
    siList: jspb.Message.getField(msg, 4),
    scale: msg.getScale(),
    type: msg.getType()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.VarMeta}
 */
proto.RecordsAPI.VarMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.VarMeta;
  return proto.RecordsAPI.VarMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.VarMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.VarMeta}
 */
proto.RecordsAPI.VarMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVarId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVarName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnits(value);
      break;
    case 4:
      var value = /** @type {!Array.<number>} */ (reader.readPackedSint32());
      msg.setSiList(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setScale(value);
      break;
    case 6:
      var value = /** @type {!proto.RecordsAPI.VarMeta.VariableType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.VarMeta} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.VarMeta.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.VarMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.VarMeta.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getVarId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = this.getVarName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getUnits();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getSiList();
  if (f.length > 0) {
    writer.writePackedSint32(
      4,
      f
    );
  }
  f = this.getScale();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = this.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.VarMeta} The clone.
 */
proto.RecordsAPI.VarMeta.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.VarMeta} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 var_id = 1;
 * @return {number}
 */
proto.RecordsAPI.VarMeta.prototype.getVarId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.RecordsAPI.VarMeta.prototype.setVarId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string var_name = 2;
 * @return {string}
 */
proto.RecordsAPI.VarMeta.prototype.getVarName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.RecordsAPI.VarMeta.prototype.setVarName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string units = 3;
 * @return {string}
 */
proto.RecordsAPI.VarMeta.prototype.getUnits = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.RecordsAPI.VarMeta.prototype.setUnits = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * repeated sint32 si = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.RecordsAPI.VarMeta.prototype.getSiList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 4));
};


/** @param {Array.<number>} value  */
proto.RecordsAPI.VarMeta.prototype.setSiList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


proto.RecordsAPI.VarMeta.prototype.clearSiList = function() {
  jspb.Message.setField(this, 4, []);
};


/**
 * optional double scale = 5;
 * @return {number}
 */
proto.RecordsAPI.VarMeta.prototype.getScale = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.RecordsAPI.VarMeta.prototype.setScale = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional VariableType type = 6;
 * @return {!proto.RecordsAPI.VarMeta.VariableType}
 */
proto.RecordsAPI.VarMeta.prototype.getType = function() {
  return /** @type {!proto.RecordsAPI.VarMeta.VariableType} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {!proto.RecordsAPI.VarMeta.VariableType} value  */
proto.RecordsAPI.VarMeta.prototype.setType = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * @enum {number}
 */
proto.RecordsAPI.VarMeta.VariableType = {
  REAL: 0,
  INTEGER: 1,
  STRING: 2
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.ModelMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.ModelMeta.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.ModelMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.ModelMeta.displayName = 'proto.RecordsAPI.ModelMeta';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.ModelMeta.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.ModelMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.ModelMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.ModelMeta} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.ModelMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelId: msg.getModelId(),
    modelName: msg.getModelName(),
    modelUri: msg.getModelUri(),
    variablesList: jspb.Message.toObjectList(msg.getVariablesList(),
    proto.RecordsAPI.VarMeta.toObject, includeInstance),
    inputsList: jspb.Message.toObjectList(msg.getInputsList(),
    proto.RecordsAPI.DomainMeta.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.ModelMeta}
 */
proto.RecordsAPI.ModelMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.ModelMeta;
  return proto.RecordsAPI.ModelMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.ModelMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.ModelMeta}
 */
proto.RecordsAPI.ModelMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelUri(value);
      break;
    case 4:
      var value = new proto.RecordsAPI.VarMeta;
      reader.readMessage(value,proto.RecordsAPI.VarMeta.deserializeBinaryFromReader);
      msg.getVariablesList().push(value);
      msg.setVariablesList(msg.getVariablesList());
      break;
    case 5:
      var value = new proto.RecordsAPI.DomainMeta;
      reader.readMessage(value,proto.RecordsAPI.DomainMeta.deserializeBinaryFromReader);
      msg.getInputsList().push(value);
      msg.setInputsList(msg.getInputsList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.ModelMeta} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.ModelMeta.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.ModelMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.ModelMeta.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getModelId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getModelName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getModelUri();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getVariablesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.RecordsAPI.VarMeta.serializeBinaryToWriter
    );
  }
  f = this.getInputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.RecordsAPI.DomainMeta.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.ModelMeta} The clone.
 */
proto.RecordsAPI.ModelMeta.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.ModelMeta} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string model_id = 1;
 * @return {string}
 */
proto.RecordsAPI.ModelMeta.prototype.getModelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.RecordsAPI.ModelMeta.prototype.setModelId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string model_name = 2;
 * @return {string}
 */
proto.RecordsAPI.ModelMeta.prototype.getModelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.RecordsAPI.ModelMeta.prototype.setModelName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string model_uri = 3;
 * @return {string}
 */
proto.RecordsAPI.ModelMeta.prototype.getModelUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.RecordsAPI.ModelMeta.prototype.setModelUri = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * repeated VarMeta variables = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.RecordsAPI.VarMeta>}
 */
proto.RecordsAPI.ModelMeta.prototype.getVariablesList = function() {
  return /** @type{!Array.<!proto.RecordsAPI.VarMeta>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RecordsAPI.VarMeta, 4));
};


/** @param {Array.<!proto.RecordsAPI.VarMeta>} value  */
proto.RecordsAPI.ModelMeta.prototype.setVariablesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


proto.RecordsAPI.ModelMeta.prototype.clearVariablesList = function() {
  this.setVariablesList([]);
};


/**
 * repeated DomainMeta inputs = 5;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.RecordsAPI.DomainMeta>}
 */
proto.RecordsAPI.ModelMeta.prototype.getInputsList = function() {
  return /** @type{!Array.<!proto.RecordsAPI.DomainMeta>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RecordsAPI.DomainMeta, 5));
};


/** @param {Array.<!proto.RecordsAPI.DomainMeta>} value  */
proto.RecordsAPI.ModelMeta.prototype.setInputsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


proto.RecordsAPI.ModelMeta.prototype.clearInputsList = function() {
  this.setInputsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.ModelMetaList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.ModelMetaList.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.ModelMetaList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.ModelMetaList.displayName = 'proto.RecordsAPI.ModelMetaList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.ModelMetaList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.ModelMetaList.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.ModelMetaList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.ModelMetaList} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.ModelMetaList.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelsList: jspb.Message.toObjectList(msg.getModelsList(),
    proto.RecordsAPI.ModelMeta.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.ModelMetaList}
 */
proto.RecordsAPI.ModelMetaList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.ModelMetaList;
  return proto.RecordsAPI.ModelMetaList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.ModelMetaList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.ModelMetaList}
 */
proto.RecordsAPI.ModelMetaList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.ModelMeta;
      reader.readMessage(value,proto.RecordsAPI.ModelMeta.deserializeBinaryFromReader);
      msg.getModelsList().push(value);
      msg.setModelsList(msg.getModelsList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.ModelMetaList} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.ModelMetaList.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.ModelMetaList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.ModelMetaList.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getModelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.RecordsAPI.ModelMeta.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.ModelMetaList} The clone.
 */
proto.RecordsAPI.ModelMetaList.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.ModelMetaList} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated ModelMeta models = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.RecordsAPI.ModelMeta>}
 */
proto.RecordsAPI.ModelMetaList.prototype.getModelsList = function() {
  return /** @type{!Array.<!proto.RecordsAPI.ModelMeta>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RecordsAPI.ModelMeta, 1));
};


/** @param {Array.<!proto.RecordsAPI.ModelMeta>} value  */
proto.RecordsAPI.ModelMetaList.prototype.setModelsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.RecordsAPI.ModelMetaList.prototype.clearModelsList = function() {
  this.setModelsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.VarInterval = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RecordsAPI.VarInterval, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.VarInterval.displayName = 'proto.RecordsAPI.VarInterval';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.VarInterval.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.VarInterval.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.VarInterval} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.VarInterval.toObject = function(includeInstance, msg) {
  var f, obj = {
    firstValue: (f = msg.getFirstValue()) && proto.RecordsAPI.Value.toObject(includeInstance, f),
    lastValue: (f = msg.getLastValue()) && proto.RecordsAPI.Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.VarInterval}
 */
proto.RecordsAPI.VarInterval.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.VarInterval;
  return proto.RecordsAPI.VarInterval.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.VarInterval} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.VarInterval}
 */
proto.RecordsAPI.VarInterval.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.Value;
      reader.readMessage(value,proto.RecordsAPI.Value.deserializeBinaryFromReader);
      msg.setFirstValue(value);
      break;
    case 2:
      var value = new proto.RecordsAPI.Value;
      reader.readMessage(value,proto.RecordsAPI.Value.deserializeBinaryFromReader);
      msg.setLastValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.VarInterval} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.VarInterval.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.VarInterval.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.VarInterval.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getFirstValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.RecordsAPI.Value.serializeBinaryToWriter
    );
  }
  f = this.getLastValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.RecordsAPI.Value.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.VarInterval} The clone.
 */
proto.RecordsAPI.VarInterval.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.VarInterval} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Value first_value = 1;
 * @return {proto.RecordsAPI.Value}
 */
proto.RecordsAPI.VarInterval.prototype.getFirstValue = function() {
  return /** @type{proto.RecordsAPI.Value} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.Value, 1));
};


/** @param {proto.RecordsAPI.Value|undefined} value  */
proto.RecordsAPI.VarInterval.prototype.setFirstValue = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.RecordsAPI.VarInterval.prototype.clearFirstValue = function() {
  this.setFirstValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.VarInterval.prototype.hasFirstValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Value last_value = 2;
 * @return {proto.RecordsAPI.Value}
 */
proto.RecordsAPI.VarInterval.prototype.getLastValue = function() {
  return /** @type{proto.RecordsAPI.Value} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.Value, 2));
};


/** @param {proto.RecordsAPI.Value|undefined} value  */
proto.RecordsAPI.VarInterval.prototype.setLastValue = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.RecordsAPI.VarInterval.prototype.clearLastValue = function() {
  this.setLastValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.VarInterval.prototype.hasLastValue = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.VarSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.VarSet.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.VarSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.VarSet.displayName = 'proto.RecordsAPI.VarSet';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.VarSet.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.VarSet.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.VarSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.VarSet} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.VarSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    elementsList: jspb.Message.toObjectList(msg.getElementsList(),
    proto.RecordsAPI.Value.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.VarSet}
 */
proto.RecordsAPI.VarSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.VarSet;
  return proto.RecordsAPI.VarSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.VarSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.VarSet}
 */
proto.RecordsAPI.VarSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.Value;
      reader.readMessage(value,proto.RecordsAPI.Value.deserializeBinaryFromReader);
      msg.getElementsList().push(value);
      msg.setElementsList(msg.getElementsList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.VarSet} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.VarSet.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.VarSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.VarSet.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getElementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.RecordsAPI.Value.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.VarSet} The clone.
 */
proto.RecordsAPI.VarSet.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.VarSet} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated Value elements = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.RecordsAPI.Value>}
 */
proto.RecordsAPI.VarSet.prototype.getElementsList = function() {
  return /** @type{!Array.<!proto.RecordsAPI.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RecordsAPI.Value, 1));
};


/** @param {Array.<!proto.RecordsAPI.Value>} value  */
proto.RecordsAPI.VarSet.prototype.setElementsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.RecordsAPI.VarSet.prototype.clearElementsList = function() {
  this.setElementsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.DomainMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.RecordsAPI.DomainMeta.oneofGroups_);
};
goog.inherits(proto.RecordsAPI.DomainMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.DomainMeta.displayName = 'proto.RecordsAPI.DomainMeta';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.RecordsAPI.DomainMeta.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.RecordsAPI.DomainMeta.DomainCase = {
  DOMAIN_NOT_SET: 0,
  INTERVAL: 2,
  SET: 3
};

/**
 * @return {proto.RecordsAPI.DomainMeta.DomainCase}
 */
proto.RecordsAPI.DomainMeta.prototype.getDomainCase = function() {
  return /** @type {proto.RecordsAPI.DomainMeta.DomainCase} */(jspb.Message.computeOneofCase(this, proto.RecordsAPI.DomainMeta.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.DomainMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.DomainMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.DomainMeta} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.DomainMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    varId: msg.getVarId(),
    interval: (f = msg.getInterval()) && proto.RecordsAPI.VarInterval.toObject(includeInstance, f),
    set: (f = msg.getSet()) && proto.RecordsAPI.VarSet.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.DomainMeta}
 */
proto.RecordsAPI.DomainMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.DomainMeta;
  return proto.RecordsAPI.DomainMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.DomainMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.DomainMeta}
 */
proto.RecordsAPI.DomainMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVarId(value);
      break;
    case 2:
      var value = new proto.RecordsAPI.VarInterval;
      reader.readMessage(value,proto.RecordsAPI.VarInterval.deserializeBinaryFromReader);
      msg.setInterval(value);
      break;
    case 3:
      var value = new proto.RecordsAPI.VarSet;
      reader.readMessage(value,proto.RecordsAPI.VarSet.deserializeBinaryFromReader);
      msg.setSet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.DomainMeta} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.DomainMeta.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.DomainMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.DomainMeta.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getVarId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = this.getInterval();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.RecordsAPI.VarInterval.serializeBinaryToWriter
    );
  }
  f = this.getSet();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.RecordsAPI.VarSet.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.DomainMeta} The clone.
 */
proto.RecordsAPI.DomainMeta.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.DomainMeta} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 var_id = 1;
 * @return {number}
 */
proto.RecordsAPI.DomainMeta.prototype.getVarId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.RecordsAPI.DomainMeta.prototype.setVarId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional VarInterval interval = 2;
 * @return {proto.RecordsAPI.VarInterval}
 */
proto.RecordsAPI.DomainMeta.prototype.getInterval = function() {
  return /** @type{proto.RecordsAPI.VarInterval} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.VarInterval, 2));
};


/** @param {proto.RecordsAPI.VarInterval|undefined} value  */
proto.RecordsAPI.DomainMeta.prototype.setInterval = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.RecordsAPI.DomainMeta.oneofGroups_[0], value);
};


proto.RecordsAPI.DomainMeta.prototype.clearInterval = function() {
  this.setInterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.DomainMeta.prototype.hasInterval = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional VarSet set = 3;
 * @return {proto.RecordsAPI.VarSet}
 */
proto.RecordsAPI.DomainMeta.prototype.getSet = function() {
  return /** @type{proto.RecordsAPI.VarSet} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.VarSet, 3));
};


/** @param {proto.RecordsAPI.VarSet|undefined} value  */
proto.RecordsAPI.DomainMeta.prototype.setSet = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.RecordsAPI.DomainMeta.oneofGroups_[0], value);
};


proto.RecordsAPI.DomainMeta.prototype.clearSet = function() {
  this.setSet(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.DomainMeta.prototype.hasSet = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.RequestWork = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.RequestWork.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.RequestWork, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.RequestWork.displayName = 'proto.RecordsAPI.RequestWork';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.RequestWork.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.RequestWork.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.RequestWork.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.RequestWork} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.RequestWork.toObject = function(includeInstance, msg) {
  var f, obj = {
    inputsList: jspb.Message.toObjectList(msg.getInputsList(),
    proto.RecordsAPI.VarValue.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.RequestWork}
 */
proto.RecordsAPI.RequestWork.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.RequestWork;
  return proto.RecordsAPI.RequestWork.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.RequestWork} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.RequestWork}
 */
proto.RecordsAPI.RequestWork.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.VarValue;
      reader.readMessage(value,proto.RecordsAPI.VarValue.deserializeBinaryFromReader);
      msg.getInputsList().push(value);
      msg.setInputsList(msg.getInputsList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.RequestWork} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RequestWork.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.RequestWork.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RequestWork.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.RecordsAPI.VarValue.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.RequestWork} The clone.
 */
proto.RecordsAPI.RequestWork.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.RequestWork} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated VarValue inputs = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.RecordsAPI.VarValue>}
 */
proto.RecordsAPI.RequestWork.prototype.getInputsList = function() {
  return /** @type{!Array.<!proto.RecordsAPI.VarValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RecordsAPI.VarValue, 1));
};


/** @param {Array.<!proto.RecordsAPI.VarValue>} value  */
proto.RecordsAPI.RequestWork.prototype.setInputsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.RecordsAPI.RequestWork.prototype.clearInputsList = function() {
  this.setInputsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.VarValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RecordsAPI.VarValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.VarValue.displayName = 'proto.RecordsAPI.VarValue';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.VarValue.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.VarValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.VarValue} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.VarValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    varId: msg.getVarId(),
    value: (f = msg.getValue()) && proto.RecordsAPI.Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.VarValue}
 */
proto.RecordsAPI.VarValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.VarValue;
  return proto.RecordsAPI.VarValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.VarValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.VarValue}
 */
proto.RecordsAPI.VarValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVarId(value);
      break;
    case 2:
      var value = new proto.RecordsAPI.Value;
      reader.readMessage(value,proto.RecordsAPI.Value.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.VarValue} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.VarValue.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.VarValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.VarValue.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getVarId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = this.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.RecordsAPI.Value.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.VarValue} The clone.
 */
proto.RecordsAPI.VarValue.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.VarValue} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 var_id = 1;
 * @return {number}
 */
proto.RecordsAPI.VarValue.prototype.getVarId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.RecordsAPI.VarValue.prototype.setVarId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional Value value = 2;
 * @return {proto.RecordsAPI.Value}
 */
proto.RecordsAPI.VarValue.prototype.getValue = function() {
  return /** @type{proto.RecordsAPI.Value} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.Value, 2));
};


/** @param {proto.RecordsAPI.Value|undefined} value  */
proto.RecordsAPI.VarValue.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.RecordsAPI.VarValue.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.VarValue.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.Record = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.Record.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.Record, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.Record.displayName = 'proto.RecordsAPI.Record';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.Record.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.Record.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.Record.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.Record} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.Record.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordId: msg.getRecordId(),
    variablesList: jspb.Message.toObjectList(msg.getVariablesList(),
    proto.RecordsAPI.VarValue.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.Record}
 */
proto.RecordsAPI.Record.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.Record;
  return proto.RecordsAPI.Record.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.Record} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.Record}
 */
proto.RecordsAPI.Record.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRecordId(value);
      break;
    case 2:
      var value = new proto.RecordsAPI.VarValue;
      reader.readMessage(value,proto.RecordsAPI.VarValue.deserializeBinaryFromReader);
      msg.getVariablesList().push(value);
      msg.setVariablesList(msg.getVariablesList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.Record} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.Record.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.Record.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.Record.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRecordId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getVariablesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.RecordsAPI.VarValue.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.Record} The clone.
 */
proto.RecordsAPI.Record.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.Record} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 record_id = 1;
 * @return {number}
 */
proto.RecordsAPI.Record.prototype.getRecordId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.RecordsAPI.Record.prototype.setRecordId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated VarValue variables = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.RecordsAPI.VarValue>}
 */
proto.RecordsAPI.Record.prototype.getVariablesList = function() {
  return /** @type{!Array.<!proto.RecordsAPI.VarValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RecordsAPI.VarValue, 2));
};


/** @param {Array.<!proto.RecordsAPI.VarValue>} value  */
proto.RecordsAPI.Record.prototype.setVariablesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


proto.RecordsAPI.Record.prototype.clearVariablesList = function() {
  this.setVariablesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.RecordList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.RecordList.repeatedFields_, null);
};
goog.inherits(proto.RecordsAPI.RecordList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.RecordList.displayName = 'proto.RecordsAPI.RecordList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.RecordList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.RecordList.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.RecordList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.RecordList} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.RecordList.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordsList: jspb.Message.toObjectList(msg.getRecordsList(),
    proto.RecordsAPI.Record.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.RecordList}
 */
proto.RecordsAPI.RecordList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.RecordList;
  return proto.RecordsAPI.RecordList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.RecordList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.RecordList}
 */
proto.RecordsAPI.RecordList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.Record;
      reader.readMessage(value,proto.RecordsAPI.Record.deserializeBinaryFromReader);
      msg.getRecordsList().push(value);
      msg.setRecordsList(msg.getRecordsList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.RecordList} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RecordList.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.RecordList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RecordList.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.RecordsAPI.Record.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.RecordList} The clone.
 */
proto.RecordsAPI.RecordList.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.RecordList} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated Record records = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.RecordsAPI.Record>}
 */
proto.RecordsAPI.RecordList.prototype.getRecordsList = function() {
  return /** @type{!Array.<!proto.RecordsAPI.Record>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RecordsAPI.Record, 1));
};


/** @param {Array.<!proto.RecordsAPI.Record>} value  */
proto.RecordsAPI.RecordList.prototype.setRecordsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.RecordsAPI.RecordList.prototype.clearRecordsList = function() {
  this.setRecordsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.RecordTable = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.RecordTable.repeatedFields_, proto.RecordsAPI.RecordTable.oneofGroups_);
};
goog.inherits(proto.RecordsAPI.RecordTable, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.RecordTable.displayName = 'proto.RecordsAPI.RecordTable';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.RecordTable.repeatedFields_ = [1,2];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.RecordsAPI.RecordTable.oneofGroups_ = [[3,4,5]];

/**
 * @enum {number}
 */
proto.RecordsAPI.RecordTable.ListCase = {
  LIST_NOT_SET: 0,
  REALS: 3,
  INTEGERS: 4,
  STRINGS: 5
};

/**
 * @return {proto.RecordsAPI.RecordTable.ListCase}
 */
proto.RecordsAPI.RecordTable.prototype.getListCase = function() {
  return /** @type {proto.RecordsAPI.RecordTable.ListCase} */(jspb.Message.computeOneofCase(this, proto.RecordsAPI.RecordTable.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.RecordTable.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.RecordTable.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.RecordTable} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.RecordTable.toObject = function(includeInstance, msg) {
  var f, obj = {
    varIdsList: jspb.Message.getField(msg, 1),
    recIdsList: jspb.Message.getField(msg, 2),
    reals: (f = msg.getReals()) && proto.RecordsAPI.DoubleList.toObject(includeInstance, f),
    integers: (f = msg.getIntegers()) && proto.RecordsAPI.IntegerList.toObject(includeInstance, f),
    strings: (f = msg.getStrings()) && proto.RecordsAPI.StringList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.RecordTable}
 */
proto.RecordsAPI.RecordTable.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.RecordTable;
  return proto.RecordsAPI.RecordTable.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.RecordTable} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.RecordTable}
 */
proto.RecordsAPI.RecordTable.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
      msg.setVarIdsList(value);
      break;
    case 2:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt64());
      msg.setRecIdsList(value);
      break;
    case 3:
      var value = new proto.RecordsAPI.DoubleList;
      reader.readMessage(value,proto.RecordsAPI.DoubleList.deserializeBinaryFromReader);
      msg.setReals(value);
      break;
    case 4:
      var value = new proto.RecordsAPI.IntegerList;
      reader.readMessage(value,proto.RecordsAPI.IntegerList.deserializeBinaryFromReader);
      msg.setIntegers(value);
      break;
    case 5:
      var value = new proto.RecordsAPI.StringList;
      reader.readMessage(value,proto.RecordsAPI.StringList.deserializeBinaryFromReader);
      msg.setStrings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.RecordTable} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RecordTable.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.RecordTable.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RecordTable.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getVarIdsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      1,
      f
    );
  }
  f = this.getRecIdsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      2,
      f
    );
  }
  f = this.getReals();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.RecordsAPI.DoubleList.serializeBinaryToWriter
    );
  }
  f = this.getIntegers();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.RecordsAPI.IntegerList.serializeBinaryToWriter
    );
  }
  f = this.getStrings();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.RecordsAPI.StringList.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.RecordTable} The clone.
 */
proto.RecordsAPI.RecordTable.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.RecordTable} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated int32 var_ids = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.RecordsAPI.RecordTable.prototype.getVarIdsList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 1));
};


/** @param {Array.<number>} value  */
proto.RecordsAPI.RecordTable.prototype.setVarIdsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


proto.RecordsAPI.RecordTable.prototype.clearVarIdsList = function() {
  jspb.Message.setField(this, 1, []);
};


/**
 * repeated int64 rec_ids = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.RecordsAPI.RecordTable.prototype.getRecIdsList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 2));
};


/** @param {Array.<number>} value  */
proto.RecordsAPI.RecordTable.prototype.setRecIdsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


proto.RecordsAPI.RecordTable.prototype.clearRecIdsList = function() {
  jspb.Message.setField(this, 2, []);
};


/**
 * optional DoubleList reals = 3;
 * @return {proto.RecordsAPI.DoubleList}
 */
proto.RecordsAPI.RecordTable.prototype.getReals = function() {
  return /** @type{proto.RecordsAPI.DoubleList} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.DoubleList, 3));
};


/** @param {proto.RecordsAPI.DoubleList|undefined} value  */
proto.RecordsAPI.RecordTable.prototype.setReals = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.RecordsAPI.RecordTable.oneofGroups_[0], value);
};


proto.RecordsAPI.RecordTable.prototype.clearReals = function() {
  this.setReals(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.RecordTable.prototype.hasReals = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional IntegerList integers = 4;
 * @return {proto.RecordsAPI.IntegerList}
 */
proto.RecordsAPI.RecordTable.prototype.getIntegers = function() {
  return /** @type{proto.RecordsAPI.IntegerList} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.IntegerList, 4));
};


/** @param {proto.RecordsAPI.IntegerList|undefined} value  */
proto.RecordsAPI.RecordTable.prototype.setIntegers = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.RecordsAPI.RecordTable.oneofGroups_[0], value);
};


proto.RecordsAPI.RecordTable.prototype.clearIntegers = function() {
  this.setIntegers(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.RecordTable.prototype.hasIntegers = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional StringList strings = 5;
 * @return {proto.RecordsAPI.StringList}
 */
proto.RecordsAPI.RecordTable.prototype.getStrings = function() {
  return /** @type{proto.RecordsAPI.StringList} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.StringList, 5));
};


/** @param {proto.RecordsAPI.StringList|undefined} value  */
proto.RecordsAPI.RecordTable.prototype.setStrings = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.RecordsAPI.RecordTable.oneofGroups_[0], value);
};


proto.RecordsAPI.RecordTable.prototype.clearStrings = function() {
  this.setStrings(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.RecordTable.prototype.hasStrings = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.RecordData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.RecordsAPI.RecordData.oneofGroups_);
};
goog.inherits(proto.RecordsAPI.RecordData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.RecordData.displayName = 'proto.RecordsAPI.RecordData';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.RecordsAPI.RecordData.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.RecordsAPI.RecordData.StyleCase = {
  STYLE_NOT_SET: 0,
  LIST: 1,
  TABLE: 2
};

/**
 * @return {proto.RecordsAPI.RecordData.StyleCase}
 */
proto.RecordsAPI.RecordData.prototype.getStyleCase = function() {
  return /** @type {proto.RecordsAPI.RecordData.StyleCase} */(jspb.Message.computeOneofCase(this, proto.RecordsAPI.RecordData.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.RecordData.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.RecordData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.RecordData} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.RecordData.toObject = function(includeInstance, msg) {
  var f, obj = {
    list: (f = msg.getList()) && proto.RecordsAPI.RecordList.toObject(includeInstance, f),
    table: (f = msg.getTable()) && proto.RecordsAPI.RecordTable.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.RecordData}
 */
proto.RecordsAPI.RecordData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.RecordData;
  return proto.RecordsAPI.RecordData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.RecordData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.RecordData}
 */
proto.RecordsAPI.RecordData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.RecordList;
      reader.readMessage(value,proto.RecordsAPI.RecordList.deserializeBinaryFromReader);
      msg.setList(value);
      break;
    case 2:
      var value = new proto.RecordsAPI.RecordTable;
      reader.readMessage(value,proto.RecordsAPI.RecordTable.deserializeBinaryFromReader);
      msg.setTable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.RecordData} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RecordData.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.RecordData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RecordData.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getList();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.RecordsAPI.RecordList.serializeBinaryToWriter
    );
  }
  f = this.getTable();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.RecordsAPI.RecordTable.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.RecordData} The clone.
 */
proto.RecordsAPI.RecordData.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.RecordData} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional RecordList list = 1;
 * @return {proto.RecordsAPI.RecordList}
 */
proto.RecordsAPI.RecordData.prototype.getList = function() {
  return /** @type{proto.RecordsAPI.RecordList} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.RecordList, 1));
};


/** @param {proto.RecordsAPI.RecordList|undefined} value  */
proto.RecordsAPI.RecordData.prototype.setList = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.RecordsAPI.RecordData.oneofGroups_[0], value);
};


proto.RecordsAPI.RecordData.prototype.clearList = function() {
  this.setList(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.RecordData.prototype.hasList = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RecordTable table = 2;
 * @return {proto.RecordsAPI.RecordTable}
 */
proto.RecordsAPI.RecordData.prototype.getTable = function() {
  return /** @type{proto.RecordsAPI.RecordTable} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.RecordTable, 2));
};


/** @param {proto.RecordsAPI.RecordTable|undefined} value  */
proto.RecordsAPI.RecordData.prototype.setTable = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.RecordsAPI.RecordData.oneofGroups_[0], value);
};


proto.RecordsAPI.RecordData.prototype.clearTable = function() {
  this.setTable(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.RecordData.prototype.hasTable = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.RecordsAPI.Response.oneofGroups_);
};
goog.inherits(proto.RecordsAPI.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.Response.displayName = 'proto.RecordsAPI.Response';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.RecordsAPI.Response.oneofGroups_ = [[5,6,7,8]];

/**
 * @enum {number}
 */
proto.RecordsAPI.Response.TypeCase = {
  TYPE_NOT_SET: 0,
  ERROR: 5,
  MODELS: 6,
  DATA: 7,
  BOOKMARKS: 8
};

/**
 * @return {proto.RecordsAPI.Response.TypeCase}
 */
proto.RecordsAPI.Response.prototype.getTypeCase = function() {
  return /** @type {proto.RecordsAPI.Response.TypeCase} */(jspb.Message.computeOneofCase(this, proto.RecordsAPI.Response.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.Response} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: msg.getVersion(),
    id: (f = msg.getId()) && proto.RecordsAPI.OptionalUInt32.toObject(includeInstance, f),
    chunkId: msg.getChunkId(),
    nextChunkId: msg.getNextChunkId(),
    error: jspb.Message.getField(msg, 5),
    models: (f = msg.getModels()) && proto.RecordsAPI.ModelMetaList.toObject(includeInstance, f),
    data: (f = msg.getData()) && proto.RecordsAPI.RecordData.toObject(includeInstance, f),
    bookmarks: (f = msg.getBookmarks()) && proto.RecordsAPI.BookmarkMetaList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.Response}
 */
proto.RecordsAPI.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.Response;
  return proto.RecordsAPI.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.Response}
 */
proto.RecordsAPI.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVersion(value);
      break;
    case 2:
      var value = new proto.RecordsAPI.OptionalUInt32;
      reader.readMessage(value,proto.RecordsAPI.OptionalUInt32.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChunkId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNextChunkId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    case 6:
      var value = new proto.RecordsAPI.ModelMetaList;
      reader.readMessage(value,proto.RecordsAPI.ModelMetaList.deserializeBinaryFromReader);
      msg.setModels(value);
      break;
    case 7:
      var value = new proto.RecordsAPI.RecordData;
      reader.readMessage(value,proto.RecordsAPI.RecordData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 8:
      var value = new proto.RecordsAPI.BookmarkMetaList;
      reader.readMessage(value,proto.RecordsAPI.BookmarkMetaList.deserializeBinaryFromReader);
      msg.setBookmarks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.Response} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.Response.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.Response.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getVersion();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = this.getId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.RecordsAPI.OptionalUInt32.serializeBinaryToWriter
    );
  }
  f = this.getChunkId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = this.getNextChunkId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = jspb.Message.getField(this, 5);
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getModels();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.RecordsAPI.ModelMetaList.serializeBinaryToWriter
    );
  }
  f = this.getData();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.RecordsAPI.RecordData.serializeBinaryToWriter
    );
  }
  f = this.getBookmarks();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.RecordsAPI.BookmarkMetaList.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.Response} The clone.
 */
proto.RecordsAPI.Response.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.Response} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional uint32 version = 1;
 * @return {number}
 */
proto.RecordsAPI.Response.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.RecordsAPI.Response.prototype.setVersion = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional OptionalUInt32 id = 2;
 * @return {proto.RecordsAPI.OptionalUInt32}
 */
proto.RecordsAPI.Response.prototype.getId = function() {
  return /** @type{proto.RecordsAPI.OptionalUInt32} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.OptionalUInt32, 2));
};


/** @param {proto.RecordsAPI.OptionalUInt32|undefined} value  */
proto.RecordsAPI.Response.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.RecordsAPI.Response.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Response.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 chunk_id = 3;
 * @return {number}
 */
proto.RecordsAPI.Response.prototype.getChunkId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.RecordsAPI.Response.prototype.setChunkId = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 next_chunk_id = 4;
 * @return {number}
 */
proto.RecordsAPI.Response.prototype.getNextChunkId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.RecordsAPI.Response.prototype.setNextChunkId = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string error = 5;
 * @return {string}
 */
proto.RecordsAPI.Response.prototype.getError = function() {
  return /** @type {string} */ (!this.hasError() ? "" : jspb.Message.getField(this, 5));
};


/** @param {string?|undefined} value  */
proto.RecordsAPI.Response.prototype.setError = function(value) {
  jspb.Message.setOneofField(this, 5, proto.RecordsAPI.Response.oneofGroups_[0], value);
};


proto.RecordsAPI.Response.prototype.clearError = function() {
  jspb.Message.setOneofField(this, 5, proto.RecordsAPI.Response.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Response.prototype.hasError = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ModelMetaList models = 6;
 * @return {proto.RecordsAPI.ModelMetaList}
 */
proto.RecordsAPI.Response.prototype.getModels = function() {
  return /** @type{proto.RecordsAPI.ModelMetaList} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.ModelMetaList, 6));
};


/** @param {proto.RecordsAPI.ModelMetaList|undefined} value  */
proto.RecordsAPI.Response.prototype.setModels = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.RecordsAPI.Response.oneofGroups_[0], value);
};


proto.RecordsAPI.Response.prototype.clearModels = function() {
  this.setModels(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Response.prototype.hasModels = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional RecordData data = 7;
 * @return {proto.RecordsAPI.RecordData}
 */
proto.RecordsAPI.Response.prototype.getData = function() {
  return /** @type{proto.RecordsAPI.RecordData} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.RecordData, 7));
};


/** @param {proto.RecordsAPI.RecordData|undefined} value  */
proto.RecordsAPI.Response.prototype.setData = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.RecordsAPI.Response.oneofGroups_[0], value);
};


proto.RecordsAPI.Response.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Response.prototype.hasData = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional BookmarkMetaList bookmarks = 8;
 * @return {proto.RecordsAPI.BookmarkMetaList}
 */
proto.RecordsAPI.Response.prototype.getBookmarks = function() {
  return /** @type{proto.RecordsAPI.BookmarkMetaList} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.BookmarkMetaList, 8));
};


/** @param {proto.RecordsAPI.BookmarkMetaList|undefined} value  */
proto.RecordsAPI.Response.prototype.setBookmarks = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.RecordsAPI.Response.oneofGroups_[0], value);
};


proto.RecordsAPI.Response.prototype.clearBookmarks = function() {
  this.setBookmarks(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Response.prototype.hasBookmarks = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.RequestModelsMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RecordsAPI.RequestModelsMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.RequestModelsMeta.displayName = 'proto.RecordsAPI.RequestModelsMeta';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.RequestModelsMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.RequestModelsMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.RequestModelsMeta} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.RequestModelsMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelId: (f = msg.getModelId()) && proto.RecordsAPI.OptionalString.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.RequestModelsMeta}
 */
proto.RecordsAPI.RequestModelsMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.RequestModelsMeta;
  return proto.RecordsAPI.RequestModelsMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.RequestModelsMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.RequestModelsMeta}
 */
proto.RecordsAPI.RequestModelsMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.OptionalString;
      reader.readMessage(value,proto.RecordsAPI.OptionalString.deserializeBinaryFromReader);
      msg.setModelId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.RequestModelsMeta} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RequestModelsMeta.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.RequestModelsMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RequestModelsMeta.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getModelId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.RecordsAPI.OptionalString.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.RequestModelsMeta} The clone.
 */
proto.RecordsAPI.RequestModelsMeta.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.RequestModelsMeta} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional OptionalString model_id = 1;
 * @return {proto.RecordsAPI.OptionalString}
 */
proto.RecordsAPI.RequestModelsMeta.prototype.getModelId = function() {
  return /** @type{proto.RecordsAPI.OptionalString} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.OptionalString, 1));
};


/** @param {proto.RecordsAPI.OptionalString|undefined} value  */
proto.RecordsAPI.RequestModelsMeta.prototype.setModelId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.RecordsAPI.RequestModelsMeta.prototype.clearModelId = function() {
  this.setModelId(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.RequestModelsMeta.prototype.hasModelId = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.RequestRecordsData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecordsAPI.RequestRecordsData.repeatedFields_, proto.RecordsAPI.RequestRecordsData.oneofGroups_);
};
goog.inherits(proto.RecordsAPI.RequestRecordsData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.RequestRecordsData.displayName = 'proto.RecordsAPI.RequestRecordsData';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecordsAPI.RequestRecordsData.repeatedFields_ = [3];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.RecordsAPI.RequestRecordsData.oneofGroups_ = [[4,5]];

/**
 * @enum {number}
 */
proto.RecordsAPI.RequestRecordsData.FilterCase = {
  FILTER_NOT_SET: 0,
  BOOKMARK_ID: 4,
  EXPRESSION: 5
};

/**
 * @return {proto.RecordsAPI.RequestRecordsData.FilterCase}
 */
proto.RecordsAPI.RequestRecordsData.prototype.getFilterCase = function() {
  return /** @type {proto.RecordsAPI.RequestRecordsData.FilterCase} */(jspb.Message.computeOneofCase(this, proto.RecordsAPI.RequestRecordsData.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.RequestRecordsData.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.RequestRecordsData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.RequestRecordsData} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.RequestRecordsData.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelId: msg.getModelId(),
    maxRecords: msg.getMaxRecords(),
    varIdsList: jspb.Message.getField(msg, 3),
    bookmarkId: jspb.Message.getField(msg, 4),
    expression: (f = msg.getExpression()) && proto.RecordsAPI.FilterExpression.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.RequestRecordsData}
 */
proto.RecordsAPI.RequestRecordsData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.RequestRecordsData;
  return proto.RecordsAPI.RequestRecordsData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.RequestRecordsData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.RequestRecordsData}
 */
proto.RecordsAPI.RequestRecordsData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxRecords(value);
      break;
    case 3:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
      msg.setVarIdsList(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookmarkId(value);
      break;
    case 5:
      var value = new proto.RecordsAPI.FilterExpression;
      reader.readMessage(value,proto.RecordsAPI.FilterExpression.deserializeBinaryFromReader);
      msg.setExpression(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.RequestRecordsData} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RequestRecordsData.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.RequestRecordsData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RequestRecordsData.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getModelId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getMaxRecords();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = this.getVarIdsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
  f = jspb.Message.getField(this, 4);
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getExpression();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.RecordsAPI.FilterExpression.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.RequestRecordsData} The clone.
 */
proto.RecordsAPI.RequestRecordsData.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.RequestRecordsData} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string model_id = 1;
 * @return {string}
 */
proto.RecordsAPI.RequestRecordsData.prototype.getModelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.RecordsAPI.RequestRecordsData.prototype.setModelId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint64 max_records = 2;
 * @return {number}
 */
proto.RecordsAPI.RequestRecordsData.prototype.getMaxRecords = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.RecordsAPI.RequestRecordsData.prototype.setMaxRecords = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * repeated int32 var_ids = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.RecordsAPI.RequestRecordsData.prototype.getVarIdsList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 3));
};


/** @param {Array.<number>} value  */
proto.RecordsAPI.RequestRecordsData.prototype.setVarIdsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


proto.RecordsAPI.RequestRecordsData.prototype.clearVarIdsList = function() {
  jspb.Message.setField(this, 3, []);
};


/**
 * optional string bookmark_id = 4;
 * @return {string}
 */
proto.RecordsAPI.RequestRecordsData.prototype.getBookmarkId = function() {
  return /** @type {string} */ (!this.hasBookmarkId() ? "" : jspb.Message.getField(this, 4));
};


/** @param {string?|undefined} value  */
proto.RecordsAPI.RequestRecordsData.prototype.setBookmarkId = function(value) {
  jspb.Message.setOneofField(this, 4, proto.RecordsAPI.RequestRecordsData.oneofGroups_[0], value);
};


proto.RecordsAPI.RequestRecordsData.prototype.clearBookmarkId = function() {
  jspb.Message.setOneofField(this, 4, proto.RecordsAPI.RequestRecordsData.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.RequestRecordsData.prototype.hasBookmarkId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional FilterExpression expression = 5;
 * @return {proto.RecordsAPI.FilterExpression}
 */
proto.RecordsAPI.RequestRecordsData.prototype.getExpression = function() {
  return /** @type{proto.RecordsAPI.FilterExpression} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.FilterExpression, 5));
};


/** @param {proto.RecordsAPI.FilterExpression|undefined} value  */
proto.RecordsAPI.RequestRecordsData.prototype.setExpression = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.RecordsAPI.RequestRecordsData.oneofGroups_[0], value);
};


proto.RecordsAPI.RequestRecordsData.prototype.clearExpression = function() {
  this.setExpression(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.RequestRecordsData.prototype.hasExpression = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.RequestCancel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RecordsAPI.RequestCancel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.RequestCancel.displayName = 'proto.RecordsAPI.RequestCancel';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.RequestCancel.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.RequestCancel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.RequestCancel} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.RequestCancel.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto.RecordsAPI.OptionalUInt32.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.RequestCancel}
 */
proto.RecordsAPI.RequestCancel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.RequestCancel;
  return proto.RecordsAPI.RequestCancel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.RequestCancel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.RequestCancel}
 */
proto.RecordsAPI.RequestCancel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecordsAPI.OptionalUInt32;
      reader.readMessage(value,proto.RecordsAPI.OptionalUInt32.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.RequestCancel} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RequestCancel.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.RequestCancel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.RequestCancel.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.RecordsAPI.OptionalUInt32.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.RequestCancel} The clone.
 */
proto.RecordsAPI.RequestCancel.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.RequestCancel} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional OptionalUInt32 id = 1;
 * @return {proto.RecordsAPI.OptionalUInt32}
 */
proto.RecordsAPI.RequestCancel.prototype.getId = function() {
  return /** @type{proto.RecordsAPI.OptionalUInt32} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.OptionalUInt32, 1));
};


/** @param {proto.RecordsAPI.OptionalUInt32|undefined} value  */
proto.RecordsAPI.RequestCancel.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.RecordsAPI.RequestCancel.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.RequestCancel.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecordsAPI.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.RecordsAPI.Request.oneofGroups_);
};
goog.inherits(proto.RecordsAPI.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecordsAPI.Request.displayName = 'proto.RecordsAPI.Request';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.RecordsAPI.Request.oneofGroups_ = [[4,5,6,7,8,9]];

/**
 * @enum {number}
 */
proto.RecordsAPI.Request.TypeCase = {
  TYPE_NOT_SET: 0,
  MODELS_METADATA: 4,
  RECORDS_DATA: 5,
  BOOKMARK_META: 6,
  SAVE_BOOKMARK: 7,
  CANCEL: 8,
  WORK: 9
};

/**
 * @return {proto.RecordsAPI.Request.TypeCase}
 */
proto.RecordsAPI.Request.prototype.getTypeCase = function() {
  return /** @type {proto.RecordsAPI.Request.TypeCase} */(jspb.Message.computeOneofCase(this, proto.RecordsAPI.Request.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecordsAPI.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.RecordsAPI.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecordsAPI.Request} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RecordsAPI.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: msg.getVersion(),
    id: (f = msg.getId()) && proto.RecordsAPI.OptionalUInt32.toObject(includeInstance, f),
    subscribe: msg.getSubscribe(),
    modelsMetadata: (f = msg.getModelsMetadata()) && proto.RecordsAPI.RequestModelsMeta.toObject(includeInstance, f),
    recordsData: (f = msg.getRecordsData()) && proto.RecordsAPI.RequestRecordsData.toObject(includeInstance, f),
    bookmarkMeta: (f = msg.getBookmarkMeta()) && proto.RecordsAPI.RequestBookmarkMeta.toObject(includeInstance, f),
    saveBookmark: (f = msg.getSaveBookmark()) && proto.RecordsAPI.RequestSaveBookmark.toObject(includeInstance, f),
    cancel: (f = msg.getCancel()) && proto.RecordsAPI.RequestCancel.toObject(includeInstance, f),
    work: (f = msg.getWork()) && proto.RecordsAPI.RequestWork.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecordsAPI.Request}
 */
proto.RecordsAPI.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecordsAPI.Request;
  return proto.RecordsAPI.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecordsAPI.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecordsAPI.Request}
 */
proto.RecordsAPI.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVersion(value);
      break;
    case 2:
      var value = new proto.RecordsAPI.OptionalUInt32;
      reader.readMessage(value,proto.RecordsAPI.OptionalUInt32.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSubscribe(value);
      break;
    case 4:
      var value = new proto.RecordsAPI.RequestModelsMeta;
      reader.readMessage(value,proto.RecordsAPI.RequestModelsMeta.deserializeBinaryFromReader);
      msg.setModelsMetadata(value);
      break;
    case 5:
      var value = new proto.RecordsAPI.RequestRecordsData;
      reader.readMessage(value,proto.RecordsAPI.RequestRecordsData.deserializeBinaryFromReader);
      msg.setRecordsData(value);
      break;
    case 6:
      var value = new proto.RecordsAPI.RequestBookmarkMeta;
      reader.readMessage(value,proto.RecordsAPI.RequestBookmarkMeta.deserializeBinaryFromReader);
      msg.setBookmarkMeta(value);
      break;
    case 7:
      var value = new proto.RecordsAPI.RequestSaveBookmark;
      reader.readMessage(value,proto.RecordsAPI.RequestSaveBookmark.deserializeBinaryFromReader);
      msg.setSaveBookmark(value);
      break;
    case 8:
      var value = new proto.RecordsAPI.RequestCancel;
      reader.readMessage(value,proto.RecordsAPI.RequestCancel.deserializeBinaryFromReader);
      msg.setCancel(value);
      break;
    case 9:
      var value = new proto.RecordsAPI.RequestWork;
      reader.readMessage(value,proto.RecordsAPI.RequestWork.deserializeBinaryFromReader);
      msg.setWork(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.RecordsAPI.Request} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.Request.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecordsAPI.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.RecordsAPI.Request.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getVersion();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = this.getId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.RecordsAPI.OptionalUInt32.serializeBinaryToWriter
    );
  }
  f = this.getSubscribe();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = this.getModelsMetadata();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.RecordsAPI.RequestModelsMeta.serializeBinaryToWriter
    );
  }
  f = this.getRecordsData();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.RecordsAPI.RequestRecordsData.serializeBinaryToWriter
    );
  }
  f = this.getBookmarkMeta();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.RecordsAPI.RequestBookmarkMeta.serializeBinaryToWriter
    );
  }
  f = this.getSaveBookmark();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.RecordsAPI.RequestSaveBookmark.serializeBinaryToWriter
    );
  }
  f = this.getCancel();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.RecordsAPI.RequestCancel.serializeBinaryToWriter
    );
  }
  f = this.getWork();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.RecordsAPI.RequestWork.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.RecordsAPI.Request} The clone.
 */
proto.RecordsAPI.Request.prototype.cloneMessage = function() {
  return /** @type {!proto.RecordsAPI.Request} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional uint32 version = 1;
 * @return {number}
 */
proto.RecordsAPI.Request.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.RecordsAPI.Request.prototype.setVersion = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional OptionalUInt32 id = 2;
 * @return {proto.RecordsAPI.OptionalUInt32}
 */
proto.RecordsAPI.Request.prototype.getId = function() {
  return /** @type{proto.RecordsAPI.OptionalUInt32} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.OptionalUInt32, 2));
};


/** @param {proto.RecordsAPI.OptionalUInt32|undefined} value  */
proto.RecordsAPI.Request.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.RecordsAPI.Request.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Request.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool subscribe = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.RecordsAPI.Request.prototype.getSubscribe = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 3, false));
};


/** @param {boolean} value  */
proto.RecordsAPI.Request.prototype.setSubscribe = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional RequestModelsMeta models_metadata = 4;
 * @return {proto.RecordsAPI.RequestModelsMeta}
 */
proto.RecordsAPI.Request.prototype.getModelsMetadata = function() {
  return /** @type{proto.RecordsAPI.RequestModelsMeta} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.RequestModelsMeta, 4));
};


/** @param {proto.RecordsAPI.RequestModelsMeta|undefined} value  */
proto.RecordsAPI.Request.prototype.setModelsMetadata = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.RecordsAPI.Request.oneofGroups_[0], value);
};


proto.RecordsAPI.Request.prototype.clearModelsMetadata = function() {
  this.setModelsMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Request.prototype.hasModelsMetadata = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional RequestRecordsData records_data = 5;
 * @return {proto.RecordsAPI.RequestRecordsData}
 */
proto.RecordsAPI.Request.prototype.getRecordsData = function() {
  return /** @type{proto.RecordsAPI.RequestRecordsData} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.RequestRecordsData, 5));
};


/** @param {proto.RecordsAPI.RequestRecordsData|undefined} value  */
proto.RecordsAPI.Request.prototype.setRecordsData = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.RecordsAPI.Request.oneofGroups_[0], value);
};


proto.RecordsAPI.Request.prototype.clearRecordsData = function() {
  this.setRecordsData(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Request.prototype.hasRecordsData = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional RequestBookmarkMeta bookmark_meta = 6;
 * @return {proto.RecordsAPI.RequestBookmarkMeta}
 */
proto.RecordsAPI.Request.prototype.getBookmarkMeta = function() {
  return /** @type{proto.RecordsAPI.RequestBookmarkMeta} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.RequestBookmarkMeta, 6));
};


/** @param {proto.RecordsAPI.RequestBookmarkMeta|undefined} value  */
proto.RecordsAPI.Request.prototype.setBookmarkMeta = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.RecordsAPI.Request.oneofGroups_[0], value);
};


proto.RecordsAPI.Request.prototype.clearBookmarkMeta = function() {
  this.setBookmarkMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Request.prototype.hasBookmarkMeta = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional RequestSaveBookmark save_bookmark = 7;
 * @return {proto.RecordsAPI.RequestSaveBookmark}
 */
proto.RecordsAPI.Request.prototype.getSaveBookmark = function() {
  return /** @type{proto.RecordsAPI.RequestSaveBookmark} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.RequestSaveBookmark, 7));
};


/** @param {proto.RecordsAPI.RequestSaveBookmark|undefined} value  */
proto.RecordsAPI.Request.prototype.setSaveBookmark = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.RecordsAPI.Request.oneofGroups_[0], value);
};


proto.RecordsAPI.Request.prototype.clearSaveBookmark = function() {
  this.setSaveBookmark(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Request.prototype.hasSaveBookmark = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional RequestCancel cancel = 8;
 * @return {proto.RecordsAPI.RequestCancel}
 */
proto.RecordsAPI.Request.prototype.getCancel = function() {
  return /** @type{proto.RecordsAPI.RequestCancel} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.RequestCancel, 8));
};


/** @param {proto.RecordsAPI.RequestCancel|undefined} value  */
proto.RecordsAPI.Request.prototype.setCancel = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.RecordsAPI.Request.oneofGroups_[0], value);
};


proto.RecordsAPI.Request.prototype.clearCancel = function() {
  this.setCancel(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Request.prototype.hasCancel = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional RequestWork work = 9;
 * @return {proto.RecordsAPI.RequestWork}
 */
proto.RecordsAPI.Request.prototype.getWork = function() {
  return /** @type{proto.RecordsAPI.RequestWork} */ (
    jspb.Message.getWrapperField(this, proto.RecordsAPI.RequestWork, 9));
};


/** @param {proto.RecordsAPI.RequestWork|undefined} value  */
proto.RecordsAPI.Request.prototype.setWork = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.RecordsAPI.Request.oneofGroups_[0], value);
};


proto.RecordsAPI.Request.prototype.clearWork = function() {
  this.setWork(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.RecordsAPI.Request.prototype.hasWork = function() {
  return jspb.Message.getField(this, 9) != null;
};


goog.object.extend(exports, proto.RecordsAPI);
